
4YP_Software.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000067d8  00400000  00400000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000001d0  20400000  004067d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000110  204001d0  004069a8  000201d0  2**2
                  ALLOC
  3 .heap         00000200  204002e0  00406ab8  000201d0  2**0
                  ALLOC
  4 .stack        00000400  204004e0  00406cb8  000201d0  2**0
                  ALLOC
  5 .ARM.attributes 0000002e  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000201fe  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001e2bc  00000000  00000000  00020257  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003fa9  00000000  00000000  0003e513  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00008e0f  00000000  00000000  000424bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000b08  00000000  00000000  0004b2cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000950  00000000  00000000  0004bdd3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000448e4  00000000  00000000  0004c723  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001913e  00000000  00000000  00091007  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00153525  00000000  00000000  000aa145  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002a9c  00000000  00000000  001fd66c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	e0 08 40 20 01 05 40 00 fd 04 40 00 fd 04 40 00     ..@ ..@...@...@.
  400010:	fd 04 40 00 fd 04 40 00 fd 04 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	fd 04 40 00 fd 04 40 00 00 00 00 00 fd 04 40 00     ..@...@.......@.
  40003c:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  40004c:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  40005c:	fd 04 40 00 fd 04 40 00 00 00 00 00 61 12 40 00     ..@...@.....a.@.
  40006c:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  40007c:	fd 04 40 00 55 12 40 00 fd 04 40 00 fd 04 40 00     ..@.U.@...@...@.
  40008c:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  40009c:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  4000ac:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  4000bc:	ad 13 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  4000cc:	fd 04 40 00 fd 04 40 00 25 10 40 00 fd 04 40 00     ..@...@.%.@...@.
  4000dc:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  4000ec:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  4000fc:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  40010c:	fd 04 40 00 fd 04 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ......@...@...@.
  40012c:	fd 04 40 00 c1 13 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  40013c:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  40014c:	fd 04 40 00 fd 04 40 00 fd 04 40 00 fd 04 40 00     ..@...@...@...@.
  40015c:	fd 04 40 00 fd 04 40 00 fd 04 40 00                 ..@...@...@.

00400168 <__do_global_dtors_aux>:
  400168:	b510      	push	{r4, lr}
  40016a:	4c05      	ldr	r4, [pc, #20]	; (400180 <__do_global_dtors_aux+0x18>)
  40016c:	7823      	ldrb	r3, [r4, #0]
  40016e:	b933      	cbnz	r3, 40017e <__do_global_dtors_aux+0x16>
  400170:	4b04      	ldr	r3, [pc, #16]	; (400184 <__do_global_dtors_aux+0x1c>)
  400172:	b113      	cbz	r3, 40017a <__do_global_dtors_aux+0x12>
  400174:	4804      	ldr	r0, [pc, #16]	; (400188 <__do_global_dtors_aux+0x20>)
  400176:	f3af 8000 	nop.w
  40017a:	2301      	movs	r3, #1
  40017c:	7023      	strb	r3, [r4, #0]
  40017e:	bd10      	pop	{r4, pc}
  400180:	204001d0 	.word	0x204001d0
  400184:	00000000 	.word	0x00000000
  400188:	004067d8 	.word	0x004067d8

0040018c <frame_dummy>:
  40018c:	4b0c      	ldr	r3, [pc, #48]	; (4001c0 <frame_dummy+0x34>)
  40018e:	b143      	cbz	r3, 4001a2 <frame_dummy+0x16>
  400190:	480c      	ldr	r0, [pc, #48]	; (4001c4 <frame_dummy+0x38>)
  400192:	490d      	ldr	r1, [pc, #52]	; (4001c8 <frame_dummy+0x3c>)
  400194:	b510      	push	{r4, lr}
  400196:	f3af 8000 	nop.w
  40019a:	480c      	ldr	r0, [pc, #48]	; (4001cc <frame_dummy+0x40>)
  40019c:	6803      	ldr	r3, [r0, #0]
  40019e:	b923      	cbnz	r3, 4001aa <frame_dummy+0x1e>
  4001a0:	bd10      	pop	{r4, pc}
  4001a2:	480a      	ldr	r0, [pc, #40]	; (4001cc <frame_dummy+0x40>)
  4001a4:	6803      	ldr	r3, [r0, #0]
  4001a6:	b933      	cbnz	r3, 4001b6 <frame_dummy+0x2a>
  4001a8:	4770      	bx	lr
  4001aa:	4b09      	ldr	r3, [pc, #36]	; (4001d0 <frame_dummy+0x44>)
  4001ac:	2b00      	cmp	r3, #0
  4001ae:	d0f7      	beq.n	4001a0 <frame_dummy+0x14>
  4001b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4001b4:	4718      	bx	r3
  4001b6:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <frame_dummy+0x44>)
  4001b8:	2b00      	cmp	r3, #0
  4001ba:	d0f5      	beq.n	4001a8 <frame_dummy+0x1c>
  4001bc:	4718      	bx	r3
  4001be:	bf00      	nop
  4001c0:	00000000 	.word	0x00000000
  4001c4:	004067d8 	.word	0x004067d8
  4001c8:	204001d4 	.word	0x204001d4
  4001cc:	004067d8 	.word	0x004067d8
  4001d0:	00000000 	.word	0x00000000

004001d4 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
  4001d4:	b508      	push	{r3, lr}
	system_init();
  4001d6:	4b02      	ldr	r3, [pc, #8]	; (4001e0 <atmel_start_init+0xc>)
  4001d8:	4798      	blx	r3
	stdio_redirect_init();
  4001da:	4b02      	ldr	r3, [pc, #8]	; (4001e4 <atmel_start_init+0x10>)
  4001dc:	4798      	blx	r3
  4001de:	bd08      	pop	{r3, pc}
  4001e0:	00400861 	.word	0x00400861
  4001e4:	00401969 	.word	0x00401969

004001e8 <adc_enable_all>:
const uint16_t length);
*/


//enables/disables all AFECs
void adc_enable_all(void){
  4001e8:	b570      	push	{r4, r5, r6, lr}
	//note that it is possible to enable individual channels
	//functions from hal_adc_sync.h
	adc_sync_enable_channel(ADC_CURRENT_A);
  4001ea:	4d11      	ldr	r5, [pc, #68]	; (400230 <adc_enable_all+0x48>)
  4001ec:	2108      	movs	r1, #8
  4001ee:	4628      	mov	r0, r5
  4001f0:	4c10      	ldr	r4, [pc, #64]	; (400234 <adc_enable_all+0x4c>)
  4001f2:	47a0      	blx	r4
	adc_sync_enable_channel(ADC_CURRENT_B);
  4001f4:	2102      	movs	r1, #2
  4001f6:	4628      	mov	r0, r5
  4001f8:	47a0      	blx	r4
	adc_sync_enable_channel(ADC_CURRENT_C);
  4001fa:	4e0f      	ldr	r6, [pc, #60]	; (400238 <adc_enable_all+0x50>)
  4001fc:	2101      	movs	r1, #1
  4001fe:	4630      	mov	r0, r6
  400200:	47a0      	blx	r4
	
	adc_sync_enable_channel(ADC_SUPPL_VOLTAGE);
  400202:	2106      	movs	r1, #6
  400204:	4630      	mov	r0, r6
  400206:	47a0      	blx	r4
	
	adc_sync_enable_channel(ADC_TEMP_1);
  400208:	2105      	movs	r1, #5
  40020a:	4630      	mov	r0, r6
  40020c:	47a0      	blx	r4
	adc_sync_enable_channel(ADC_TEMP_2);
  40020e:	2106      	movs	r1, #6
  400210:	4628      	mov	r0, r5
  400212:	47a0      	blx	r4
	//adc_sync_enable_channel(ADC_TEMP_3);
	adc_sync_enable_channel(ADC_TEMP_4);
  400214:	210a      	movs	r1, #10
  400216:	4628      	mov	r0, r5
  400218:	47a0      	blx	r4
	adc_sync_enable_channel(ADC_TEMP_5);
  40021a:	2100      	movs	r1, #0
  40021c:	4630      	mov	r0, r6
  40021e:	47a0      	blx	r4
	adc_sync_enable_channel(ADC_TEMP_6);
  400220:	2105      	movs	r1, #5
  400222:	4628      	mov	r0, r5
  400224:	47a0      	blx	r4
	adc_sync_enable_channel(ADC_TEMP_MOTOR);
  400226:	2100      	movs	r1, #0
  400228:	4628      	mov	r0, r5
  40022a:	47a0      	blx	r4
  40022c:	bd70      	pop	{r4, r5, r6, pc}
  40022e:	bf00      	nop
  400230:	204002b8 	.word	0x204002b8
  400234:	00400991 	.word	0x00400991
  400238:	204002d8 	.word	0x204002d8

0040023c <adc_read>:
	adc_sync_disable_channel(ADC_TEMP_6);
	adc_sync_disable_channel(ADC_TEMP_MOTOR);
}

//reads ADC value
uint16_t adc_read(struct adc_sync_descriptor *const descr, const uint8_t channel){
  40023c:	b510      	push	{r4, lr}
  40023e:	b082      	sub	sp, #8
	
	uint16_t temp;
	
	adc_sync_read_channel(descr, channel, (uint8_t *)&temp, 2);
  400240:	2302      	movs	r3, #2
  400242:	f10d 0206 	add.w	r2, sp, #6
  400246:	4c03      	ldr	r4, [pc, #12]	; (400254 <adc_read+0x18>)
  400248:	47a0      	blx	r4
	
	return temp;
}
  40024a:	f8bd 0006 	ldrh.w	r0, [sp, #6]
  40024e:	b002      	add	sp, #8
  400250:	bd10      	pop	{r4, pc}
  400252:	bf00      	nop
  400254:	004009bd 	.word	0x004009bd

00400258 <pwm_enable_all>:



//enable/disable pwm pins
//also sets periods and other variables which might not have been set at initialization
void pwm_enable_all(void){
  400258:	b570      	push	{r4, r5, r6, lr}
	//note it's possible to individual channels, but not through these functions
	//functions from hal_pwm.h
	
	//enable PWM0 and PWM1
	pwm_enable(&PWM_0);
  40025a:	4c0a      	ldr	r4, [pc, #40]	; (400284 <pwm_enable_all+0x2c>)
  40025c:	4620      	mov	r0, r4
  40025e:	4e0a      	ldr	r6, [pc, #40]	; (400288 <pwm_enable_all+0x30>)
  400260:	47b0      	blx	r6
	pwm_enable(&PWM_1);
  400262:	4d0a      	ldr	r5, [pc, #40]	; (40028c <pwm_enable_all+0x34>)
  400264:	4628      	mov	r0, r5
  400266:	47b0      	blx	r6
		
	//set period and initial duty cycle
	//initial duty cycle = 0.5 * period <=> no current output for an H-bridge type driver
	pwm_set_parameters(&PWM_0, PWM_PERIOD, PWM_PERIOD>>1);
  400268:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
  40026c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
  400270:	4620      	mov	r0, r4
  400272:	4c07      	ldr	r4, [pc, #28]	; (400290 <pwm_enable_all+0x38>)
  400274:	47a0      	blx	r4
	pwm_set_parameters(&PWM_1  , PWM_PERIOD, PWM_PERIOD>>1);
  400276:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
  40027a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
  40027e:	4628      	mov	r0, r5
  400280:	47a0      	blx	r4
  400282:	bd70      	pop	{r4, r5, r6, pc}
  400284:	20400268 	.word	0x20400268
  400288:	00400bfd 	.word	0x00400bfd
  40028c:	204002bc 	.word	0x204002bc
  400290:	00400c39 	.word	0x00400c39

00400294 <pwm_set_duty>:
	//ASSERT(device && (duty_cycle < period));

	//cfg = _pwm_get_cfg(device->hw);

	//for (i = 0; i < cfg->ch_num; i++) {										//not needed; we are altering one channel at a time
	hri_pwm_write_CDTYUPD_reg(descr->device.hw, channel, duty_cycle);
  400294:	6903      	ldr	r3, [r0, #16]
}

static inline void hri_pwm_write_CDTYUPD_reg(const void *const hw, uint8_t submodule_index, hri_pwm_cdtyupd_reg_t data)
{
	PWM_CRITICAL_SECTION_ENTER();
	((Pwm *)hw)->PwmChNum[submodule_index].PWM_CDTYUPD = data;
  400296:	eb03 1141 	add.w	r1, r3, r1, lsl #5
  40029a:	f8c1 2208 	str.w	r2, [r1, #520]	; 0x208
  40029e:	4770      	bx	lr

004002a0 <pwm_deadtime_init>:
	//hri_pwm_write_CPRDUPD_reg(device->hw, cfg->ch[i].index, period);			//period is constant; only altering duty cycle
	//}
}

void pwm_deadtime_init(void){													//Check section 51.6.2.5 Dead-Time Generator in datasheet
  4002a0:	b4f0      	push	{r4, r5, r6, r7}
	
	*((unsigned int *)0x40020200) |= (1<<16);									//Set dead time enable to 1 in all the PWM 0 registers
  4002a2:	4a19      	ldr	r2, [pc, #100]	; (400308 <pwm_deadtime_init+0x68>)
  4002a4:	6813      	ldr	r3, [r2, #0]
  4002a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  4002aa:	6013      	str	r3, [r2, #0]
	*((unsigned int *)0x40020220) |= (1<<16);
  4002ac:	4e17      	ldr	r6, [pc, #92]	; (40030c <pwm_deadtime_init+0x6c>)
  4002ae:	6833      	ldr	r3, [r6, #0]
  4002b0:	f443 3180 	orr.w	r1, r3, #65536	; 0x10000
	*((unsigned int *)0x40020240) |= (1<<16);
  4002b4:	4d16      	ldr	r5, [pc, #88]	; (400310 <pwm_deadtime_init+0x70>)
  4002b6:	682b      	ldr	r3, [r5, #0]
  4002b8:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
	*((unsigned int *)0x40020260) |= (1<<16);
  4002bc:	4c15      	ldr	r4, [pc, #84]	; (400314 <pwm_deadtime_init+0x74>)
  4002be:	6823      	ldr	r3, [r4, #0]
  4002c0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
	
	*((unsigned int *)0x4005C200) |= (1<<16);									//Set dead time enable to 1 in all the PWM 1 registers
  4002c4:	4f14      	ldr	r7, [pc, #80]	; (400318 <pwm_deadtime_init+0x78>)
  4002c6:	6838      	ldr	r0, [r7, #0]
  4002c8:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
  4002cc:	6038      	str	r0, [r7, #0]
	*((unsigned int *)0x40020220) |= (1<<16);
  4002ce:	6031      	str	r1, [r6, #0]
	*((unsigned int *)0x40020240) |= (1<<16);
  4002d0:	602a      	str	r2, [r5, #0]
	*((unsigned int *)0x40020260) |= (1<<16);
  4002d2:	6023      	str	r3, [r4, #0]
	tmp = ((PwmChNum *)hw)->PWM_DT;
  4002d4:	4911      	ldr	r1, [pc, #68]	; (40031c <pwm_deadtime_init+0x7c>)
  4002d6:	698a      	ldr	r2, [r1, #24]
	tmp &= ~PWM_DT_DTH_Msk;
  4002d8:	4811      	ldr	r0, [pc, #68]	; (400320 <pwm_deadtime_init+0x80>)
  4002da:	4002      	ands	r2, r0
	tmp |= PWM_DT_DTH(data);
  4002dc:	f042 0203 	orr.w	r2, r2, #3
	((PwmChNum *)hw)->PWM_DT = tmp;
  4002e0:	618a      	str	r2, [r1, #24]
	tmp = ((PwmChNum *)hw)->PWM_DT;
  4002e2:	698a      	ldr	r2, [r1, #24]
	tmp &= ~PWM_DT_DTL_Msk;
  4002e4:	b292      	uxth	r2, r2
	tmp |= PWM_DT_DTL(data);
  4002e6:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
	((PwmChNum *)hw)->PWM_DT = tmp;
  4002ea:	618a      	str	r2, [r1, #24]
	tmp = ((PwmChNum *)hw)->PWM_DT;
  4002ec:	4a0d      	ldr	r2, [pc, #52]	; (400324 <pwm_deadtime_init+0x84>)
  4002ee:	6993      	ldr	r3, [r2, #24]
	tmp &= ~PWM_DT_DTH_Msk;
  4002f0:	4003      	ands	r3, r0
	tmp |= PWM_DT_DTH(data);
  4002f2:	f043 0303 	orr.w	r3, r3, #3
	((PwmChNum *)hw)->PWM_DT = tmp;
  4002f6:	6193      	str	r3, [r2, #24]
	tmp = ((PwmChNum *)hw)->PWM_DT;
  4002f8:	6993      	ldr	r3, [r2, #24]
	tmp &= ~PWM_DT_DTL_Msk;
  4002fa:	b29b      	uxth	r3, r3
	tmp |= PWM_DT_DTL(data);
  4002fc:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
	((PwmChNum *)hw)->PWM_DT = tmp;
  400300:	6193      	str	r3, [r2, #24]
	
	hri_pwmchnum_write_DT_DTH_bf(PWM0, DT);										//Set high dead time for high side of PWM0
	hri_pwmchnum_write_DT_DTL_bf(PWM0, DT);										//Set high dead time for low side of PWM0
	hri_pwmchnum_write_DT_DTH_bf(PWM1, DT);										//Set high dead time for high side of PWM1
	hri_pwmchnum_write_DT_DTL_bf(PWM1, DT);										//Set high dead time for low side of PWM1
}
  400302:	bcf0      	pop	{r4, r5, r6, r7}
  400304:	4770      	bx	lr
  400306:	bf00      	nop
  400308:	40020200 	.word	0x40020200
  40030c:	40020220 	.word	0x40020220
  400310:	40020240 	.word	0x40020240
  400314:	40020260 	.word	0x40020260
  400318:	4005c200 	.word	0x4005c200
  40031c:	40020000 	.word	0x40020000
  400320:	ffff0000 	.word	0xffff0000
  400324:	4005c000 	.word	0x4005c000

00400328 <Current_Voltage_Inital_Test>:
	printf("Temp Motor = %i  \n",temp_test_data[6]);
	
	
}

void Current_Voltage_Inital_Test (void){
  400328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	//Get Current Sensor and High Voltage reading and display values
	
	int current_test_data [3];
	
	current_test_data [0] = adc_read(ADC_CURRENT_A);
  40032c:	4d10      	ldr	r5, [pc, #64]	; (400370 <Current_Voltage_Inital_Test+0x48>)
  40032e:	2108      	movs	r1, #8
  400330:	4628      	mov	r0, r5
  400332:	4c10      	ldr	r4, [pc, #64]	; (400374 <Current_Voltage_Inital_Test+0x4c>)
  400334:	47a0      	blx	r4
  400336:	4606      	mov	r6, r0
	current_test_data [1] = adc_read(ADC_CURRENT_B);
  400338:	2102      	movs	r1, #2
  40033a:	4628      	mov	r0, r5
  40033c:	47a0      	blx	r4
  40033e:	4607      	mov	r7, r0
	current_test_data [2] = adc_read(ADC_CURRENT_C);
  400340:	4d0d      	ldr	r5, [pc, #52]	; (400378 <Current_Voltage_Inital_Test+0x50>)
  400342:	2101      	movs	r1, #1
  400344:	4628      	mov	r0, r5
  400346:	47a0      	blx	r4
  400348:	4680      	mov	r8, r0
	
	int voltage_test_data;
	
	voltage_test_data = adc_read(ADC_SUPPL_VOLTAGE);
  40034a:	2106      	movs	r1, #6
  40034c:	4628      	mov	r0, r5
  40034e:	47a0      	blx	r4
  400350:	4605      	mov	r5, r0
	
	printf("\n Current and Voltage Testing -----------------\n");
  400352:	480a      	ldr	r0, [pc, #40]	; (40037c <Current_Voltage_Inital_Test+0x54>)
  400354:	4c0a      	ldr	r4, [pc, #40]	; (400380 <Current_Voltage_Inital_Test+0x58>)
  400356:	47a0      	blx	r4
	printf("Raw Data \n");
  400358:	480a      	ldr	r0, [pc, #40]	; (400384 <Current_Voltage_Inital_Test+0x5c>)
  40035a:	47a0      	blx	r4
	printf("CurrA = %i \t\t CurrB = %i \t\t CurrC = %i \n",current_test_data[0], current_test_data[1], current_test_data[2]);
  40035c:	4643      	mov	r3, r8
  40035e:	463a      	mov	r2, r7
  400360:	4631      	mov	r1, r6
  400362:	4809      	ldr	r0, [pc, #36]	; (400388 <Current_Voltage_Inital_Test+0x60>)
  400364:	47a0      	blx	r4
	printf("Supply Voltage = %i  \n",voltage_test_data);
  400366:	4629      	mov	r1, r5
  400368:	4808      	ldr	r0, [pc, #32]	; (40038c <Current_Voltage_Inital_Test+0x64>)
  40036a:	47a0      	blx	r4
  40036c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400370:	204002b8 	.word	0x204002b8
  400374:	0040023d 	.word	0x0040023d
  400378:	204002d8 	.word	0x204002d8
  40037c:	00406020 	.word	0x00406020
  400380:	00403f8d 	.word	0x00403f8d
  400384:	00405fa8 	.word	0x00405fa8
  400388:	00406054 	.word	0x00406054
  40038c:	00406080 	.word	0x00406080

00400390 <first_slow_spin>:
}

void first_slow_spin (void){
  400390:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  400394:	ed2d 8b06 	vpush	{d8-d10}
	float omega = 94.25;    //Gives electrical frequency of 15Hz (one spin of the rotor every second)
	float T = 0;
  400398:	eddf 8a45 	vldr	s17, [pc, #276]	; 4004b0 <first_slow_spin+0x120>
	float V_supply = 20;
	float V_pp_test = 5;
	while (1)
	{
		float pwm_testing_a, pwm_testing_b, pwm_testing_c;
		pwm_testing_a = 1000 - (sin(omega*T)+1)*500*V_pp_test/V_supply;
  40039c:	ed9f 8a45 	vldr	s16, [pc, #276]	; 4004b4 <first_slow_spin+0x124>
  4003a0:	ee28 8a88 	vmul.f32	s16, s17, s16
  4003a4:	4f44      	ldr	r7, [pc, #272]	; (4004b8 <first_slow_spin+0x128>)
  4003a6:	ee18 0a10 	vmov	r0, s16
  4003aa:	47b8      	blx	r7
  4003ac:	f8df a13c 	ldr.w	sl, [pc, #316]	; 4004ec <first_slow_spin+0x15c>
  4003b0:	47d0      	blx	sl
  4003b2:	4e42      	ldr	r6, [pc, #264]	; (4004bc <first_slow_spin+0x12c>)
  4003b4:	2200      	movs	r2, #0
  4003b6:	4b42      	ldr	r3, [pc, #264]	; (4004c0 <first_slow_spin+0x130>)
  4003b8:	47b0      	blx	r6
  4003ba:	4c42      	ldr	r4, [pc, #264]	; (4004c4 <first_slow_spin+0x134>)
  4003bc:	2200      	movs	r2, #0
  4003be:	4b42      	ldr	r3, [pc, #264]	; (4004c8 <first_slow_spin+0x138>)
  4003c0:	47a0      	blx	r4
  4003c2:	2200      	movs	r2, #0
  4003c4:	4b41      	ldr	r3, [pc, #260]	; (4004cc <first_slow_spin+0x13c>)
  4003c6:	47a0      	blx	r4
  4003c8:	f8df 9124 	ldr.w	r9, [pc, #292]	; 4004f0 <first_slow_spin+0x160>
  4003cc:	2200      	movs	r2, #0
  4003ce:	4b40      	ldr	r3, [pc, #256]	; (4004d0 <first_slow_spin+0x140>)
  4003d0:	47c8      	blx	r9
  4003d2:	f8df 8120 	ldr.w	r8, [pc, #288]	; 4004f4 <first_slow_spin+0x164>
  4003d6:	4602      	mov	r2, r0
  4003d8:	460b      	mov	r3, r1
  4003da:	2000      	movs	r0, #0
  4003dc:	493d      	ldr	r1, [pc, #244]	; (4004d4 <first_slow_spin+0x144>)
  4003de:	47c0      	blx	r8
  4003e0:	4d3d      	ldr	r5, [pc, #244]	; (4004d8 <first_slow_spin+0x148>)
  4003e2:	47a8      	blx	r5
  4003e4:	ee0a 0a10 	vmov	s20, r0
		pwm_testing_b = 1000 - (sin(omega*T+PI/3)+1)*500*V_pp_test/V_supply;
  4003e8:	ed9f 9a3c 	vldr	s18, [pc, #240]	; 4004dc <first_slow_spin+0x14c>
  4003ec:	ee78 7a09 	vadd.f32	s15, s16, s18
  4003f0:	ee17 0a90 	vmov	r0, s15
  4003f4:	47b8      	blx	r7
  4003f6:	47d0      	blx	sl
  4003f8:	2200      	movs	r2, #0
  4003fa:	4b31      	ldr	r3, [pc, #196]	; (4004c0 <first_slow_spin+0x130>)
  4003fc:	47b0      	blx	r6
  4003fe:	2200      	movs	r2, #0
  400400:	4b31      	ldr	r3, [pc, #196]	; (4004c8 <first_slow_spin+0x138>)
  400402:	47a0      	blx	r4
  400404:	2200      	movs	r2, #0
  400406:	4b31      	ldr	r3, [pc, #196]	; (4004cc <first_slow_spin+0x13c>)
  400408:	47a0      	blx	r4
  40040a:	2200      	movs	r2, #0
  40040c:	4b30      	ldr	r3, [pc, #192]	; (4004d0 <first_slow_spin+0x140>)
  40040e:	47c8      	blx	r9
  400410:	4602      	mov	r2, r0
  400412:	460b      	mov	r3, r1
  400414:	2000      	movs	r0, #0
  400416:	492f      	ldr	r1, [pc, #188]	; (4004d4 <first_slow_spin+0x144>)
  400418:	47c0      	blx	r8
  40041a:	47a8      	blx	r5
  40041c:	ee09 0a90 	vmov	s19, r0
		pwm_testing_c = 1000 - (sin(omega*T-PI/3)+1)*500*V_pp_test/V_supply;
  400420:	ee78 7a49 	vsub.f32	s15, s16, s18
  400424:	ee17 0a90 	vmov	r0, s15
  400428:	47b8      	blx	r7
  40042a:	47d0      	blx	sl
  40042c:	2200      	movs	r2, #0
  40042e:	4b24      	ldr	r3, [pc, #144]	; (4004c0 <first_slow_spin+0x130>)
  400430:	47b0      	blx	r6
  400432:	2200      	movs	r2, #0
  400434:	4b24      	ldr	r3, [pc, #144]	; (4004c8 <first_slow_spin+0x138>)
  400436:	47a0      	blx	r4
  400438:	2200      	movs	r2, #0
  40043a:	4b24      	ldr	r3, [pc, #144]	; (4004cc <first_slow_spin+0x13c>)
  40043c:	47a0      	blx	r4
  40043e:	2200      	movs	r2, #0
  400440:	4b23      	ldr	r3, [pc, #140]	; (4004d0 <first_slow_spin+0x140>)
  400442:	47c8      	blx	r9
  400444:	4602      	mov	r2, r0
  400446:	460b      	mov	r3, r1
  400448:	2000      	movs	r0, #0
  40044a:	4922      	ldr	r1, [pc, #136]	; (4004d4 <first_slow_spin+0x144>)
  40044c:	47c0      	blx	r8
  40044e:	47a8      	blx	r5
  400450:	ee08 0a10 	vmov	s16, r0
		
		pwm_set_duty(PWM_PHASE_A,pwm_testing_a);
  400454:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 4004f8 <first_slow_spin+0x168>
  400458:	eefc 7aca 	vcvt.u32.f32	s15, s20
  40045c:	ee17 2a90 	vmov	r2, s15
  400460:	2100      	movs	r1, #0
  400462:	4640      	mov	r0, r8
  400464:	4c1e      	ldr	r4, [pc, #120]	; (4004e0 <first_slow_spin+0x150>)
  400466:	47a0      	blx	r4
		pwm_set_duty(PWM_PHASE_B,pwm_testing_b);
  400468:	eefc 7ae9 	vcvt.u32.f32	s15, s19
  40046c:	ee17 2a90 	vmov	r2, s15
  400470:	2102      	movs	r1, #2
  400472:	4640      	mov	r0, r8
  400474:	47a0      	blx	r4
		pwm_set_duty(PWM_PHASE_C,pwm_testing_c);
  400476:	eefc 7ac8 	vcvt.u32.f32	s15, s16
  40047a:	ee17 2a90 	vmov	r2, s15
  40047e:	2100      	movs	r1, #0
  400480:	4818      	ldr	r0, [pc, #96]	; (4004e4 <first_slow_spin+0x154>)
  400482:	47a0      	blx	r4
		
		delay_us(333);
  400484:	f240 104d 	movw	r0, #333	; 0x14d
  400488:	4b17      	ldr	r3, [pc, #92]	; (4004e8 <first_slow_spin+0x158>)
  40048a:	4798      	blx	r3
		T = T + 0.000333;			//Updates the duty cycle every switch at 3kHz switching frequency
  40048c:	ee18 0a90 	vmov	r0, s17
  400490:	47b8      	blx	r7
  400492:	a305      	add	r3, pc, #20	; (adr r3, 4004a8 <first_slow_spin+0x118>)
  400494:	e9d3 2300 	ldrd	r2, r3, [r3]
  400498:	47b0      	blx	r6
  40049a:	47a8      	blx	r5
  40049c:	ee08 0a90 	vmov	s17, r0
  4004a0:	e77c      	b.n	40039c <first_slow_spin+0xc>
  4004a2:	bf00      	nop
  4004a4:	f3af 8000 	nop.w
  4004a8:	1c0ca601 	.word	0x1c0ca601
  4004ac:	3f35d2d0 	.word	0x3f35d2d0
  4004b0:	00000000 	.word	0x00000000
  4004b4:	42bc8000 	.word	0x42bc8000
  4004b8:	00402f95 	.word	0x00402f95
  4004bc:	00402cd9 	.word	0x00402cd9
  4004c0:	3ff00000 	.word	0x3ff00000
  4004c4:	0040303d 	.word	0x0040303d
  4004c8:	407f4000 	.word	0x407f4000
  4004cc:	40140000 	.word	0x40140000
  4004d0:	40340000 	.word	0x40340000
  4004d4:	408f4000 	.word	0x408f4000
  4004d8:	004035c1 	.word	0x004035c1
  4004dc:	3f860a92 	.word	0x3f860a92
  4004e0:	00400295 	.word	0x00400295
  4004e4:	204002bc 	.word	0x204002bc
  4004e8:	00400a8d 	.word	0x00400a8d
  4004ec:	00401989 	.word	0x00401989
  4004f0:	00403291 	.word	0x00403291
  4004f4:	00402cd5 	.word	0x00402cd5
  4004f8:	20400268 	.word	0x20400268

004004fc <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  4004fc:	e7fe      	b.n	4004fc <Dummy_Handler>
	...

00400500 <Reset_Handler>:
{
  400500:	b508      	push	{r3, lr}
        if (pSrc != pDest) {
  400502:	4b10      	ldr	r3, [pc, #64]	; (400544 <Reset_Handler+0x44>)
  400504:	4a10      	ldr	r2, [pc, #64]	; (400548 <Reset_Handler+0x48>)
  400506:	429a      	cmp	r2, r3
  400508:	d009      	beq.n	40051e <Reset_Handler+0x1e>
  40050a:	4b0e      	ldr	r3, [pc, #56]	; (400544 <Reset_Handler+0x44>)
  40050c:	4a0e      	ldr	r2, [pc, #56]	; (400548 <Reset_Handler+0x48>)
  40050e:	e003      	b.n	400518 <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
  400510:	6811      	ldr	r1, [r2, #0]
  400512:	6019      	str	r1, [r3, #0]
  400514:	3304      	adds	r3, #4
  400516:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
  400518:	490c      	ldr	r1, [pc, #48]	; (40054c <Reset_Handler+0x4c>)
  40051a:	428b      	cmp	r3, r1
  40051c:	d3f8      	bcc.n	400510 <Reset_Handler+0x10>
                        *pDest++ = *pSrc++;
  40051e:	4b0c      	ldr	r3, [pc, #48]	; (400550 <Reset_Handler+0x50>)
  400520:	e002      	b.n	400528 <Reset_Handler+0x28>
                *pDest++ = 0;
  400522:	2200      	movs	r2, #0
  400524:	601a      	str	r2, [r3, #0]
  400526:	3304      	adds	r3, #4
        for (pDest = &_szero; pDest < &_ezero;) {
  400528:	4a0a      	ldr	r2, [pc, #40]	; (400554 <Reset_Handler+0x54>)
  40052a:	4293      	cmp	r3, r2
  40052c:	d3f9      	bcc.n	400522 <Reset_Handler+0x22>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  40052e:	4a0a      	ldr	r2, [pc, #40]	; (400558 <Reset_Handler+0x58>)
  400530:	4b0a      	ldr	r3, [pc, #40]	; (40055c <Reset_Handler+0x5c>)
  400532:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  400536:	6093      	str	r3, [r2, #8]
        __libc_init_array();
  400538:	4b09      	ldr	r3, [pc, #36]	; (400560 <Reset_Handler+0x60>)
  40053a:	4798      	blx	r3
        main();
  40053c:	4b09      	ldr	r3, [pc, #36]	; (400564 <Reset_Handler+0x64>)
  40053e:	4798      	blx	r3
  400540:	e7fe      	b.n	400540 <Reset_Handler+0x40>
  400542:	bf00      	nop
  400544:	20400000 	.word	0x20400000
  400548:	004067d8 	.word	0x004067d8
  40054c:	204001d0 	.word	0x204001d0
  400550:	204001d0 	.word	0x204001d0
  400554:	204002e0 	.word	0x204002e0
  400558:	e000ed00 	.word	0xe000ed00
  40055c:	00400000 	.word	0x00400000
  400560:	00403661 	.word	0x00403661
  400564:	0040185d 	.word	0x0040185d

00400568 <ADC_0_PORT_init>:
	((Pio *)hw)->PIO_PDR = PIO_PSR_P31;
}

static inline void hri_pio_set_PSR_reg(const void *const hw, hri_pio_psr_reg_t mask)
{
	((Pio *)hw)->PIO_PER = mask;
  400568:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  40056c:	4b08      	ldr	r3, [pc, #32]	; (400590 <ADC_0_PORT_init+0x28>)
  40056e:	601a      	str	r2, [r3, #0]
  400570:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  400574:	2208      	movs	r2, #8
  400576:	601a      	str	r2, [r3, #0]
  400578:	2204      	movs	r2, #4
  40057a:	601a      	str	r2, [r3, #0]
  40057c:	4a05      	ldr	r2, [pc, #20]	; (400594 <ADC_0_PORT_init+0x2c>)
  40057e:	f44f 3100 	mov.w	r1, #131072	; 0x20000
  400582:	6011      	str	r1, [r2, #0]
  400584:	f44f 2100 	mov.w	r1, #524288	; 0x80000
  400588:	6011      	str	r1, [r2, #0]
  40058a:	2201      	movs	r2, #1
  40058c:	601a      	str	r2, [r3, #0]
  40058e:	4770      	bx	lr
  400590:	400e1400 	.word	0x400e1400
  400594:	400e0e00 	.word	0x400e0e00

00400598 <ADC_0_CLOCK_init>:
}

static inline hri_pmc_pcsr0_reg_t hri_pmc_get_PCSR0_reg(const void *const hw, hri_pmc_pcsr0_reg_t mask)
{
	uint32_t tmp;
	tmp = ((Pmc *)hw)->PMC_PCSR0;
  400598:	4b04      	ldr	r3, [pc, #16]	; (4005ac <ADC_0_CLOCK_init+0x14>)
  40059a:	699b      	ldr	r3, [r3, #24]
 *
 */
static inline void _pmc_enable_periph_clock(uint32_t periph_id)
{
	if (periph_id < 32) {
		if (!hri_pmc_get_PCSR0_reg(PMC, (1 << periph_id))) {
  40059c:	f013 5f00 	tst.w	r3, #536870912	; 0x20000000
  4005a0:	d103      	bne.n	4005aa <ADC_0_CLOCK_init+0x12>
	((Pmc *)hw)->PMC_PCER0 = mask;
  4005a2:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4005a6:	4b01      	ldr	r3, [pc, #4]	; (4005ac <ADC_0_CLOCK_init+0x14>)
  4005a8:	611a      	str	r2, [r3, #16]
  4005aa:	4770      	bx	lr
  4005ac:	400e0600 	.word	0x400e0600

004005b0 <ADC_0_init>:

	_pmc_enable_periph_clock(ID_AFEC0);
}

void ADC_0_init(void)
{
  4005b0:	b508      	push	{r3, lr}
	ADC_0_CLOCK_init();
  4005b2:	4b05      	ldr	r3, [pc, #20]	; (4005c8 <ADC_0_init+0x18>)
  4005b4:	4798      	blx	r3
	ADC_0_PORT_init();
  4005b6:	4b05      	ldr	r3, [pc, #20]	; (4005cc <ADC_0_init+0x1c>)
  4005b8:	4798      	blx	r3
	adc_sync_init(&ADC_0, AFEC0, (void *)NULL);
  4005ba:	2200      	movs	r2, #0
  4005bc:	4904      	ldr	r1, [pc, #16]	; (4005d0 <ADC_0_init+0x20>)
  4005be:	4805      	ldr	r0, [pc, #20]	; (4005d4 <ADC_0_init+0x24>)
  4005c0:	4b05      	ldr	r3, [pc, #20]	; (4005d8 <ADC_0_init+0x28>)
  4005c2:	4798      	blx	r3
  4005c4:	bd08      	pop	{r3, pc}
  4005c6:	bf00      	nop
  4005c8:	00400599 	.word	0x00400599
  4005cc:	00400569 	.word	0x00400569
  4005d0:	4003c000 	.word	0x4003c000
  4005d4:	204002b8 	.word	0x204002b8
  4005d8:	00400961 	.word	0x00400961

004005dc <ADC_1_PORT_init>:
  4005dc:	2202      	movs	r2, #2
  4005de:	4b07      	ldr	r3, [pc, #28]	; (4005fc <ADC_1_PORT_init+0x20>)
  4005e0:	601a      	str	r2, [r3, #0]
  4005e2:	f503 7300 	add.w	r3, r3, #512	; 0x200
  4005e6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  4005ea:	601a      	str	r2, [r3, #0]
  4005ec:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  4005f0:	601a      	str	r2, [r3, #0]
  4005f2:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4005f6:	601a      	str	r2, [r3, #0]
  4005f8:	4770      	bx	lr
  4005fa:	bf00      	nop
  4005fc:	400e1000 	.word	0x400e1000

00400600 <ADC_1_CLOCK_init>:
}

static inline hri_pmc_pcsr1_reg_t hri_pmc_get_PCSR1_reg(const void *const hw, hri_pmc_pcsr1_reg_t mask)
{
	uint32_t tmp;
	tmp = ((Pmc *)hw)->PMC_PCSR1;
  400600:	4b05      	ldr	r3, [pc, #20]	; (400618 <ADC_1_CLOCK_init+0x18>)
  400602:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
			hri_pmc_set_PCSR0_reg(PMC, (1 << periph_id));
		}
	} else if (periph_id < 64) {
		periph_id -= 32;
		if (!hri_pmc_get_PCSR1_reg(PMC, (1 << periph_id))) {
  400606:	f413 7f80 	tst.w	r3, #256	; 0x100
  40060a:	d104      	bne.n	400616 <ADC_1_CLOCK_init+0x16>
	((Pmc *)hw)->PMC_PCER1 = mask;
  40060c:	f44f 7280 	mov.w	r2, #256	; 0x100
  400610:	4b01      	ldr	r3, [pc, #4]	; (400618 <ADC_1_CLOCK_init+0x18>)
  400612:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
  400616:	4770      	bx	lr
  400618:	400e0600 	.word	0x400e0600

0040061c <ADC_1_init>:

	_pmc_enable_periph_clock(ID_AFEC1);
}

void ADC_1_init(void)
{
  40061c:	b508      	push	{r3, lr}
	ADC_1_CLOCK_init();
  40061e:	4b05      	ldr	r3, [pc, #20]	; (400634 <ADC_1_init+0x18>)
  400620:	4798      	blx	r3
	ADC_1_PORT_init();
  400622:	4b05      	ldr	r3, [pc, #20]	; (400638 <ADC_1_init+0x1c>)
  400624:	4798      	blx	r3
	adc_sync_init(&ADC_1, AFEC1, (void *)NULL);
  400626:	2200      	movs	r2, #0
  400628:	4904      	ldr	r1, [pc, #16]	; (40063c <ADC_1_init+0x20>)
  40062a:	4805      	ldr	r0, [pc, #20]	; (400640 <ADC_1_init+0x24>)
  40062c:	4b05      	ldr	r3, [pc, #20]	; (400644 <ADC_1_init+0x28>)
  40062e:	4798      	blx	r3
  400630:	bd08      	pop	{r3, pc}
  400632:	bf00      	nop
  400634:	00400601 	.word	0x00400601
  400638:	004005dd 	.word	0x004005dd
  40063c:	40064000 	.word	0x40064000
  400640:	204002d8 	.word	0x204002d8
  400644:	00400961 	.word	0x00400961

00400648 <EXTERNAL_IRQ_D_init>:
	((Pio *)hw)->PIO_ODR = ~data;
}

static inline void hri_pio_clear_OSR_reg(const void *const hw, hri_pio_osr_reg_t mask)
{
	((Pio *)hw)->PIO_ODR = mask;
  400648:	4b04      	ldr	r3, [pc, #16]	; (40065c <EXTERNAL_IRQ_D_init+0x14>)
  40064a:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  40064e:	615a      	str	r2, [r3, #20]
	((Pio *)hw)->PIO_PUDR = ~data;
}

static inline void hri_pio_clear_PUSR_reg(const void *const hw, hri_pio_pusr_reg_t mask)
{
	((Pio *)hw)->PIO_PUDR = mask;
  400650:	661a      	str	r2, [r3, #96]	; 0x60
	((Pio *)hw)->PIO_PPDDR = ~data;
}

static inline void hri_pio_clear_PPDSR_reg(const void *const hw, hri_pio_ppdsr_reg_t mask)
{
	((Pio *)hw)->PIO_PPDDR = mask;
  400652:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	((Pio *)hw)->PIO_PER = mask;
  400656:	601a      	str	r2, [r3, #0]
  400658:	4770      	bx	lr
  40065a:	bf00      	nop
  40065c:	400e1400 	.word	0x400e1400

00400660 <EXTERNAL_IRQ_A_init>:
	((Pio *)hw)->PIO_ODR = mask;
  400660:	4b06      	ldr	r3, [pc, #24]	; (40067c <EXTERNAL_IRQ_A_init+0x1c>)
  400662:	2204      	movs	r2, #4
  400664:	615a      	str	r2, [r3, #20]
	((Pio *)hw)->PIO_PUDR = mask;
  400666:	661a      	str	r2, [r3, #96]	; 0x60
	((Pio *)hw)->PIO_PPDDR = mask;
  400668:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	((Pio *)hw)->PIO_PER = mask;
  40066c:	601a      	str	r2, [r3, #0]
	((Pio *)hw)->PIO_ODR = mask;
  40066e:	2220      	movs	r2, #32
  400670:	615a      	str	r2, [r3, #20]
	((Pio *)hw)->PIO_PUDR = mask;
  400672:	661a      	str	r2, [r3, #96]	; 0x60
	((Pio *)hw)->PIO_PPDDR = mask;
  400674:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	((Pio *)hw)->PIO_PER = mask;
  400678:	601a      	str	r2, [r3, #0]
  40067a:	4770      	bx	lr
  40067c:	400e0e00 	.word	0x400e0e00

00400680 <PWM_0_PORT_init>:
}

static inline void hri_pio_set_ABCDSR_reg(const void *const hw, uint8_t index, hri_pio_abcdsr_reg_t mask)
{
	PIO_CRITICAL_SECTION_ENTER();
	((Pio *)hw)->PIO_ABCDSR[index] |= mask;
  400680:	4b16      	ldr	r3, [pc, #88]	; (4006dc <PWM_0_PORT_init+0x5c>)
  400682:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400684:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
  400688:	671a      	str	r2, [r3, #112]	; 0x70
}

static inline void hri_pio_clear_ABCDSR_reg(const void *const hw, uint8_t index, hri_pio_abcdsr_reg_t mask)
{
	PIO_CRITICAL_SECTION_ENTER();
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  40068a:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  40068c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
  400690:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  400692:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  400696:	605a      	str	r2, [r3, #4]
	((Pio *)hw)->PIO_ABCDSR[index] |= mask;
  400698:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40069a:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
  40069e:	671a      	str	r2, [r3, #112]	; 0x70
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  4006a0:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4006a2:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
  4006a6:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  4006a8:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4006ac:	605a      	str	r2, [r3, #4]
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  4006ae:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4006b0:	f022 0202 	bic.w	r2, r2, #2
  4006b4:	671a      	str	r2, [r3, #112]	; 0x70
  4006b6:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4006b8:	f022 0202 	bic.w	r2, r2, #2
  4006bc:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  4006be:	2202      	movs	r2, #2
  4006c0:	605a      	str	r2, [r3, #4]
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  4006c2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4006c4:	f022 4280 	bic.w	r2, r2, #1073741824	; 0x40000000
  4006c8:	671a      	str	r2, [r3, #112]	; 0x70
  4006ca:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4006cc:	f022 4280 	bic.w	r2, r2, #1073741824	; 0x40000000
  4006d0:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  4006d2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  4006d6:	605a      	str	r2, [r3, #4]
  4006d8:	4770      	bx	lr
  4006da:	bf00      	nop
  4006dc:	400e0e00 	.word	0x400e0e00

004006e0 <PWM_0_CLOCK_init>:
	tmp = ((Pmc *)hw)->PMC_PCSR0;
  4006e0:	4b04      	ldr	r3, [pc, #16]	; (4006f4 <PWM_0_CLOCK_init+0x14>)
  4006e2:	699b      	ldr	r3, [r3, #24]
		if (!hri_pmc_get_PCSR0_reg(PMC, (1 << periph_id))) {
  4006e4:	2b00      	cmp	r3, #0
  4006e6:	db03      	blt.n	4006f0 <PWM_0_CLOCK_init+0x10>
	((Pmc *)hw)->PMC_PCER0 = mask;
  4006e8:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4006ec:	4b01      	ldr	r3, [pc, #4]	; (4006f4 <PWM_0_CLOCK_init+0x14>)
  4006ee:	611a      	str	r2, [r3, #16]
  4006f0:	4770      	bx	lr
  4006f2:	bf00      	nop
  4006f4:	400e0600 	.word	0x400e0600

004006f8 <PWM_0_init>:
{
	_pmc_enable_periph_clock(ID_PWM0);
}

void PWM_0_init(void)
{
  4006f8:	b508      	push	{r3, lr}
	PWM_0_CLOCK_init();
  4006fa:	4b06      	ldr	r3, [pc, #24]	; (400714 <PWM_0_init+0x1c>)
  4006fc:	4798      	blx	r3
	PWM_0_PORT_init();
  4006fe:	4b06      	ldr	r3, [pc, #24]	; (400718 <PWM_0_init+0x20>)
  400700:	4798      	blx	r3
	pwm_init(&PWM_0, PWM0, _pwm_get_pwm());
  400702:	4b06      	ldr	r3, [pc, #24]	; (40071c <PWM_0_init+0x24>)
  400704:	4798      	blx	r3
  400706:	4602      	mov	r2, r0
  400708:	4905      	ldr	r1, [pc, #20]	; (400720 <PWM_0_init+0x28>)
  40070a:	4806      	ldr	r0, [pc, #24]	; (400724 <PWM_0_init+0x2c>)
  40070c:	4b06      	ldr	r3, [pc, #24]	; (400728 <PWM_0_init+0x30>)
  40070e:	4798      	blx	r3
  400710:	bd08      	pop	{r3, pc}
  400712:	bf00      	nop
  400714:	004006e1 	.word	0x004006e1
  400718:	00400681 	.word	0x00400681
  40071c:	004015e1 	.word	0x004015e1
  400720:	40020000 	.word	0x40020000
  400724:	20400268 	.word	0x20400268
  400728:	00400bb9 	.word	0x00400bb9

0040072c <PWM_1_PORT_init>:
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  40072c:	4b0c      	ldr	r3, [pc, #48]	; (400760 <PWM_1_PORT_init+0x34>)
  40072e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  400730:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
  400734:	671a      	str	r2, [r3, #112]	; 0x70
	((Pio *)hw)->PIO_ABCDSR[index] |= mask;
  400736:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400738:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  40073c:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  40073e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400742:	605a      	str	r2, [r3, #4]
	((Pio *)hw)->PIO_ABCDSR[index] |= mask;
  400744:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
  400748:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  40074a:	f042 0201 	orr.w	r2, r2, #1
  40074e:	671a      	str	r2, [r3, #112]	; 0x70
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  400750:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  400752:	f022 0201 	bic.w	r2, r2, #1
  400756:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  400758:	2201      	movs	r2, #1
  40075a:	605a      	str	r2, [r3, #4]
  40075c:	4770      	bx	lr
  40075e:	bf00      	nop
  400760:	400e0e00 	.word	0x400e0e00

00400764 <PWM_1_CLOCK_init>:
	tmp = ((Pmc *)hw)->PMC_PCSR1;
  400764:	4b05      	ldr	r3, [pc, #20]	; (40077c <PWM_1_CLOCK_init+0x18>)
  400766:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
		if (!hri_pmc_get_PCSR1_reg(PMC, (1 << periph_id))) {
  40076a:	f013 5f80 	tst.w	r3, #268435456	; 0x10000000
  40076e:	d104      	bne.n	40077a <PWM_1_CLOCK_init+0x16>
	((Pmc *)hw)->PMC_PCER1 = mask;
  400770:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  400774:	4b01      	ldr	r3, [pc, #4]	; (40077c <PWM_1_CLOCK_init+0x18>)
  400776:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
  40077a:	4770      	bx	lr
  40077c:	400e0600 	.word	0x400e0600

00400780 <PWM_1_init>:
{
	_pmc_enable_periph_clock(ID_PWM1);
}

void PWM_1_init(void)
{
  400780:	b508      	push	{r3, lr}
	PWM_1_CLOCK_init();
  400782:	4b06      	ldr	r3, [pc, #24]	; (40079c <PWM_1_init+0x1c>)
  400784:	4798      	blx	r3
	PWM_1_PORT_init();
  400786:	4b06      	ldr	r3, [pc, #24]	; (4007a0 <PWM_1_init+0x20>)
  400788:	4798      	blx	r3
	pwm_init(&PWM_1, PWM1, _pwm_get_pwm());
  40078a:	4b06      	ldr	r3, [pc, #24]	; (4007a4 <PWM_1_init+0x24>)
  40078c:	4798      	blx	r3
  40078e:	4602      	mov	r2, r0
  400790:	4905      	ldr	r1, [pc, #20]	; (4007a8 <PWM_1_init+0x28>)
  400792:	4806      	ldr	r0, [pc, #24]	; (4007ac <PWM_1_init+0x2c>)
  400794:	4b06      	ldr	r3, [pc, #24]	; (4007b0 <PWM_1_init+0x30>)
  400796:	4798      	blx	r3
  400798:	bd08      	pop	{r3, pc}
  40079a:	bf00      	nop
  40079c:	00400765 	.word	0x00400765
  4007a0:	0040072d 	.word	0x0040072d
  4007a4:	004015e1 	.word	0x004015e1
  4007a8:	4005c000 	.word	0x4005c000
  4007ac:	204002bc 	.word	0x204002bc
  4007b0:	00400bb9 	.word	0x00400bb9

004007b4 <delay_driver_init>:
}

void delay_driver_init(void)
{
  4007b4:	b508      	push	{r3, lr}
	delay_init(SysTick);
  4007b6:	4802      	ldr	r0, [pc, #8]	; (4007c0 <delay_driver_init+0xc>)
  4007b8:	4b02      	ldr	r3, [pc, #8]	; (4007c4 <delay_driver_init+0x10>)
  4007ba:	4798      	blx	r3
  4007bc:	bd08      	pop	{r3, pc}
  4007be:	bf00      	nop
  4007c0:	e000e010 	.word	0xe000e010
  4007c4:	00400a79 	.word	0x00400a79

004007c8 <EDBG_COM_PORT_init>:
	((Pio *)hw)->PIO_ABCDSR[index] &= ~mask;
  4007c8:	4b0f      	ldr	r3, [pc, #60]	; (400808 <EDBG_COM_PORT_init+0x40>)
  4007ca:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4007cc:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  4007d0:	671a      	str	r2, [r3, #112]	; 0x70
  4007d2:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4007d4:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
  4007d8:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  4007da:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4007de:	605a      	str	r2, [r3, #4]
}

static inline void hri_matrix_set_CCFG_SYSIO_reg(const void *const hw, hri_matrix_ccfg_sysio_reg_t mask)
{
	MATRIX_CRITICAL_SECTION_ENTER();
	((Matrix *)hw)->CCFG_SYSIO |= mask;
  4007e0:	4a0a      	ldr	r2, [pc, #40]	; (40080c <EDBG_COM_PORT_init+0x44>)
  4007e2:	f8d2 3114 	ldr.w	r3, [r2, #276]	; 0x114
  4007e6:	f043 0310 	orr.w	r3, r3, #16
  4007ea:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
	((Pio *)hw)->PIO_ABCDSR[index] |= mask;
  4007ee:	4b08      	ldr	r3, [pc, #32]	; (400810 <EDBG_COM_PORT_init+0x48>)
  4007f0:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4007f2:	f042 0210 	orr.w	r2, r2, #16
  4007f6:	671a      	str	r2, [r3, #112]	; 0x70
  4007f8:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4007fa:	f042 0210 	orr.w	r2, r2, #16
  4007fe:	675a      	str	r2, [r3, #116]	; 0x74
	((Pio *)hw)->PIO_PDR = mask;
  400800:	2210      	movs	r2, #16
  400802:	605a      	str	r2, [r3, #4]
  400804:	4770      	bx	lr
  400806:	bf00      	nop
  400808:	400e0e00 	.word	0x400e0e00
  40080c:	40088000 	.word	0x40088000
  400810:	400e1000 	.word	0x400e1000

00400814 <EDBG_COM_CLOCK_init>:
	tmp = ((Pmc *)hw)->PMC_PCSR0;
  400814:	4b04      	ldr	r3, [pc, #16]	; (400828 <EDBG_COM_CLOCK_init+0x14>)
  400816:	699b      	ldr	r3, [r3, #24]
		if (!hri_pmc_get_PCSR0_reg(PMC, (1 << periph_id))) {
  400818:	f413 4f80 	tst.w	r3, #16384	; 0x4000
  40081c:	d103      	bne.n	400826 <EDBG_COM_CLOCK_init+0x12>
	((Pmc *)hw)->PMC_PCER0 = mask;
  40081e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  400822:	4b01      	ldr	r3, [pc, #4]	; (400828 <EDBG_COM_CLOCK_init+0x14>)
  400824:	611a      	str	r2, [r3, #16]
  400826:	4770      	bx	lr
  400828:	400e0600 	.word	0x400e0600

0040082c <EDBG_COM_init>:
{
	_pmc_enable_periph_clock(ID_USART1);
}

void EDBG_COM_init(void)
{
  40082c:	b508      	push	{r3, lr}
	EDBG_COM_CLOCK_init();
  40082e:	4b06      	ldr	r3, [pc, #24]	; (400848 <EDBG_COM_init+0x1c>)
  400830:	4798      	blx	r3
	EDBG_COM_PORT_init();
  400832:	4b06      	ldr	r3, [pc, #24]	; (40084c <EDBG_COM_init+0x20>)
  400834:	4798      	blx	r3
	usart_sync_init(&EDBG_COM, USART1, _usart_get_usart_sync());
  400836:	4b06      	ldr	r3, [pc, #24]	; (400850 <EDBG_COM_init+0x24>)
  400838:	4798      	blx	r3
  40083a:	4602      	mov	r2, r0
  40083c:	4905      	ldr	r1, [pc, #20]	; (400854 <EDBG_COM_init+0x28>)
  40083e:	4806      	ldr	r0, [pc, #24]	; (400858 <EDBG_COM_init+0x2c>)
  400840:	4b06      	ldr	r3, [pc, #24]	; (40085c <EDBG_COM_init+0x30>)
  400842:	4798      	blx	r3
  400844:	bd08      	pop	{r3, pc}
  400846:	bf00      	nop
  400848:	00400815 	.word	0x00400815
  40084c:	004007c9 	.word	0x004007c9
  400850:	00401859 	.word	0x00401859
  400854:	40028000 	.word	0x40028000
  400858:	204002ac 	.word	0x204002ac
  40085c:	00400d39 	.word	0x00400d39

00400860 <system_init>:
	CAN_1_PORT_init();
	can_async_init(&CAN_1, MCAN1);
}

void system_init(void)
{
  400860:	b508      	push	{r3, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
  400862:	4b32      	ldr	r3, [pc, #200]	; (40092c <system_init+0xcc>)
  400864:	4798      	blx	r3
	tmp = ((Pmc *)hw)->PMC_PCSR0;
  400866:	4b32      	ldr	r3, [pc, #200]	; (400930 <system_init+0xd0>)
  400868:	699b      	ldr	r3, [r3, #24]
  40086a:	f413 6f80 	tst.w	r3, #1024	; 0x400
  40086e:	d103      	bne.n	400878 <system_init+0x18>
	((Pmc *)hw)->PMC_PCER0 = mask;
  400870:	f44f 6280 	mov.w	r2, #1024	; 0x400
  400874:	4b2e      	ldr	r3, [pc, #184]	; (400930 <system_init+0xd0>)
  400876:	611a      	str	r2, [r3, #16]
	tmp = ((Pmc *)hw)->PMC_PCSR0;
  400878:	4b2d      	ldr	r3, [pc, #180]	; (400930 <system_init+0xd0>)
  40087a:	699b      	ldr	r3, [r3, #24]
  40087c:	f413 5f80 	tst.w	r3, #4096	; 0x1000
  400880:	d103      	bne.n	40088a <system_init+0x2a>
	((Pmc *)hw)->PMC_PCER0 = mask;
  400882:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  400886:	4b2a      	ldr	r3, [pc, #168]	; (400930 <system_init+0xd0>)
  400888:	611a      	str	r2, [r3, #16]
	tmp = ((Pmc *)hw)->PMC_PCSR0;
  40088a:	4b29      	ldr	r3, [pc, #164]	; (400930 <system_init+0xd0>)
  40088c:	699b      	ldr	r3, [r3, #24]
  40088e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  400892:	d103      	bne.n	40089c <system_init+0x3c>
	((Pmc *)hw)->PMC_PCER0 = mask;
  400894:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  400898:	4b25      	ldr	r3, [pc, #148]	; (400930 <system_init+0xd0>)
  40089a:	611a      	str	r2, [r3, #16]
}

static inline void hri_wdt_set_MR_WDDIS_bit(const void *const hw)
{
	WDT_CRITICAL_SECTION_ENTER();
	((Wdt *)hw)->WDT_MR |= WDT_MR_WDDIS;
  40089c:	4a25      	ldr	r2, [pc, #148]	; (400934 <system_init+0xd4>)
  40089e:	6853      	ldr	r3, [r2, #4]
  4008a0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  4008a4:	6053      	str	r3, [r2, #4]
	((Pio *)hw)->PIO_ODR = mask;
  4008a6:	4b24      	ldr	r3, [pc, #144]	; (400938 <system_init+0xd8>)
  4008a8:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4008ac:	615a      	str	r2, [r3, #20]
	((Pio *)hw)->PIO_PPDDR = mask;
  4008ae:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
	((Pio *)hw)->PIO_PUER = mask;
  4008b2:	665a      	str	r2, [r3, #100]	; 0x64
	((Pio *)hw)->PIO_PER = mask;
  4008b4:	601a      	str	r2, [r3, #0]
	((Pio *)hw)->PIO_CODR = mask;
  4008b6:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  4008ba:	6359      	str	r1, [r3, #52]	; 0x34
	((Pio *)hw)->PIO_OER = mask;
  4008bc:	6119      	str	r1, [r3, #16]
	((Pio *)hw)->PIO_PER = mask;
  4008be:	6019      	str	r1, [r3, #0]
	((Pio *)hw)->PIO_CODR = mask;
  4008c0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  4008c4:	635a      	str	r2, [r3, #52]	; 0x34
	((Pio *)hw)->PIO_OER = mask;
  4008c6:	611a      	str	r2, [r3, #16]
	((Pio *)hw)->PIO_PER = mask;
  4008c8:	601a      	str	r2, [r3, #0]
	((Pio *)hw)->PIO_CODR = mask;
  4008ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  4008ce:	635a      	str	r2, [r3, #52]	; 0x34
	((Pio *)hw)->PIO_OER = mask;
  4008d0:	611a      	str	r2, [r3, #16]
	((Pio *)hw)->PIO_PER = mask;
  4008d2:	601a      	str	r2, [r3, #0]
	((Pio *)hw)->PIO_CODR = mask;
  4008d4:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
  4008d8:	6358      	str	r0, [r3, #52]	; 0x34
	((Pio *)hw)->PIO_OER = mask;
  4008da:	6118      	str	r0, [r3, #16]
	((Pio *)hw)->PIO_PER = mask;
  4008dc:	6018      	str	r0, [r3, #0]
	((Pio *)hw)->PIO_CODR = mask;
  4008de:	f503 6380 	add.w	r3, r3, #1024	; 0x400
  4008e2:	f44f 7080 	mov.w	r0, #256	; 0x100
  4008e6:	6358      	str	r0, [r3, #52]	; 0x34
	((Pio *)hw)->PIO_OER = mask;
  4008e8:	6118      	str	r0, [r3, #16]
	((Pio *)hw)->PIO_PER = mask;
  4008ea:	6018      	str	r0, [r3, #0]
	((Pio *)hw)->PIO_CODR = mask;
  4008ec:	f503 7300 	add.w	r3, r3, #512	; 0x200
  4008f0:	6359      	str	r1, [r3, #52]	; 0x34
	((Pio *)hw)->PIO_OER = mask;
  4008f2:	6119      	str	r1, [r3, #16]
	((Pio *)hw)->PIO_PER = mask;
  4008f4:	6019      	str	r1, [r3, #0]
	((Pio *)hw)->PIO_CODR = mask;
  4008f6:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  4008fa:	6359      	str	r1, [r3, #52]	; 0x34
	((Pio *)hw)->PIO_OER = mask;
  4008fc:	6119      	str	r1, [r3, #16]
	((Pio *)hw)->PIO_PER = mask;
  4008fe:	6019      	str	r1, [r3, #0]
	((Pio *)hw)->PIO_CODR = mask;
  400900:	635a      	str	r2, [r3, #52]	; 0x34
	((Pio *)hw)->PIO_OER = mask;
  400902:	611a      	str	r2, [r3, #16]
	((Pio *)hw)->PIO_PER = mask;
  400904:	601a      	str	r2, [r3, #0]
	// Set pin direction to output
	gpio_set_pin_direction(PIN_GPIO_6, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(PIN_GPIO_6, GPIO_PIN_FUNCTION_OFF);

	ADC_0_init();
  400906:	4b0d      	ldr	r3, [pc, #52]	; (40093c <system_init+0xdc>)
  400908:	4798      	blx	r3

	ADC_1_init();
  40090a:	4b0d      	ldr	r3, [pc, #52]	; (400940 <system_init+0xe0>)
  40090c:	4798      	blx	r3
	EXTERNAL_IRQ_D_init();
  40090e:	4b0d      	ldr	r3, [pc, #52]	; (400944 <system_init+0xe4>)
  400910:	4798      	blx	r3
	EXTERNAL_IRQ_A_init();
  400912:	4b0d      	ldr	r3, [pc, #52]	; (400948 <system_init+0xe8>)
  400914:	4798      	blx	r3

	PWM_0_init();
  400916:	4b0d      	ldr	r3, [pc, #52]	; (40094c <system_init+0xec>)
  400918:	4798      	blx	r3

	PWM_1_init();
  40091a:	4b0d      	ldr	r3, [pc, #52]	; (400950 <system_init+0xf0>)
  40091c:	4798      	blx	r3

	delay_driver_init();
  40091e:	4b0d      	ldr	r3, [pc, #52]	; (400954 <system_init+0xf4>)
  400920:	4798      	blx	r3

	EDBG_COM_init();
  400922:	4b0d      	ldr	r3, [pc, #52]	; (400958 <system_init+0xf8>)
  400924:	4798      	blx	r3

	//CAN_1_init();

	ext_irq_init();
  400926:	4b0d      	ldr	r3, [pc, #52]	; (40095c <system_init+0xfc>)
  400928:	4798      	blx	r3
  40092a:	bd08      	pop	{r3, pc}
  40092c:	00400f5d 	.word	0x00400f5d
  400930:	400e0600 	.word	0x400e0600
  400934:	400e1850 	.word	0x400e1850
  400938:	400e0e00 	.word	0x400e0e00
  40093c:	004005b1 	.word	0x004005b1
  400940:	0040061d 	.word	0x0040061d
  400944:	00400649 	.word	0x00400649
  400948:	00400661 	.word	0x00400661
  40094c:	004006f9 	.word	0x004006f9
  400950:	00400781 	.word	0x00400781
  400954:	004007b5 	.word	0x004007b5
  400958:	0040082d 	.word	0x0040082d
  40095c:	00400b11 	.word	0x00400b11

00400960 <adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t adc_sync_init(struct adc_sync_descriptor *const descr, void *const hw, void *const func)
{
  400960:	b538      	push	{r3, r4, r5, lr}
	ASSERT(descr && hw);
  400962:	4604      	mov	r4, r0
  400964:	460d      	mov	r5, r1
  400966:	2800      	cmp	r0, #0
  400968:	bf18      	it	ne
  40096a:	2900      	cmpne	r1, #0
  40096c:	bf14      	ite	ne
  40096e:	2001      	movne	r0, #1
  400970:	2000      	moveq	r0, #0
  400972:	2239      	movs	r2, #57	; 0x39
  400974:	4903      	ldr	r1, [pc, #12]	; (400984 <adc_sync_init+0x24>)
  400976:	4b04      	ldr	r3, [pc, #16]	; (400988 <adc_sync_init+0x28>)
  400978:	4798      	blx	r3

	return _adc_sync_init(&descr->device, hw);
  40097a:	4629      	mov	r1, r5
  40097c:	4620      	mov	r0, r4
  40097e:	4b03      	ldr	r3, [pc, #12]	; (40098c <adc_sync_init+0x2c>)
  400980:	4798      	blx	r3
}
  400982:	bd38      	pop	{r3, r4, r5, pc}
  400984:	00406098 	.word	0x00406098
  400988:	00400dad 	.word	0x00400dad
  40098c:	00400ed1 	.word	0x00400ed1

00400990 <adc_sync_enable_channel>:

/**
 * \brief Enable ADC
 */
int32_t adc_sync_enable_channel(struct adc_sync_descriptor *const descr, const uint8_t channel)
{
  400990:	b538      	push	{r3, r4, r5, lr}
  400992:	460d      	mov	r5, r1
	ASSERT(descr);
  400994:	4604      	mov	r4, r0
  400996:	224e      	movs	r2, #78	; 0x4e
  400998:	4905      	ldr	r1, [pc, #20]	; (4009b0 <adc_sync_enable_channel+0x20>)
  40099a:	3000      	adds	r0, #0
  40099c:	bf18      	it	ne
  40099e:	2001      	movne	r0, #1
  4009a0:	4b04      	ldr	r3, [pc, #16]	; (4009b4 <adc_sync_enable_channel+0x24>)
  4009a2:	4798      	blx	r3
	_adc_sync_enable_channel(&descr->device, channel);
  4009a4:	4629      	mov	r1, r5
  4009a6:	4620      	mov	r0, r4
  4009a8:	4b03      	ldr	r3, [pc, #12]	; (4009b8 <adc_sync_enable_channel+0x28>)
  4009aa:	4798      	blx	r3

	return ERR_NONE;
}
  4009ac:	2000      	movs	r0, #0
  4009ae:	bd38      	pop	{r3, r4, r5, pc}
  4009b0:	00406098 	.word	0x00406098
  4009b4:	00400dad 	.word	0x00400dad
  4009b8:	00400f09 	.word	0x00400f09

004009bc <adc_sync_read_channel>:
/*
 * \brief Read data from ADC
 */
int32_t adc_sync_read_channel(struct adc_sync_descriptor *const descr, const uint8_t channel, uint8_t *const buffer,
                              const uint16_t length)
{
  4009bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4009c0:	460d      	mov	r5, r1
  4009c2:	4699      	mov	r9, r3
	uint8_t  data_size;
	uint16_t offset = 0;

	ASSERT(descr && buffer && length);
  4009c4:	4607      	mov	r7, r0
  4009c6:	4690      	mov	r8, r2
  4009c8:	2800      	cmp	r0, #0
  4009ca:	bf18      	it	ne
  4009cc:	2a00      	cmpne	r2, #0
  4009ce:	d002      	beq.n	4009d6 <adc_sync_read_channel+0x1a>
  4009d0:	b9cb      	cbnz	r3, 400a06 <adc_sync_read_channel+0x4a>
  4009d2:	2000      	movs	r0, #0
  4009d4:	e000      	b.n	4009d8 <adc_sync_read_channel+0x1c>
  4009d6:	2000      	movs	r0, #0
  4009d8:	f8df a07c 	ldr.w	sl, [pc, #124]	; 400a58 <adc_sync_read_channel+0x9c>
  4009dc:	2267      	movs	r2, #103	; 0x67
  4009de:	4651      	mov	r1, sl
  4009e0:	4e18      	ldr	r6, [pc, #96]	; (400a44 <adc_sync_read_channel+0x88>)
  4009e2:	47b0      	blx	r6
	data_size = _adc_sync_get_data_size(&descr->device);
  4009e4:	463c      	mov	r4, r7
  4009e6:	4638      	mov	r0, r7
  4009e8:	4b17      	ldr	r3, [pc, #92]	; (400a48 <adc_sync_read_channel+0x8c>)
  4009ea:	4798      	blx	r3
  4009ec:	4607      	mov	r7, r0
	ASSERT(!(length % data_size));
  4009ee:	fb99 f0f0 	sdiv	r0, r9, r0
  4009f2:	fb07 9010 	mls	r0, r7, r0, r9
  4009f6:	2269      	movs	r2, #105	; 0x69
  4009f8:	4651      	mov	r1, sl
  4009fa:	fab0 f080 	clz	r0, r0
  4009fe:	0940      	lsrs	r0, r0, #5
  400a00:	47b0      	blx	r6
	uint16_t offset = 0;
  400a02:	2600      	movs	r6, #0
  400a04:	e005      	b.n	400a12 <adc_sync_read_channel+0x56>
	ASSERT(descr && buffer && length);
  400a06:	2001      	movs	r0, #1
  400a08:	e7e6      	b.n	4009d8 <adc_sync_read_channel+0x1c>
		result         = _adc_sync_read_channel_data(&descr->device, channel);
		buffer[offset] = result;
		if (1 < data_size) {
			buffer[offset + 1] = result >> 8;
		}
		offset += data_size;
  400a0a:	443e      	add	r6, r7
  400a0c:	b2b6      	uxth	r6, r6
	} while (offset < length);
  400a0e:	45b1      	cmp	r9, r6
  400a10:	d915      	bls.n	400a3e <adc_sync_read_channel+0x82>
		_adc_sync_convert(&descr->device);
  400a12:	4620      	mov	r0, r4
  400a14:	4b0d      	ldr	r3, [pc, #52]	; (400a4c <adc_sync_read_channel+0x90>)
  400a16:	4798      	blx	r3
		while (!_adc_sync_is_channel_conversion_done(&descr->device, channel))
  400a18:	4629      	mov	r1, r5
  400a1a:	4620      	mov	r0, r4
  400a1c:	4b0c      	ldr	r3, [pc, #48]	; (400a50 <adc_sync_read_channel+0x94>)
  400a1e:	4798      	blx	r3
  400a20:	2800      	cmp	r0, #0
  400a22:	d0f9      	beq.n	400a18 <adc_sync_read_channel+0x5c>
		result         = _adc_sync_read_channel_data(&descr->device, channel);
  400a24:	4629      	mov	r1, r5
  400a26:	4620      	mov	r0, r4
  400a28:	4b0a      	ldr	r3, [pc, #40]	; (400a54 <adc_sync_read_channel+0x98>)
  400a2a:	4798      	blx	r3
		buffer[offset] = result;
  400a2c:	f808 0006 	strb.w	r0, [r8, r6]
		if (1 < data_size) {
  400a30:	2f01      	cmp	r7, #1
  400a32:	d9ea      	bls.n	400a0a <adc_sync_read_channel+0x4e>
			buffer[offset + 1] = result >> 8;
  400a34:	1c73      	adds	r3, r6, #1
  400a36:	0a00      	lsrs	r0, r0, #8
  400a38:	f808 0003 	strb.w	r0, [r8, r3]
  400a3c:	e7e5      	b.n	400a0a <adc_sync_read_channel+0x4e>

	return offset;
}
  400a3e:	4630      	mov	r0, r6
  400a40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400a44:	00400dad 	.word	0x00400dad
  400a48:	00400f15 	.word	0x00400f15
  400a4c:	00400f2d 	.word	0x00400f2d
  400a50:	00400f19 	.word	0x00400f19
  400a54:	00400f35 	.word	0x00400f35
  400a58:	00406098 	.word	0x00406098

00400a5c <atomic_enter_critical>:
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
  400a5c:	f3ef 8310 	mrs	r3, PRIMASK
/**
 * \brief Disable interrupts, enter critical section
 */
void atomic_enter_critical(hal_atomic_t volatile *atomic)
{
	*atomic = __get_PRIMASK();
  400a60:	6003      	str	r3, [r0, #0]
  __ASM volatile ("cpsid i" : : : "memory");
  400a62:	b672      	cpsid	i
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
  400a64:	f3bf 8f5f 	dmb	sy
  400a68:	4770      	bx	lr

00400a6a <atomic_leave_critical>:
  400a6a:	f3bf 8f5f 	dmb	sy
 * \brief Exit atomic section
 */
void atomic_leave_critical(hal_atomic_t volatile *atomic)
{
	__DMB();
	__set_PRIMASK(*atomic);
  400a6e:	6803      	ldr	r3, [r0, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
  400a70:	f383 8810 	msr	PRIMASK, r3
  400a74:	4770      	bx	lr
	...

00400a78 <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
  400a78:	b508      	push	{r3, lr}
	_delay_init(hardware = hw);
  400a7a:	4b02      	ldr	r3, [pc, #8]	; (400a84 <delay_init+0xc>)
  400a7c:	6018      	str	r0, [r3, #0]
  400a7e:	4b02      	ldr	r3, [pc, #8]	; (400a88 <delay_init+0x10>)
  400a80:	4798      	blx	r3
  400a82:	bd08      	pop	{r3, pc}
  400a84:	204001ec 	.word	0x204001ec
  400a88:	004015f9 	.word	0x004015f9

00400a8c <delay_us>:

/**
 * \brief Perform delay in us
 */
void delay_us(const uint16_t us)
{
  400a8c:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_us(us));
  400a8e:	4b04      	ldr	r3, [pc, #16]	; (400aa0 <delay_us+0x14>)
  400a90:	681c      	ldr	r4, [r3, #0]
  400a92:	4b04      	ldr	r3, [pc, #16]	; (400aa4 <delay_us+0x18>)
  400a94:	4798      	blx	r3
  400a96:	4601      	mov	r1, r0
  400a98:	4620      	mov	r0, r4
  400a9a:	4b03      	ldr	r3, [pc, #12]	; (400aa8 <delay_us+0x1c>)
  400a9c:	4798      	blx	r3
  400a9e:	bd10      	pop	{r4, pc}
  400aa0:	204001ec 	.word	0x204001ec
  400aa4:	00400f41 	.word	0x00400f41
  400aa8:	00401605 	.word	0x00401605

00400aac <delay_ms>:

/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
  400aac:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
  400aae:	4b04      	ldr	r3, [pc, #16]	; (400ac0 <delay_ms+0x14>)
  400ab0:	681c      	ldr	r4, [r3, #0]
  400ab2:	4b04      	ldr	r3, [pc, #16]	; (400ac4 <delay_ms+0x18>)
  400ab4:	4798      	blx	r3
  400ab6:	4601      	mov	r1, r0
  400ab8:	4620      	mov	r0, r4
  400aba:	4b03      	ldr	r3, [pc, #12]	; (400ac8 <delay_ms+0x1c>)
  400abc:	4798      	blx	r3
  400abe:	bd10      	pop	{r4, pc}
  400ac0:	204001ec 	.word	0x204001ec
  400ac4:	00400f4b 	.word	0x00400f4b
  400ac8:	00401605 	.word	0x00401605

00400acc <process_ext_irq>:
 * \brief Interrupt processing routine
 *
 * \param[in] pin The pin which triggered the interrupt
 */
static void process_ext_irq(const uint32_t pin)
{
  400acc:	b538      	push	{r3, r4, r5, lr}
	uint8_t lower = 0, middle, upper = EXT_IRQ_AMOUNT;
  400ace:	2503      	movs	r5, #3
  400ad0:	2400      	movs	r4, #0

	while (upper >= lower) {
  400ad2:	e007      	b.n	400ae4 <process_ext_irq+0x18>
		if (middle >= EXT_IRQ_AMOUNT) {
			return;
		}

		if (ext_irqs[middle].pin == pin) {
			if (ext_irqs[middle].cb) {
  400ad4:	4a0d      	ldr	r2, [pc, #52]	; (400b0c <process_ext_irq+0x40>)
  400ad6:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
  400ada:	b1b3      	cbz	r3, 400b0a <process_ext_irq+0x3e>
				ext_irqs[middle].cb();
  400adc:	4798      	blx	r3
  400ade:	bd38      	pop	{r3, r4, r5, pc}
		}

		if (ext_irqs[middle].pin < pin) {
			lower = middle + 1;
		} else {
			upper = middle - 1;
  400ae0:	3a01      	subs	r2, #1
  400ae2:	b2d5      	uxtb	r5, r2
	while (upper >= lower) {
  400ae4:	42ac      	cmp	r4, r5
  400ae6:	d810      	bhi.n	400b0a <process_ext_irq+0x3e>
		middle = (upper + lower) >> 1;
  400ae8:	192b      	adds	r3, r5, r4
  400aea:	105b      	asrs	r3, r3, #1
  400aec:	b2da      	uxtb	r2, r3
		if (middle >= EXT_IRQ_AMOUNT) {
  400aee:	2a02      	cmp	r2, #2
  400af0:	d80b      	bhi.n	400b0a <process_ext_irq+0x3e>
  400af2:	4613      	mov	r3, r2
		if (ext_irqs[middle].pin == pin) {
  400af4:	4905      	ldr	r1, [pc, #20]	; (400b0c <process_ext_irq+0x40>)
  400af6:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
  400afa:	6849      	ldr	r1, [r1, #4]
  400afc:	4281      	cmp	r1, r0
  400afe:	d0e9      	beq.n	400ad4 <process_ext_irq+0x8>
		if (ext_irqs[middle].pin < pin) {
  400b00:	4281      	cmp	r1, r0
  400b02:	d2ed      	bcs.n	400ae0 <process_ext_irq+0x14>
			lower = middle + 1;
  400b04:	3201      	adds	r2, #1
  400b06:	b2d4      	uxtb	r4, r2
  400b08:	e7ec      	b.n	400ae4 <process_ext_irq+0x18>
  400b0a:	bd38      	pop	{r3, r4, r5, pc}
  400b0c:	204001f0 	.word	0x204001f0

00400b10 <ext_irq_init>:
{
  400b10:	b508      	push	{r3, lr}
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
  400b12:	2300      	movs	r3, #0
  400b14:	e00a      	b.n	400b2c <ext_irq_init+0x1c>
		ext_irqs[i].pin = 0xFFFFFFFF;
  400b16:	4a08      	ldr	r2, [pc, #32]	; (400b38 <ext_irq_init+0x28>)
  400b18:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
  400b1c:	f04f 30ff 	mov.w	r0, #4294967295
  400b20:	6048      	str	r0, [r1, #4]
		ext_irqs[i].cb  = NULL;
  400b22:	2100      	movs	r1, #0
  400b24:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
	for (i = 0; i < EXT_IRQ_AMOUNT; i++) {
  400b28:	3301      	adds	r3, #1
  400b2a:	b29b      	uxth	r3, r3
  400b2c:	2b02      	cmp	r3, #2
  400b2e:	d9f2      	bls.n	400b16 <ext_irq_init+0x6>
	return _ext_irq_init(process_ext_irq);
  400b30:	4802      	ldr	r0, [pc, #8]	; (400b3c <ext_irq_init+0x2c>)
  400b32:	4b03      	ldr	r3, [pc, #12]	; (400b40 <ext_irq_init+0x30>)
  400b34:	4798      	blx	r3
}
  400b36:	bd08      	pop	{r3, pc}
  400b38:	204001f0 	.word	0x204001f0
  400b3c:	00400acd 	.word	0x00400acd
  400b40:	0040126d 	.word	0x0040126d

00400b44 <io_write>:

/**
 * \brief I/O write interface
 */
int32_t io_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
  400b44:	b570      	push	{r4, r5, r6, lr}
  400b46:	4616      	mov	r6, r2
	ASSERT(io_descr && buf);
  400b48:	4604      	mov	r4, r0
  400b4a:	460d      	mov	r5, r1
  400b4c:	2800      	cmp	r0, #0
  400b4e:	bf18      	it	ne
  400b50:	2900      	cmpne	r1, #0
  400b52:	bf14      	ite	ne
  400b54:	2001      	movne	r0, #1
  400b56:	2000      	moveq	r0, #0
  400b58:	2234      	movs	r2, #52	; 0x34
  400b5a:	4904      	ldr	r1, [pc, #16]	; (400b6c <io_write+0x28>)
  400b5c:	4b04      	ldr	r3, [pc, #16]	; (400b70 <io_write+0x2c>)
  400b5e:	4798      	blx	r3
	return io_descr->write(io_descr, buf, length);
  400b60:	6823      	ldr	r3, [r4, #0]
  400b62:	4632      	mov	r2, r6
  400b64:	4629      	mov	r1, r5
  400b66:	4620      	mov	r0, r4
  400b68:	4798      	blx	r3
}
  400b6a:	bd70      	pop	{r4, r5, r6, pc}
  400b6c:	004060b4 	.word	0x004060b4
  400b70:	00400dad 	.word	0x00400dad

00400b74 <io_read>:

/**
 * \brief I/O read interface
 */
int32_t io_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
  400b74:	b570      	push	{r4, r5, r6, lr}
  400b76:	4616      	mov	r6, r2
	ASSERT(io_descr && buf);
  400b78:	4604      	mov	r4, r0
  400b7a:	460d      	mov	r5, r1
  400b7c:	2800      	cmp	r0, #0
  400b7e:	bf18      	it	ne
  400b80:	2900      	cmpne	r1, #0
  400b82:	bf14      	ite	ne
  400b84:	2001      	movne	r0, #1
  400b86:	2000      	moveq	r0, #0
  400b88:	223d      	movs	r2, #61	; 0x3d
  400b8a:	4904      	ldr	r1, [pc, #16]	; (400b9c <io_read+0x28>)
  400b8c:	4b04      	ldr	r3, [pc, #16]	; (400ba0 <io_read+0x2c>)
  400b8e:	4798      	blx	r3
	return io_descr->read(io_descr, buf, length);
  400b90:	6863      	ldr	r3, [r4, #4]
  400b92:	4632      	mov	r2, r6
  400b94:	4629      	mov	r1, r5
  400b96:	4620      	mov	r0, r4
  400b98:	4798      	blx	r3
}
  400b9a:	bd70      	pop	{r4, r5, r6, pc}
  400b9c:	004060b4 	.word	0x004060b4
  400ba0:	00400dad 	.word	0x00400dad

00400ba4 <pwm_period_expired>:

/**
 * \internal Process interrupts caused by period experied
 */
static void pwm_period_expired(struct _pwm_device *device)
{
  400ba4:	b508      	push	{r3, lr}
	struct pwm_descriptor *const descr = CONTAINER_OF(device, struct pwm_descriptor, device);

	if (descr->pwm_cb.period) {
  400ba6:	6943      	ldr	r3, [r0, #20]
  400ba8:	b103      	cbz	r3, 400bac <pwm_period_expired+0x8>
		descr->pwm_cb.period(descr);
  400baa:	4798      	blx	r3
  400bac:	bd08      	pop	{r3, pc}

00400bae <pwm_detect_fault>:

/**
 * \internal Process interrupts caused by pwm fault
 */
static void pwm_detect_fault(struct _pwm_device *device)
{
  400bae:	b508      	push	{r3, lr}
	struct pwm_descriptor *const descr = CONTAINER_OF(device, struct pwm_descriptor, device);

	if (descr->pwm_cb.error) {
  400bb0:	6983      	ldr	r3, [r0, #24]
  400bb2:	b103      	cbz	r3, 400bb6 <pwm_detect_fault+0x8>
		descr->pwm_cb.error(descr);
  400bb4:	4798      	blx	r3
  400bb6:	bd08      	pop	{r3, pc}

00400bb8 <pwm_init>:
{
  400bb8:	b538      	push	{r3, r4, r5, lr}
	ASSERT(descr && hw);
  400bba:	4604      	mov	r4, r0
  400bbc:	460d      	mov	r5, r1
  400bbe:	2800      	cmp	r0, #0
  400bc0:	bf18      	it	ne
  400bc2:	2900      	cmpne	r1, #0
  400bc4:	bf14      	ite	ne
  400bc6:	2001      	movne	r0, #1
  400bc8:	2000      	moveq	r0, #0
  400bca:	2233      	movs	r2, #51	; 0x33
  400bcc:	4906      	ldr	r1, [pc, #24]	; (400be8 <pwm_init+0x30>)
  400bce:	4b07      	ldr	r3, [pc, #28]	; (400bec <pwm_init+0x34>)
  400bd0:	4798      	blx	r3
	_pwm_init(&descr->device, hw);
  400bd2:	4629      	mov	r1, r5
  400bd4:	4620      	mov	r0, r4
  400bd6:	4b06      	ldr	r3, [pc, #24]	; (400bf0 <pwm_init+0x38>)
  400bd8:	4798      	blx	r3
	descr->device.callback.pwm_period_cb = pwm_period_expired;
  400bda:	4b06      	ldr	r3, [pc, #24]	; (400bf4 <pwm_init+0x3c>)
  400bdc:	6023      	str	r3, [r4, #0]
	descr->device.callback.pwm_error_cb  = pwm_detect_fault;
  400bde:	4b06      	ldr	r3, [pc, #24]	; (400bf8 <pwm_init+0x40>)
  400be0:	6063      	str	r3, [r4, #4]
}
  400be2:	2000      	movs	r0, #0
  400be4:	bd38      	pop	{r3, r4, r5, pc}
  400be6:	bf00      	nop
  400be8:	004060c8 	.word	0x004060c8
  400bec:	00400dad 	.word	0x00400dad
  400bf0:	004013d5 	.word	0x004013d5
  400bf4:	00400ba5 	.word	0x00400ba5
  400bf8:	00400baf 	.word	0x00400baf

00400bfc <pwm_enable>:
{
  400bfc:	b510      	push	{r4, lr}
	ASSERT(descr);
  400bfe:	4604      	mov	r4, r0
  400c00:	224a      	movs	r2, #74	; 0x4a
  400c02:	4909      	ldr	r1, [pc, #36]	; (400c28 <pwm_enable+0x2c>)
  400c04:	3000      	adds	r0, #0
  400c06:	bf18      	it	ne
  400c08:	2001      	movne	r0, #1
  400c0a:	4b08      	ldr	r3, [pc, #32]	; (400c2c <pwm_enable+0x30>)
  400c0c:	4798      	blx	r3
	if (_pwm_is_enabled(&descr->device)) {
  400c0e:	4620      	mov	r0, r4
  400c10:	4b07      	ldr	r3, [pc, #28]	; (400c30 <pwm_enable+0x34>)
  400c12:	4798      	blx	r3
  400c14:	b920      	cbnz	r0, 400c20 <pwm_enable+0x24>
	_pwm_enable(&descr->device);
  400c16:	4620      	mov	r0, r4
  400c18:	4b06      	ldr	r3, [pc, #24]	; (400c34 <pwm_enable+0x38>)
  400c1a:	4798      	blx	r3
	return ERR_NONE;
  400c1c:	2000      	movs	r0, #0
  400c1e:	bd10      	pop	{r4, pc}
		return ERR_DENIED;
  400c20:	f06f 0010 	mvn.w	r0, #16
}
  400c24:	bd10      	pop	{r4, pc}
  400c26:	bf00      	nop
  400c28:	004060c8 	.word	0x004060c8
  400c2c:	00400dad 	.word	0x00400dad
  400c30:	004015b1 	.word	0x004015b1
  400c34:	0040150d 	.word	0x0040150d

00400c38 <pwm_set_parameters>:
{
  400c38:	b570      	push	{r4, r5, r6, lr}
  400c3a:	460d      	mov	r5, r1
  400c3c:	4616      	mov	r6, r2
	ASSERT(descr);
  400c3e:	4604      	mov	r4, r0
  400c40:	227c      	movs	r2, #124	; 0x7c
  400c42:	4906      	ldr	r1, [pc, #24]	; (400c5c <pwm_set_parameters+0x24>)
  400c44:	3000      	adds	r0, #0
  400c46:	bf18      	it	ne
  400c48:	2001      	movne	r0, #1
  400c4a:	4b05      	ldr	r3, [pc, #20]	; (400c60 <pwm_set_parameters+0x28>)
  400c4c:	4798      	blx	r3
	_pwm_set_param(&descr->device, period, duty_cycle);
  400c4e:	4632      	mov	r2, r6
  400c50:	4629      	mov	r1, r5
  400c52:	4620      	mov	r0, r4
  400c54:	4b03      	ldr	r3, [pc, #12]	; (400c64 <pwm_set_parameters+0x2c>)
  400c56:	4798      	blx	r3
}
  400c58:	2000      	movs	r0, #0
  400c5a:	bd70      	pop	{r4, r5, r6, pc}
  400c5c:	004060c8 	.word	0x004060c8
  400c60:	00400dad 	.word	0x00400dad
  400c64:	00401551 	.word	0x00401551

00400c68 <usart_sync_write>:
 * \param[in] length The number of bytes to write
 *
 * \return The number of bytes written.
 */
static int32_t usart_sync_write(struct io_descriptor *const io_descr, const uint8_t *const buf, const uint16_t length)
{
  400c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400c6a:	4616      	mov	r6, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
  400c6c:	4605      	mov	r5, r0
  400c6e:	460f      	mov	r7, r1
  400c70:	2800      	cmp	r0, #0
  400c72:	bf18      	it	ne
  400c74:	2900      	cmpne	r1, #0
  400c76:	d002      	beq.n	400c7e <usart_sync_write+0x16>
  400c78:	bb0a      	cbnz	r2, 400cbe <usart_sync_write+0x56>
  400c7a:	2000      	movs	r0, #0
  400c7c:	e000      	b.n	400c80 <usart_sync_write+0x18>
  400c7e:	2000      	movs	r0, #0
  400c80:	22f1      	movs	r2, #241	; 0xf1
  400c82:	4910      	ldr	r1, [pc, #64]	; (400cc4 <usart_sync_write+0x5c>)
  400c84:	4b10      	ldr	r3, [pc, #64]	; (400cc8 <usart_sync_write+0x60>)
  400c86:	4798      	blx	r3
	while (!_usart_sync_is_ready_to_send(&descr->device))
  400c88:	f105 0408 	add.w	r4, r5, #8
  400c8c:	4620      	mov	r0, r4
  400c8e:	4b0f      	ldr	r3, [pc, #60]	; (400ccc <usart_sync_write+0x64>)
  400c90:	4798      	blx	r3
  400c92:	2800      	cmp	r0, #0
  400c94:	d0f8      	beq.n	400c88 <usart_sync_write+0x20>
  400c96:	2500      	movs	r5, #0
		;
	do {
		_usart_sync_write_byte(&descr->device, buf[offset]);
  400c98:	5d79      	ldrb	r1, [r7, r5]
  400c9a:	4620      	mov	r0, r4
  400c9c:	4b0c      	ldr	r3, [pc, #48]	; (400cd0 <usart_sync_write+0x68>)
  400c9e:	4798      	blx	r3
		while (!_usart_sync_is_ready_to_send(&descr->device))
  400ca0:	4620      	mov	r0, r4
  400ca2:	4b0a      	ldr	r3, [pc, #40]	; (400ccc <usart_sync_write+0x64>)
  400ca4:	4798      	blx	r3
  400ca6:	2800      	cmp	r0, #0
  400ca8:	d0fa      	beq.n	400ca0 <usart_sync_write+0x38>
			;
	} while (++offset < length);
  400caa:	3501      	adds	r5, #1
  400cac:	42b5      	cmp	r5, r6
  400cae:	d3f3      	bcc.n	400c98 <usart_sync_write+0x30>
	while (!_usart_sync_is_transmit_done(&descr->device))
  400cb0:	4620      	mov	r0, r4
  400cb2:	4b08      	ldr	r3, [pc, #32]	; (400cd4 <usart_sync_write+0x6c>)
  400cb4:	4798      	blx	r3
  400cb6:	2800      	cmp	r0, #0
  400cb8:	d0fa      	beq.n	400cb0 <usart_sync_write+0x48>
		;
	return (int32_t)offset;
}
  400cba:	4628      	mov	r0, r5
  400cbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	ASSERT(io_descr && buf && length);
  400cbe:	2001      	movs	r0, #1
  400cc0:	e7de      	b.n	400c80 <usart_sync_write+0x18>
  400cc2:	bf00      	nop
  400cc4:	004060e0 	.word	0x004060e0
  400cc8:	00400dad 	.word	0x00400dad
  400ccc:	004017e1 	.word	0x004017e1
  400cd0:	00401799 	.word	0x00401799
  400cd4:	00401809 	.word	0x00401809

00400cd8 <usart_sync_read>:
 * \param[in] length The size of a buffer
 *
 * \return The number of bytes read.
 */
static int32_t usart_sync_read(struct io_descriptor *const io_descr, uint8_t *const buf, const uint16_t length)
{
  400cd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400cdc:	4617      	mov	r7, r2
	uint32_t                      offset = 0;
	struct usart_sync_descriptor *descr  = CONTAINER_OF(io_descr, struct usart_sync_descriptor, io);

	ASSERT(io_descr && buf && length);
  400cde:	4605      	mov	r5, r0
  400ce0:	4688      	mov	r8, r1
  400ce2:	2800      	cmp	r0, #0
  400ce4:	bf18      	it	ne
  400ce6:	2900      	cmpne	r1, #0
  400ce8:	d002      	beq.n	400cf0 <usart_sync_read+0x18>
  400cea:	b9d2      	cbnz	r2, 400d22 <usart_sync_read+0x4a>
  400cec:	2000      	movs	r0, #0
  400cee:	e000      	b.n	400cf2 <usart_sync_read+0x1a>
  400cf0:	2000      	movs	r0, #0
  400cf2:	f44f 7286 	mov.w	r2, #268	; 0x10c
  400cf6:	490c      	ldr	r1, [pc, #48]	; (400d28 <usart_sync_read+0x50>)
  400cf8:	4b0c      	ldr	r3, [pc, #48]	; (400d2c <usart_sync_read+0x54>)
  400cfa:	4798      	blx	r3
	uint32_t                      offset = 0;
  400cfc:	2600      	movs	r6, #0
	do {
		while (!_usart_sync_is_byte_received(&descr->device))
  400cfe:	f105 0408 	add.w	r4, r5, #8
  400d02:	4620      	mov	r0, r4
  400d04:	4b0a      	ldr	r3, [pc, #40]	; (400d30 <usart_sync_read+0x58>)
  400d06:	4798      	blx	r3
  400d08:	2800      	cmp	r0, #0
  400d0a:	d0f8      	beq.n	400cfe <usart_sync_read+0x26>
			;
		buf[offset] = _usart_sync_read_byte(&descr->device);
  400d0c:	4620      	mov	r0, r4
  400d0e:	4b09      	ldr	r3, [pc, #36]	; (400d34 <usart_sync_read+0x5c>)
  400d10:	4798      	blx	r3
  400d12:	f808 0006 	strb.w	r0, [r8, r6]
	} while (++offset < length);
  400d16:	3601      	adds	r6, #1
  400d18:	42be      	cmp	r6, r7
  400d1a:	d3f0      	bcc.n	400cfe <usart_sync_read+0x26>

	return (int32_t)offset;
}
  400d1c:	4630      	mov	r0, r6
  400d1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	ASSERT(io_descr && buf && length);
  400d22:	2001      	movs	r0, #1
  400d24:	e7e5      	b.n	400cf2 <usart_sync_read+0x1a>
  400d26:	bf00      	nop
  400d28:	004060e0 	.word	0x004060e0
  400d2c:	00400dad 	.word	0x00400dad
  400d30:	00401831 	.word	0x00401831
  400d34:	004017bd 	.word	0x004017bd

00400d38 <usart_sync_init>:
{
  400d38:	b538      	push	{r3, r4, r5, lr}
	ASSERT(descr && hw);
  400d3a:	4604      	mov	r4, r0
  400d3c:	460d      	mov	r5, r1
  400d3e:	2800      	cmp	r0, #0
  400d40:	bf18      	it	ne
  400d42:	2900      	cmpne	r1, #0
  400d44:	bf14      	ite	ne
  400d46:	2001      	movne	r0, #1
  400d48:	2000      	moveq	r0, #0
  400d4a:	2234      	movs	r2, #52	; 0x34
  400d4c:	4907      	ldr	r1, [pc, #28]	; (400d6c <usart_sync_init+0x34>)
  400d4e:	4b08      	ldr	r3, [pc, #32]	; (400d70 <usart_sync_init+0x38>)
  400d50:	4798      	blx	r3
	init_status = _usart_sync_init(&descr->device, hw);
  400d52:	4629      	mov	r1, r5
  400d54:	f104 0008 	add.w	r0, r4, #8
  400d58:	4b06      	ldr	r3, [pc, #24]	; (400d74 <usart_sync_init+0x3c>)
  400d5a:	4798      	blx	r3
	if (init_status) {
  400d5c:	4603      	mov	r3, r0
  400d5e:	b918      	cbnz	r0, 400d68 <usart_sync_init+0x30>
	descr->io.read  = usart_sync_read;
  400d60:	4a05      	ldr	r2, [pc, #20]	; (400d78 <usart_sync_init+0x40>)
  400d62:	6062      	str	r2, [r4, #4]
	descr->io.write = usart_sync_write;
  400d64:	4a05      	ldr	r2, [pc, #20]	; (400d7c <usart_sync_init+0x44>)
  400d66:	6022      	str	r2, [r4, #0]
}
  400d68:	4618      	mov	r0, r3
  400d6a:	bd38      	pop	{r3, r4, r5, pc}
  400d6c:	004060e0 	.word	0x004060e0
  400d70:	00400dad 	.word	0x00400dad
  400d74:	0040172d 	.word	0x0040172d
  400d78:	00400cd9 	.word	0x00400cd9
  400d7c:	00400c69 	.word	0x00400c69

00400d80 <usart_sync_enable>:
{
  400d80:	b510      	push	{r4, lr}
	ASSERT(descr);
  400d82:	4604      	mov	r4, r0
  400d84:	2253      	movs	r2, #83	; 0x53
  400d86:	4906      	ldr	r1, [pc, #24]	; (400da0 <usart_sync_enable+0x20>)
  400d88:	3000      	adds	r0, #0
  400d8a:	bf18      	it	ne
  400d8c:	2001      	movne	r0, #1
  400d8e:	4b05      	ldr	r3, [pc, #20]	; (400da4 <usart_sync_enable+0x24>)
  400d90:	4798      	blx	r3
	_usart_sync_enable(&descr->device);
  400d92:	f104 0008 	add.w	r0, r4, #8
  400d96:	4b04      	ldr	r3, [pc, #16]	; (400da8 <usart_sync_enable+0x28>)
  400d98:	4798      	blx	r3
}
  400d9a:	2000      	movs	r0, #0
  400d9c:	bd10      	pop	{r4, pc}
  400d9e:	bf00      	nop
  400da0:	004060e0 	.word	0x004060e0
  400da4:	00400dad 	.word	0x00400dad
  400da8:	00401765 	.word	0x00401765

00400dac <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
  400dac:	b900      	cbnz	r0, 400db0 <assert+0x4>
		__asm("BKPT #0");
  400dae:	be00      	bkpt	0x0000
  400db0:	4770      	bx	lr
	...

00400db4 <_sbrk>:

/**
 * \brief Replacement of C library of _sbrk
 */
extern caddr_t _sbrk(int incr)
{
  400db4:	4603      	mov	r3, r0
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
  400db6:	4a06      	ldr	r2, [pc, #24]	; (400dd0 <_sbrk+0x1c>)
  400db8:	6812      	ldr	r2, [r2, #0]
  400dba:	b122      	cbz	r2, 400dc6 <_sbrk+0x12>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  400dbc:	4a04      	ldr	r2, [pc, #16]	; (400dd0 <_sbrk+0x1c>)
  400dbe:	6810      	ldr	r0, [r2, #0]

	heap += incr;
  400dc0:	4403      	add	r3, r0
  400dc2:	6013      	str	r3, [r2, #0]

	return (caddr_t)prev_heap;
}
  400dc4:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  400dc6:	4903      	ldr	r1, [pc, #12]	; (400dd4 <_sbrk+0x20>)
  400dc8:	4a01      	ldr	r2, [pc, #4]	; (400dd0 <_sbrk+0x1c>)
  400dca:	6011      	str	r1, [r2, #0]
  400dcc:	e7f6      	b.n	400dbc <_sbrk+0x8>
  400dce:	bf00      	nop
  400dd0:	20400208 	.word	0x20400208
  400dd4:	204008e0 	.word	0x204008e0

00400dd8 <_close>:
 */
extern int _close(int file)
{
	(void)file;
	return -1;
}
  400dd8:	f04f 30ff 	mov.w	r0, #4294967295
  400ddc:	4770      	bx	lr

00400dde <_fstat>:
 * \brief Replacement of C library of _fstat
 */
extern int _fstat(int file, struct stat *st)
{
	(void)file;
	st->st_mode = S_IFCHR;
  400dde:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  400de2:	604b      	str	r3, [r1, #4]

	return 0;
}
  400de4:	2000      	movs	r0, #0
  400de6:	4770      	bx	lr

00400de8 <_isatty>:
 */
extern int _isatty(int file)
{
	(void)file;
	return 1;
}
  400de8:	2001      	movs	r0, #1
  400dea:	4770      	bx	lr

00400dec <_lseek>:
 */
extern int _lseek(int file, int ptr, int dir)
{
	(void)file, (void)ptr, (void)dir;
	return 0;
}
  400dec:	2000      	movs	r0, #0
  400dee:	4770      	bx	lr

00400df0 <_afec_init>:
 */
static int32_t _afec_init(void *const hw, const uint8_t i)
{
	uint8_t cnt;

	hri_afec_write_MR_reg(hw, _afecs[i].mr);
  400df0:	2364      	movs	r3, #100	; 0x64
  400df2:	4a1d      	ldr	r2, [pc, #116]	; (400e68 <_afec_init+0x78>)
  400df4:	fb03 2301 	mla	r3, r3, r1, r2
  400df8:	685a      	ldr	r2, [r3, #4]
}

static inline void hri_afec_write_MR_reg(const void *const hw, hri_afec_mr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_MR = data;
  400dfa:	6042      	str	r2, [r0, #4]
	hri_afec_write_EMR_reg(hw, _afecs[i].emr);
  400dfc:	689a      	ldr	r2, [r3, #8]
}

static inline void hri_afec_write_EMR_reg(const void *const hw, hri_afec_emr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_EMR = data;
  400dfe:	6082      	str	r2, [r0, #8]
	hri_afec_write_SEQ1R_reg(hw, _afecs[i].seq1r);
  400e00:	68da      	ldr	r2, [r3, #12]
}

static inline void hri_afec_write_SEQ1R_reg(const void *const hw, hri_afec_seq1r_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_SEQ1R = data;
  400e02:	60c2      	str	r2, [r0, #12]
	hri_afec_write_SEQ2R_reg(hw, _afecs[i].seq2r);
  400e04:	691a      	ldr	r2, [r3, #16]
}

static inline void hri_afec_write_SEQ2R_reg(const void *const hw, hri_afec_seq2r_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_SEQ2R = data;
  400e06:	6102      	str	r2, [r0, #16]
	hri_afec_write_CWR_reg(hw, _afecs[i].cwr);
  400e08:	695a      	ldr	r2, [r3, #20]
}

static inline void hri_afec_write_CWR_reg(const void *const hw, hri_afec_cwr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_CWR = data;
  400e0a:	6502      	str	r2, [r0, #80]	; 0x50
	hri_afec_write_CGR_reg(hw, _afecs[i].cgr);
  400e0c:	699a      	ldr	r2, [r3, #24]
}

static inline void hri_afec_write_CGR_reg(const void *const hw, hri_afec_cgr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_CGR = data;
  400e0e:	6542      	str	r2, [r0, #84]	; 0x54
	hri_afec_write_DIFFR_reg(hw, _afecs[i].diffr);
  400e10:	69da      	ldr	r2, [r3, #28]
}

static inline void hri_afec_write_DIFFR_reg(const void *const hw, hri_afec_diffr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_DIFFR = data;
  400e12:	6602      	str	r2, [r0, #96]	; 0x60
	hri_afec_write_ACR_reg(hw, _afecs[i].acr);
  400e14:	6a1a      	ldr	r2, [r3, #32]
}

static inline void hri_afec_write_ACR_reg(const void *const hw, hri_afec_acr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_ACR = data;
  400e16:	f8c0 2094 	str.w	r2, [r0, #148]	; 0x94
	hri_afec_write_SHMR_reg(hw, _afecs[i].shmr);
  400e1a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
}

static inline void hri_afec_write_SHMR_reg(const void *const hw, hri_afec_shmr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_SHMR = data;
  400e1c:	f8c0 20a0 	str.w	r2, [r0, #160]	; 0xa0
	hri_afec_write_COSR_reg(hw, _afecs[i].cosr);
  400e20:	6a9a      	ldr	r2, [r3, #40]	; 0x28
}

static inline void hri_afec_write_COSR_reg(const void *const hw, hri_afec_cosr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_COSR = data;
  400e22:	f8c0 20d0 	str.w	r2, [r0, #208]	; 0xd0
	hri_afec_write_CVR_reg(hw, _afecs[i].cvr);
  400e26:	6ada      	ldr	r2, [r3, #44]	; 0x2c
}

static inline void hri_afec_write_CVR_reg(const void *const hw, hri_afec_cvr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_CVR = data;
  400e28:	f8c0 20d4 	str.w	r2, [r0, #212]	; 0xd4
	hri_afec_write_CECR_reg(hw, _afecs[i].cecr);
  400e2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}

static inline void hri_afec_write_CECR_reg(const void *const hw, hri_afec_cecr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_CECR = data;
  400e2e:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8

	for (cnt = 0; cnt < AFEC_CHANNEL_AMOUNT; cnt++) {
  400e32:	2200      	movs	r2, #0
  400e34:	2a0b      	cmp	r2, #11
  400e36:	d814      	bhi.n	400e62 <_afec_init+0x72>
{
  400e38:	b410      	push	{r4}
	((Afec *)hw)->AFEC_CSELR = data;
  400e3a:	6642      	str	r2, [r0, #100]	; 0x64
		hri_afec_write_CSELR_reg(hw, cnt);
		hri_afec_write_COCR_reg(hw, _afecs[i].cocr[cnt]);
  400e3c:	eb01 0381 	add.w	r3, r1, r1, lsl #2
  400e40:	eb03 0383 	add.w	r3, r3, r3, lsl #2
  400e44:	4413      	add	r3, r2
  400e46:	330c      	adds	r3, #12
  400e48:	4c07      	ldr	r4, [pc, #28]	; (400e68 <_afec_init+0x78>)
  400e4a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
  400e4e:	685b      	ldr	r3, [r3, #4]
	((Afec *)hw)->AFEC_COCR = data;
  400e50:	66c3      	str	r3, [r0, #108]	; 0x6c
	for (cnt = 0; cnt < AFEC_CHANNEL_AMOUNT; cnt++) {
  400e52:	3201      	adds	r2, #1
  400e54:	b2d2      	uxtb	r2, r2
  400e56:	2a0b      	cmp	r2, #11
  400e58:	d9ef      	bls.n	400e3a <_afec_init+0x4a>
	}

	return ERR_NONE;
}
  400e5a:	2000      	movs	r0, #0
  400e5c:	f85d 4b04 	ldr.w	r4, [sp], #4
  400e60:	4770      	bx	lr
  400e62:	2000      	movs	r0, #0
  400e64:	4770      	bx	lr
  400e66:	bf00      	nop
  400e68:	004060fc 	.word	0x004060fc

00400e6c <_afec_get_hardware_index>:
{
  400e6c:	b508      	push	{r3, lr}
	if (hw == AFEC0) {
  400e6e:	4b09      	ldr	r3, [pc, #36]	; (400e94 <_afec_get_hardware_index+0x28>)
  400e70:	4298      	cmp	r0, r3
  400e72:	d00a      	beq.n	400e8a <_afec_get_hardware_index+0x1e>
	} else if (hw == AFEC1) {
  400e74:	f503 3320 	add.w	r3, r3, #163840	; 0x28000
  400e78:	4298      	cmp	r0, r3
  400e7a:	d008      	beq.n	400e8e <_afec_get_hardware_index+0x22>
	ASSERT(false);
  400e7c:	22a3      	movs	r2, #163	; 0xa3
  400e7e:	4906      	ldr	r1, [pc, #24]	; (400e98 <_afec_get_hardware_index+0x2c>)
  400e80:	2000      	movs	r0, #0
  400e82:	4b06      	ldr	r3, [pc, #24]	; (400e9c <_afec_get_hardware_index+0x30>)
  400e84:	4798      	blx	r3
	return 0;
  400e86:	2000      	movs	r0, #0
  400e88:	bd08      	pop	{r3, pc}
		return 0;
  400e8a:	2000      	movs	r0, #0
  400e8c:	bd08      	pop	{r3, pc}
		return 1;
  400e8e:	2001      	movs	r0, #1
}
  400e90:	bd08      	pop	{r3, pc}
  400e92:	bf00      	nop
  400e94:	4003c000 	.word	0x4003c000
  400e98:	004061c4 	.word	0x004061c4
  400e9c:	00400dad 	.word	0x00400dad

00400ea0 <_afec_get_regs>:
{
  400ea0:	b508      	push	{r3, lr}
	uint8_t n = _afec_get_hardware_index((const void *)hw_addr);
  400ea2:	4b09      	ldr	r3, [pc, #36]	; (400ec8 <_afec_get_regs+0x28>)
  400ea4:	4798      	blx	r3
	for (i = 0; i < sizeof(_afecs) / sizeof(struct afec_configuration); i++) {
  400ea6:	2300      	movs	r3, #0
  400ea8:	2b01      	cmp	r3, #1
  400eaa:	d809      	bhi.n	400ec0 <_afec_get_regs+0x20>
		if (_afecs[i].number == n) {
  400eac:	2264      	movs	r2, #100	; 0x64
  400eae:	fb02 f203 	mul.w	r2, r2, r3
  400eb2:	4906      	ldr	r1, [pc, #24]	; (400ecc <_afec_get_regs+0x2c>)
  400eb4:	5c8a      	ldrb	r2, [r1, r2]
  400eb6:	4290      	cmp	r0, r2
  400eb8:	d003      	beq.n	400ec2 <_afec_get_regs+0x22>
	for (i = 0; i < sizeof(_afecs) / sizeof(struct afec_configuration); i++) {
  400eba:	3301      	adds	r3, #1
  400ebc:	b2db      	uxtb	r3, r3
  400ebe:	e7f3      	b.n	400ea8 <_afec_get_regs+0x8>
	return 0;
  400ec0:	2300      	movs	r3, #0
}
  400ec2:	4618      	mov	r0, r3
  400ec4:	bd08      	pop	{r3, pc}
  400ec6:	bf00      	nop
  400ec8:	00400e6d 	.word	0x00400e6d
  400ecc:	004060fc 	.word	0x004060fc

00400ed0 <_adc_sync_init>:

/**
 * \brief Initialize ADC
 */
int32_t _adc_sync_init(struct _adc_sync_device *const device, void *const hw)
{
  400ed0:	b538      	push	{r3, r4, r5, lr}
  400ed2:	460c      	mov	r4, r1
	ASSERT(device);
  400ed4:	4605      	mov	r5, r0
  400ed6:	f44f 728d 	mov.w	r2, #282	; 0x11a
  400eda:	4907      	ldr	r1, [pc, #28]	; (400ef8 <_adc_sync_init+0x28>)
  400edc:	3000      	adds	r0, #0
  400ede:	bf18      	it	ne
  400ee0:	2001      	movne	r0, #1
  400ee2:	4b06      	ldr	r3, [pc, #24]	; (400efc <_adc_sync_init+0x2c>)
  400ee4:	4798      	blx	r3

	device->hw = hw;
  400ee6:	602c      	str	r4, [r5, #0]

	return _afec_init(hw, _afec_get_regs((uint32_t)hw));
  400ee8:	4620      	mov	r0, r4
  400eea:	4b05      	ldr	r3, [pc, #20]	; (400f00 <_adc_sync_init+0x30>)
  400eec:	4798      	blx	r3
  400eee:	4601      	mov	r1, r0
  400ef0:	4620      	mov	r0, r4
  400ef2:	4b04      	ldr	r3, [pc, #16]	; (400f04 <_adc_sync_init+0x34>)
  400ef4:	4798      	blx	r3
}
  400ef6:	bd38      	pop	{r3, r4, r5, pc}
  400ef8:	004061c4 	.word	0x004061c4
  400efc:	00400dad 	.word	0x00400dad
  400f00:	00400ea1 	.word	0x00400ea1
  400f04:	00400df1 	.word	0x00400df1

00400f08 <_adc_sync_enable_channel>:
/**
 * \brief Enable ADC
 */
void _adc_sync_enable_channel(struct _adc_sync_device *const device, const uint8_t channel)
{
	hri_afec_set_CHSR_reg(device->hw, (1 << channel));
  400f08:	6802      	ldr	r2, [r0, #0]
  400f0a:	2301      	movs	r3, #1
  400f0c:	fa03 f101 	lsl.w	r1, r3, r1
	((Afec *)hw)->AFEC_CHER = mask;
  400f10:	6151      	str	r1, [r2, #20]
  400f12:	4770      	bx	lr

00400f14 <_adc_sync_get_data_size>:
uint8_t _adc_sync_get_data_size(const struct _adc_sync_device *const device)
{
	(void)device;

	return 2;
}
  400f14:	2002      	movs	r0, #2
  400f16:	4770      	bx	lr

00400f18 <_adc_sync_is_channel_conversion_done>:
/**
 * \brief Check if conversion is done
 */
bool _adc_sync_is_channel_conversion_done(const struct _adc_sync_device *const device, const uint8_t channel)
{
	return hri_afec_get_ISR_reg(device->hw, (1 << channel));
  400f18:	6802      	ldr	r2, [r0, #0]
  400f1a:	2301      	movs	r3, #1
  400f1c:	fa03 f101 	lsl.w	r1, r3, r1
	tmp = ((Afec *)hw)->AFEC_ISR;
  400f20:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400f22:	4219      	tst	r1, r3
}
  400f24:	bf14      	ite	ne
  400f26:	2001      	movne	r0, #1
  400f28:	2000      	moveq	r0, #0
  400f2a:	4770      	bx	lr

00400f2c <_adc_sync_convert>:
/**
 * \brief Make conversion
 */
void _adc_sync_convert(struct _adc_sync_device *const device)
{
	hri_afec_write_CR_reg(device->hw, AFEC_CR_START);
  400f2c:	6803      	ldr	r3, [r0, #0]
}

static inline void hri_afec_write_CR_reg(const void *const hw, hri_afec_cr_reg_t data)
{
	AFEC_CRITICAL_SECTION_ENTER();
	((Afec *)hw)->AFEC_CR = data;
  400f2e:	2202      	movs	r2, #2
  400f30:	601a      	str	r2, [r3, #0]
  400f32:	4770      	bx	lr

00400f34 <_adc_sync_read_channel_data>:
/**
 * \brief Retrieve the conversion result
 */
uint16_t _adc_sync_read_channel_data(const struct _adc_sync_device *const device, const uint8_t channel)
{
	hri_afec_write_CSELR_reg(device->hw, channel);
  400f34:	6803      	ldr	r3, [r0, #0]
	((Afec *)hw)->AFEC_CSELR = data;
  400f36:	6659      	str	r1, [r3, #100]	; 0x64

	return hri_afec_read_CDR_reg(device->hw);
  400f38:	6803      	ldr	r3, [r0, #0]
	return ((Afec *)hw)->AFEC_CDR;
  400f3a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400f3c:	b280      	uxth	r0, r0
  400f3e:	4770      	bx	lr

00400f40 <_get_cycles_for_us>:
 * \brief Retrieve the amount of cycles to delay for the given amount of us
 */
uint32_t _get_cycles_for_us(const uint16_t us)
{
	return _get_cycles_for_us_internal(us, CONF_HCLK_FREQUENCY, HCLK_FREQ_POWER);
}
  400f40:	f44f 7396 	mov.w	r3, #300	; 0x12c
  400f44:	fb03 f000 	mul.w	r0, r3, r0
  400f48:	4770      	bx	lr

00400f4a <_get_cycles_for_ms>:
 */
static inline uint32_t _get_cycles_for_ms_internal(const uint16_t ms, const uint32_t freq, const uint8_t power)
{
	switch (power) {
	case 9:
		return (ms * (freq / 1000000)) * 1000;
  400f4a:	f44f 7396 	mov.w	r3, #300	; 0x12c
  400f4e:	fb03 f000 	mul.w	r0, r3, r0
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_HCLK_FREQUENCY, HCLK_FREQ_POWER);
}
  400f52:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
  400f56:	fb03 f000 	mul.w	r0, r3, r0
  400f5a:	4770      	bx	lr

00400f5c <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
  400f5c:	b500      	push	{lr}
  400f5e:	b083      	sub	sp, #12
/**
 * \brief Enable FPU
 */
static inline void _fpu_enable(void)
{
	CRITICAL_SECTION_ENTER()
  400f60:	a801      	add	r0, sp, #4
  400f62:	4b0e      	ldr	r3, [pc, #56]	; (400f9c <_init_chip+0x40>)
  400f64:	4798      	blx	r3
	/** Set bits 20-23 to enable CP10 and CP11 coprocessors */
	SCB->CPACR |= (0xFu << 20);
  400f66:	4a0e      	ldr	r2, [pc, #56]	; (400fa0 <_init_chip+0x44>)
  400f68:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
  400f6c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  400f70:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
  400f74:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  400f78:	f3bf 8f6f 	isb	sy
	__DSB();
	__ISB();
	CRITICAL_SECTION_LEAVE()
  400f7c:	a801      	add	r0, sp, #4
  400f7e:	4b09      	ldr	r3, [pc, #36]	; (400fa4 <_init_chip+0x48>)
  400f80:	4798      	blx	r3

static inline void hri_efc_write_EEFC_FMR_FWS_bf(const void *const hw, hri_efc_eefc_fmr_reg_t data)
{
	uint32_t tmp;
	EFC_CRITICAL_SECTION_ENTER();
	tmp = ((Efc *)hw)->EEFC_FMR;
  400f82:	4a09      	ldr	r2, [pc, #36]	; (400fa8 <_init_chip+0x4c>)
  400f84:	6813      	ldr	r3, [r2, #0]
	tmp &= ~EEFC_FMR_FWS_Msk;
  400f86:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
	tmp |= EEFC_FMR_FWS(data);
  400f8a:	f443 63c0 	orr.w	r3, r3, #1536	; 0x600
	((Efc *)hw)->EEFC_FMR = tmp;
  400f8e:	6013      	str	r3, [r2, #0]
#if CONF_DMA_ENABLE
	_pmc_enable_periph_clock(ID_XDMAC);
	_dma_init();

#endif
	_pmc_init();
  400f90:	4b06      	ldr	r3, [pc, #24]	; (400fac <_init_chip+0x50>)
  400f92:	4798      	blx	r3
}
  400f94:	b003      	add	sp, #12
  400f96:	f85d fb04 	ldr.w	pc, [sp], #4
  400f9a:	bf00      	nop
  400f9c:	00400a5d 	.word	0x00400a5d
  400fa0:	e000ed00 	.word	0xe000ed00
  400fa4:	00400a6b 	.word	0x00400a6b
  400fa8:	400e0c00 	.word	0x400e0c00
  400fac:	00401331 	.word	0x00401331

00400fb0 <_can_irq_handler>:
 * \brief CAN interrupt handler
 *
 * \param[in] p The pointer to interrupt parameter
 */
static void _can_irq_handler(struct _can_async_device *dev)
{
  400fb0:	b538      	push	{r3, r4, r5, lr}
  400fb2:	4605      	mov	r5, r0
	uint32_t ir;
	ir = hri_mcan_read_IR_reg(dev->hw);
  400fb4:	6803      	ldr	r3, [r0, #0]
	MCAN_CRITICAL_SECTION_LEAVE();
}

static inline hri_mcan_ir_reg_t hri_mcan_read_IR_reg(const void *const hw)
{
	return ((Mcan *)hw)->MCAN_IR;
  400fb6:	6d1c      	ldr	r4, [r3, #80]	; 0x50

	if (ir & MCAN_IR_RF0N) {
  400fb8:	f014 0f01 	tst.w	r4, #1
  400fbc:	d11a      	bne.n	400ff4 <_can_irq_handler+0x44>
		dev->cb.rx_done(dev);
	}

	if (ir & MCAN_IR_TC) {
  400fbe:	f414 7f00 	tst.w	r4, #512	; 0x200
  400fc2:	d11a      	bne.n	400ffa <_can_irq_handler+0x4a>
		dev->cb.tx_done(dev);
	}

	if (ir & MCAN_IR_BO) {
  400fc4:	f014 7f00 	tst.w	r4, #33554432	; 0x2000000
  400fc8:	d11b      	bne.n	401002 <_can_irq_handler+0x52>
		dev->cb.irq_handler(dev, CAN_IRQ_BO);
	}

	if (ir & MCAN_IR_EW) {
  400fca:	f014 7f80 	tst.w	r4, #16777216	; 0x1000000
  400fce:	d11d      	bne.n	40100c <_can_irq_handler+0x5c>
		dev->cb.irq_handler(dev, CAN_IRQ_EW);
	}

	if (ir & MCAN_IR_EP) {
  400fd0:	f414 0f00 	tst.w	r4, #8388608	; 0x800000
  400fd4:	d008      	beq.n	400fe8 <_can_irq_handler+0x38>
		dev->cb.irq_handler(dev, hri_mcan_get_PSR_EP_bit(dev->hw) ? CAN_IRQ_EP : CAN_IRQ_EA);
  400fd6:	68eb      	ldr	r3, [r5, #12]
  400fd8:	682a      	ldr	r2, [r5, #0]
	return (((Mcan *)hw)->MCAN_PSR & MCAN_PSR_EP) > 0;
  400fda:	6c52      	ldr	r2, [r2, #68]	; 0x44
  400fdc:	f012 0f20 	tst.w	r2, #32
  400fe0:	d019      	beq.n	401016 <_can_irq_handler+0x66>
  400fe2:	2102      	movs	r1, #2
  400fe4:	4628      	mov	r0, r5
  400fe6:	4798      	blx	r3
	}

	if (ir & MCAN_IR_RF0L) {
  400fe8:	f014 0f08 	tst.w	r4, #8
  400fec:	d115      	bne.n	40101a <_can_irq_handler+0x6a>
		dev->cb.irq_handler(dev, CAN_IRQ_DO);
	}

	hri_mcan_write_IR_reg(dev->hw, ir);
  400fee:	682b      	ldr	r3, [r5, #0]
	((Mcan *)hw)->MCAN_IR = data;
  400ff0:	651c      	str	r4, [r3, #80]	; 0x50
  400ff2:	bd38      	pop	{r3, r4, r5, pc}
		dev->cb.rx_done(dev);
  400ff4:	6883      	ldr	r3, [r0, #8]
  400ff6:	4798      	blx	r3
  400ff8:	e7e1      	b.n	400fbe <_can_irq_handler+0xe>
		dev->cb.tx_done(dev);
  400ffa:	686b      	ldr	r3, [r5, #4]
  400ffc:	4628      	mov	r0, r5
  400ffe:	4798      	blx	r3
  401000:	e7e0      	b.n	400fc4 <_can_irq_handler+0x14>
		dev->cb.irq_handler(dev, CAN_IRQ_BO);
  401002:	68eb      	ldr	r3, [r5, #12]
  401004:	2103      	movs	r1, #3
  401006:	4628      	mov	r0, r5
  401008:	4798      	blx	r3
  40100a:	e7de      	b.n	400fca <_can_irq_handler+0x1a>
		dev->cb.irq_handler(dev, CAN_IRQ_EW);
  40100c:	68eb      	ldr	r3, [r5, #12]
  40100e:	2100      	movs	r1, #0
  401010:	4628      	mov	r0, r5
  401012:	4798      	blx	r3
  401014:	e7dc      	b.n	400fd0 <_can_irq_handler+0x20>
		dev->cb.irq_handler(dev, hri_mcan_get_PSR_EP_bit(dev->hw) ? CAN_IRQ_EP : CAN_IRQ_EA);
  401016:	2101      	movs	r1, #1
  401018:	e7e4      	b.n	400fe4 <_can_irq_handler+0x34>
		dev->cb.irq_handler(dev, CAN_IRQ_DO);
  40101a:	68eb      	ldr	r3, [r5, #12]
  40101c:	2104      	movs	r1, #4
  40101e:	4628      	mov	r0, r5
  401020:	4798      	blx	r3
  401022:	e7e4      	b.n	400fee <_can_irq_handler+0x3e>

00401024 <MCAN1_INT0_Handler>:

/**
 * \internal CAN interrupt handler
 */
void MCAN1_INT0_Handler(void)
{
  401024:	b508      	push	{r3, lr}
	_can_irq_handler(_can1_dev);
  401026:	4b02      	ldr	r3, [pc, #8]	; (401030 <MCAN1_INT0_Handler+0xc>)
  401028:	6a98      	ldr	r0, [r3, #40]	; 0x28
  40102a:	4b02      	ldr	r3, [pc, #8]	; (401034 <MCAN1_INT0_Handler+0x10>)
  40102c:	4798      	blx	r3
  40102e:	bd08      	pop	{r3, pc}
  401030:	2040020c 	.word	0x2040020c
  401034:	00400fb1 	.word	0x00400fb1

00401038 <_ffs>:
};
#endif

/* Find the first bit set */
static int _ffs(uint32_t *v, uint8_t len)
{
  401038:	b430      	push	{r4, r5}
	uint32_t i, j, bit;

	for (i = 0; i < len; i++) {
  40103a:	2500      	movs	r5, #0
  40103c:	428d      	cmp	r5, r1
  40103e:	d210      	bcs.n	401062 <_ffs+0x2a>
  401040:	2201      	movs	r2, #1
  401042:	2300      	movs	r3, #0
		bit = 1;
		for (j = 0; j < sizeof(uint32_t) * 8; j++) {
  401044:	2b1f      	cmp	r3, #31
  401046:	d80a      	bhi.n	40105e <_ffs+0x26>
			if (v[i] & bit) {
  401048:	f850 4025 	ldr.w	r4, [r0, r5, lsl #2]
  40104c:	4222      	tst	r2, r4
  40104e:	d102      	bne.n	401056 <_ffs+0x1e>
				return i * 32 + j;
			}
			bit <<= 1;
  401050:	0052      	lsls	r2, r2, #1
		for (j = 0; j < sizeof(uint32_t) * 8; j++) {
  401052:	3301      	adds	r3, #1
  401054:	e7f6      	b.n	401044 <_ffs+0xc>
				return i * 32 + j;
  401056:	eb03 1045 	add.w	r0, r3, r5, lsl #5
		}
	}

	return -1;
}
  40105a:	bc30      	pop	{r4, r5}
  40105c:	4770      	bx	lr
	for (i = 0; i < len; i++) {
  40105e:	3501      	adds	r5, #1
  401060:	e7ec      	b.n	40103c <_ffs+0x4>
	return -1;
  401062:	f04f 30ff 	mov.w	r0, #4294967295
  401066:	e7f8      	b.n	40105a <_ffs+0x22>

00401068 <_ext_irq_handler>:

/**
 * \brief External interrupt handler
 */
static void _ext_irq_handler(void)
{
  401068:	b510      	push	{r4, lr}
  40106a:	b086      	sub	sp, #24
	uint32_t flag_total = 0, flags[5] = {
  40106c:	2300      	movs	r3, #0
  40106e:	9301      	str	r3, [sp, #4]
  401070:	9302      	str	r3, [sp, #8]
  401072:	9303      	str	r3, [sp, #12]
  401074:	9304      	str	r3, [sp, #16]
  401076:	9305      	str	r3, [sp, #20]
	                             0,
	                         };
	int pos;

	ASSERT(callback);
  401078:	4b21      	ldr	r3, [pc, #132]	; (401100 <_ext_irq_handler+0x98>)
  40107a:	6818      	ldr	r0, [r3, #0]
  40107c:	22f8      	movs	r2, #248	; 0xf8
  40107e:	4921      	ldr	r1, [pc, #132]	; (401104 <_ext_irq_handler+0x9c>)
  401080:	3000      	adds	r0, #0
  401082:	bf18      	it	ne
  401084:	2001      	movne	r0, #1
  401086:	4b20      	ldr	r3, [pc, #128]	; (401108 <_ext_irq_handler+0xa0>)
  401088:	4798      	blx	r3
	return ((Pio *)hw)->PIO_ISR;
  40108a:	4b20      	ldr	r3, [pc, #128]	; (40110c <_ext_irq_handler+0xa4>)
  40108c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
	return ((Pio *)hw)->PIO_IMR;
  40108e:	6c9b      	ldr	r3, [r3, #72]	; 0x48

#if CONF_EXTIRQ_0_ENABLE == 1 && defined(PIOA)
	flags[0] = hri_pio_read_ISR_reg(PIOA);
	flags[0] &= hri_pio_read_IMR_reg(PIOA);
  401090:	4013      	ands	r3, r2
  401092:	9301      	str	r3, [sp, #4]
	return ((Pio *)hw)->PIO_ISR;
  401094:	491e      	ldr	r1, [pc, #120]	; (401110 <_ext_irq_handler+0xa8>)
  401096:	6cca      	ldr	r2, [r1, #76]	; 0x4c
	return ((Pio *)hw)->PIO_IMR;
  401098:	6c89      	ldr	r1, [r1, #72]	; 0x48
	flag_total |= flags[2];
#endif

#if CONF_EXTIRQ_3_ENABLE == 1 && defined(PIOD)
	flags[3] = hri_pio_read_ISR_reg(PIOD);
	flags[3] &= hri_pio_read_IMR_reg(PIOD);
  40109a:	400a      	ands	r2, r1
  40109c:	9204      	str	r2, [sp, #16]
	flag_total |= flags[3];
  40109e:	4313      	orrs	r3, r2
	flags[4] = hri_pio_read_ISR_reg(PIOE);
	flags[4] &= hri_pio_read_IMR_reg(PIOE);
	flag_total |= flags[4];
#endif

	while (flag_total) {
  4010a0:	e025      	b.n	4010ee <_ext_irq_handler+0x86>
		pos = _ffs(flags, 5);
		while (-1 != pos) {
			callback(pos);
  4010a2:	4b17      	ldr	r3, [pc, #92]	; (401100 <_ext_irq_handler+0x98>)
  4010a4:	681b      	ldr	r3, [r3, #0]
  4010a6:	4620      	mov	r0, r4
  4010a8:	4798      	blx	r3

			flags[pos >> 5] &= ~(1 << (pos & 31));
  4010aa:	1163      	asrs	r3, r4, #5
  4010ac:	f004 041f 	and.w	r4, r4, #31
  4010b0:	2201      	movs	r2, #1
  4010b2:	fa02 f404 	lsl.w	r4, r2, r4
  4010b6:	aa06      	add	r2, sp, #24
  4010b8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4010bc:	f853 2c14 	ldr.w	r2, [r3, #-20]
  4010c0:	ea22 0204 	bic.w	r2, r2, r4
  4010c4:	f843 2c14 	str.w	r2, [r3, #-20]
			pos = _ffs(flags, 5);
  4010c8:	2105      	movs	r1, #5
  4010ca:	a801      	add	r0, sp, #4
  4010cc:	4b11      	ldr	r3, [pc, #68]	; (401114 <_ext_irq_handler+0xac>)
  4010ce:	4798      	blx	r3
  4010d0:	4604      	mov	r4, r0
		while (-1 != pos) {
  4010d2:	f1b4 3fff 	cmp.w	r4, #4294967295
  4010d6:	d1e4      	bne.n	4010a2 <_ext_irq_handler+0x3a>
	return ((Pio *)hw)->PIO_ISR;
  4010d8:	4a0c      	ldr	r2, [pc, #48]	; (40110c <_ext_irq_handler+0xa4>)
  4010da:	6cd1      	ldr	r1, [r2, #76]	; 0x4c
	return ((Pio *)hw)->PIO_IMR;
  4010dc:	6c93      	ldr	r3, [r2, #72]	; 0x48
		}
		flag_total = 0;

#if CONF_EXTIRQ_0_ENABLE == 1 && defined(PIOA)
		flags[0] = hri_pio_read_ISR_reg(PIOA);
		flags[0] &= hri_pio_read_IMR_reg(PIOA);
  4010de:	400b      	ands	r3, r1
  4010e0:	9301      	str	r3, [sp, #4]
	return ((Pio *)hw)->PIO_ISR;
  4010e2:	490b      	ldr	r1, [pc, #44]	; (401110 <_ext_irq_handler+0xa8>)
  4010e4:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
	return ((Pio *)hw)->PIO_IMR;
  4010e6:	6c8a      	ldr	r2, [r1, #72]	; 0x48
		flag_total |= flags[2];
#endif

#if CONF_EXTIRQ_3_ENABLE == 1 && defined(PIOD)
		flags[3] = hri_pio_read_ISR_reg(PIOD);
		flags[3] &= hri_pio_read_IMR_reg(PIOD);
  4010e8:	4002      	ands	r2, r0
  4010ea:	9204      	str	r2, [sp, #16]
		flag_total |= flags[3];
  4010ec:	4313      	orrs	r3, r2
	while (flag_total) {
  4010ee:	b12b      	cbz	r3, 4010fc <_ext_irq_handler+0x94>
		pos = _ffs(flags, 5);
  4010f0:	2105      	movs	r1, #5
  4010f2:	a801      	add	r0, sp, #4
  4010f4:	4b07      	ldr	r3, [pc, #28]	; (401114 <_ext_irq_handler+0xac>)
  4010f6:	4798      	blx	r3
  4010f8:	4604      	mov	r4, r0
		while (-1 != pos) {
  4010fa:	e7ea      	b.n	4010d2 <_ext_irq_handler+0x6a>
		flags[4] = hri_pio_read_ISR_reg(PIOE);
		flags[4] &= hri_pio_read_IMR_reg(PIOE);
		flag_total |= flags[4];
#endif
	}
}
  4010fc:	b006      	add	sp, #24
  4010fe:	bd10      	pop	{r4, pc}
  401100:	20400238 	.word	0x20400238
  401104:	0040621c 	.word	0x0040621c
  401108:	00400dad 	.word	0x00400dad
  40110c:	400e0e00 	.word	0x400e0e00
  401110:	400e1400 	.word	0x400e1400
  401114:	00401039 	.word	0x00401039

00401118 <_pio_get_hardware_index>:
{
  401118:	b510      	push	{r4, lr}
	ASSERT(hw);
  40111a:	4604      	mov	r4, r0
  40111c:	22d2      	movs	r2, #210	; 0xd2
  40111e:	4905      	ldr	r1, [pc, #20]	; (401134 <_pio_get_hardware_index+0x1c>)
  401120:	3000      	adds	r0, #0
  401122:	bf18      	it	ne
  401124:	2001      	movne	r0, #1
  401126:	4b04      	ldr	r3, [pc, #16]	; (401138 <_pio_get_hardware_index+0x20>)
  401128:	4798      	blx	r3
	return ((uint32_t)hw - (uint32_t)PIOA) >> 9;
  40112a:	4804      	ldr	r0, [pc, #16]	; (40113c <_pio_get_hardware_index+0x24>)
  40112c:	4420      	add	r0, r4
}
  40112e:	f3c0 2047 	ubfx	r0, r0, #9, #8
  401132:	bd10      	pop	{r4, pc}
  401134:	0040621c 	.word	0x0040621c
  401138:	00400dad 	.word	0x00400dad
  40113c:	bff1f200 	.word	0xbff1f200

00401140 <_pio_get_index>:
{
  401140:	b510      	push	{r4, lr}
	ASSERT(hw);
  401142:	4604      	mov	r4, r0
  401144:	22e0      	movs	r2, #224	; 0xe0
  401146:	490d      	ldr	r1, [pc, #52]	; (40117c <_pio_get_index+0x3c>)
  401148:	3000      	adds	r0, #0
  40114a:	bf18      	it	ne
  40114c:	2001      	movne	r0, #1
  40114e:	4b0c      	ldr	r3, [pc, #48]	; (401180 <_pio_get_index+0x40>)
  401150:	4798      	blx	r3
	uint8_t offset = _pio_get_hardware_index(hw);
  401152:	4620      	mov	r0, r4
  401154:	4b0b      	ldr	r3, [pc, #44]	; (401184 <_pio_get_index+0x44>)
  401156:	4798      	blx	r3
	for (i = 0; i < ARRAY_SIZE(_ext_irq); i++) {
  401158:	2300      	movs	r3, #0
  40115a:	2b01      	cmp	r3, #1
  40115c:	d80b      	bhi.n	401176 <_pio_get_index+0x36>
		if (_ext_irq[i].number == offset) {
  40115e:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
  401162:	008a      	lsls	r2, r1, #2
  401164:	4908      	ldr	r1, [pc, #32]	; (401188 <_pio_get_index+0x48>)
  401166:	5c8a      	ldrb	r2, [r1, r2]
  401168:	4290      	cmp	r0, r2
  40116a:	d002      	beq.n	401172 <_pio_get_index+0x32>
	for (i = 0; i < ARRAY_SIZE(_ext_irq); i++) {
  40116c:	3301      	adds	r3, #1
  40116e:	b2db      	uxtb	r3, r3
  401170:	e7f3      	b.n	40115a <_pio_get_index+0x1a>
			return i;
  401172:	b258      	sxtb	r0, r3
  401174:	bd10      	pop	{r4, pc}
	return ERR_INVALID_DATA;
  401176:	f04f 30ff 	mov.w	r0, #4294967295
}
  40117a:	bd10      	pop	{r4, pc}
  40117c:	0040621c 	.word	0x0040621c
  401180:	00400dad 	.word	0x00400dad
  401184:	00401119 	.word	0x00401119
  401188:	004061dc 	.word	0x004061dc

0040118c <_pio_init>:
 * \return The status of instance initial
 * \retval ERR_NONE Initial status OK
 * \retval ERR_DENIED No need to initial
 */
static int32_t _pio_init(void *const hw)
{
  40118c:	b538      	push	{r3, r4, r5, lr}
	int8_t i;

	ASSERT(hw);
  40118e:	4604      	mov	r4, r0
  401190:	f240 1259 	movw	r2, #345	; 0x159
  401194:	4929      	ldr	r1, [pc, #164]	; (40123c <_pio_init+0xb0>)
  401196:	3000      	adds	r0, #0
  401198:	bf18      	it	ne
  40119a:	2001      	movne	r0, #1
  40119c:	4b28      	ldr	r3, [pc, #160]	; (401240 <_pio_init+0xb4>)
  40119e:	4798      	blx	r3

	i = _pio_get_index(hw);
  4011a0:	4620      	mov	r0, r4
  4011a2:	4b28      	ldr	r3, [pc, #160]	; (401244 <_pio_init+0xb8>)
  4011a4:	4798      	blx	r3
	if (i < 0) {
  4011a6:	2800      	cmp	r0, #0
  4011a8:	db43      	blt.n	401232 <_pio_init+0xa6>
		return ERR_DENIED;
	}

	hri_pio_set_AIMMR_reg(hw, _ext_irq[i].add_irq_enable);
  4011aa:	4d27      	ldr	r5, [pc, #156]	; (401248 <_pio_init+0xbc>)
  4011ac:	00c2      	lsls	r2, r0, #3
  4011ae:	1a11      	subs	r1, r2, r0
  4011b0:	008b      	lsls	r3, r1, #2
  4011b2:	442b      	add	r3, r5
  4011b4:	6899      	ldr	r1, [r3, #8]
	((Pio *)hw)->PIO_AIMER = mask;
  4011b6:	f8c4 10b0 	str.w	r1, [r4, #176]	; 0xb0
	hri_pio_clear_ELSR_reg(hw, _ext_irq[i].esr);
  4011ba:	68d9      	ldr	r1, [r3, #12]
	((Pio *)hw)->PIO_ESR = mask;
  4011bc:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
	hri_pio_set_ELSR_reg(hw, _ext_irq[i].lsr);
  4011c0:	6919      	ldr	r1, [r3, #16]
	((Pio *)hw)->PIO_LSR = mask;
  4011c2:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
	hri_pio_clear_FRLHSR_reg(hw, _ext_irq[i].fellsr);
  4011c6:	699b      	ldr	r3, [r3, #24]
	((Pio *)hw)->PIO_FELLSR = mask;
  4011c8:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
	hri_pio_set_FRLHSR_reg(hw, _ext_irq[i].rehlsr);
  4011cc:	1a10      	subs	r0, r2, r0
  4011ce:	0083      	lsls	r3, r0, #2
  4011d0:	442b      	add	r3, r5
  4011d2:	695b      	ldr	r3, [r3, #20]
	((Pio *)hw)->PIO_REHLSR = mask;
  4011d4:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4

	i = _pio_irq_n[_pio_get_hardware_index(hw)];
  4011d8:	4620      	mov	r0, r4
  4011da:	4b1c      	ldr	r3, [pc, #112]	; (40124c <_pio_init+0xc0>)
  4011dc:	4798      	blx	r3
  4011de:	4428      	add	r0, r5
  4011e0:	f990 3038 	ldrsb.w	r3, [r0, #56]	; 0x38
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  4011e4:	2b00      	cmp	r3, #0
  4011e6:	db0c      	blt.n	401202 <_pio_init+0x76>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4011e8:	095a      	lsrs	r2, r3, #5
  4011ea:	f003 001f 	and.w	r0, r3, #31
  4011ee:	2101      	movs	r1, #1
  4011f0:	4081      	lsls	r1, r0
  4011f2:	3220      	adds	r2, #32
  4011f4:	4816      	ldr	r0, [pc, #88]	; (401250 <_pio_init+0xc4>)
  4011f6:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
  4011fa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4011fe:	f3bf 8f6f 	isb	sy
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  401202:	2b00      	cmp	r3, #0
  401204:	db08      	blt.n	401218 <_pio_init+0x8c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  401206:	095a      	lsrs	r2, r3, #5
  401208:	f003 001f 	and.w	r0, r3, #31
  40120c:	2101      	movs	r1, #1
  40120e:	4081      	lsls	r1, r0
  401210:	3260      	adds	r2, #96	; 0x60
  401212:	480f      	ldr	r0, [pc, #60]	; (401250 <_pio_init+0xc4>)
  401214:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
  if ((int32_t)(IRQn) >= 0)
  401218:	2b00      	cmp	r3, #0
  40121a:	db0d      	blt.n	401238 <_pio_init+0xac>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  40121c:	0959      	lsrs	r1, r3, #5
  40121e:	f003 031f 	and.w	r3, r3, #31
  401222:	2201      	movs	r2, #1
  401224:	fa02 f303 	lsl.w	r3, r2, r3
  401228:	4a09      	ldr	r2, [pc, #36]	; (401250 <_pio_init+0xc4>)
  40122a:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
	NVIC_DisableIRQ((IRQn_Type)i);
	NVIC_ClearPendingIRQ((IRQn_Type)i);
	NVIC_EnableIRQ((IRQn_Type)i);

	return ERR_NONE;
  40122e:	2000      	movs	r0, #0
  401230:	bd38      	pop	{r3, r4, r5, pc}
		return ERR_DENIED;
  401232:	f06f 0010 	mvn.w	r0, #16
  401236:	bd38      	pop	{r3, r4, r5, pc}
	return ERR_NONE;
  401238:	2000      	movs	r0, #0
}
  40123a:	bd38      	pop	{r3, r4, r5, pc}
  40123c:	0040621c 	.word	0x0040621c
  401240:	00400dad 	.word	0x00400dad
  401244:	00401141 	.word	0x00401141
  401248:	004061dc 	.word	0x004061dc
  40124c:	00401119 	.word	0x00401119
  401250:	e000e100 	.word	0xe000e100

00401254 <PIOD_Handler>:
{
  401254:	b508      	push	{r3, lr}
	_ext_irq_handler();
  401256:	4b01      	ldr	r3, [pc, #4]	; (40125c <PIOD_Handler+0x8>)
  401258:	4798      	blx	r3
  40125a:	bd08      	pop	{r3, pc}
  40125c:	00401069 	.word	0x00401069

00401260 <PIOA_Handler>:
{
  401260:	b508      	push	{r3, lr}
	_ext_irq_handler();
  401262:	4b01      	ldr	r3, [pc, #4]	; (401268 <PIOA_Handler+0x8>)
  401264:	4798      	blx	r3
  401266:	bd08      	pop	{r3, pc}
  401268:	00401069 	.word	0x00401069

0040126c <_ext_irq_init>:

int32_t _ext_irq_init(void (*cb)(const uint32_t pin))
{
  40126c:	b538      	push	{r3, r4, r5, lr}
  40126e:	4605      	mov	r5, r0

#if CONF_EXTIRQ_0_ENABLE == 1 && defined(PIOA)
	_pio_init(PIOA);
  401270:	4804      	ldr	r0, [pc, #16]	; (401284 <_ext_irq_init+0x18>)
  401272:	4c05      	ldr	r4, [pc, #20]	; (401288 <_ext_irq_init+0x1c>)
  401274:	47a0      	blx	r4
#if CONF_EXTIRQ_2_ENABLE == 1 && defined(PIOC)
	_pio_init(PIOC);
#endif

#if CONF_EXTIRQ_3_ENABLE == 1 && defined(PIOD)
	_pio_init(PIOD);
  401276:	4805      	ldr	r0, [pc, #20]	; (40128c <_ext_irq_init+0x20>)
  401278:	47a0      	blx	r4

#if CONF_EXTIRQ_4_ENABLE == 1 && defined(PIOE)
	_pio_init(PIOE);
#endif

	callback = cb;
  40127a:	4b05      	ldr	r3, [pc, #20]	; (401290 <_ext_irq_init+0x24>)
  40127c:	601d      	str	r5, [r3, #0]

	return ERR_NONE;
}
  40127e:	2000      	movs	r0, #0
  401280:	bd38      	pop	{r3, r4, r5, pc}
  401282:	bf00      	nop
  401284:	400e0e00 	.word	0x400e0e00
  401288:	0040118d 	.word	0x0040118d
  40128c:	400e1400 	.word	0x400e1400
  401290:	20400238 	.word	0x20400238

00401294 <_pmc_init_sources>:
	PMC_CRITICAL_SECTION_LEAVE();
}

static inline hri_pmc_ckgr_mor_reg_t hri_pmc_read_CKGR_MOR_reg(const void *const hw)
{
	return ((Pmc *)hw)->CKGR_MOR;
  401294:	490e      	ldr	r1, [pc, #56]	; (4012d0 <_pmc_init_sources+0x3c>)
  401296:	6a0a      	ldr	r2, [r1, #32]
	/* Enable Main XTAL oscillator */
	data = hri_pmc_read_CKGR_MOR_reg(PMC) & ~CKGR_MOR_MOSCXTEN;
	data |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY | CKGR_MOR_MOSCSEL;
	hri_pmc_write_CKGR_MOR_reg(PMC, data);
#else
	data = hri_pmc_read_CKGR_MOR_reg(PMC) & ~CKGR_MOR_MOSCXTBY;
  401298:	f022 0202 	bic.w	r2, r2, #2
	data |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCXTST(CONF_XOSC20M_STARTUP_TIME);
  40129c:	4b0d      	ldr	r3, [pc, #52]	; (4012d4 <_pmc_init_sources+0x40>)
  40129e:	4313      	orrs	r3, r2
	((Pmc *)hw)->CKGR_MOR = data;
  4012a0:	620b      	str	r3, [r1, #32]
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MOSCXTS) > 0;
  4012a2:	4b0b      	ldr	r3, [pc, #44]	; (4012d0 <_pmc_init_sources+0x3c>)
  4012a4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
	hri_pmc_write_CKGR_MOR_reg(PMC, data);
	while (!hri_pmc_get_SR_MOSCXTS_bit(PMC)) {
  4012a6:	f013 0f01 	tst.w	r3, #1
  4012aa:	d0fa      	beq.n	4012a2 <_pmc_init_sources+0xe>
	((Pmc *)hw)->CKGR_MOR |= mask;
  4012ac:	4b08      	ldr	r3, [pc, #32]	; (4012d0 <_pmc_init_sources+0x3c>)
  4012ae:	6a19      	ldr	r1, [r3, #32]
  4012b0:	4a09      	ldr	r2, [pc, #36]	; (4012d8 <_pmc_init_sources+0x44>)
  4012b2:	430a      	orrs	r2, r1
  4012b4:	621a      	str	r2, [r3, #32]

static inline void hri_pmc_write_CKGR_PLLAR_MULA_bf(const void *const hw, hri_pmc_ckgr_pllar_reg_t data)
{
	uint32_t tmp;
	PMC_CRITICAL_SECTION_ENTER();
	tmp = ((Pmc *)hw)->CKGR_PLLAR;
  4012b6:	6a99      	ldr	r1, [r3, #40]	; 0x28
	tmp &= ~CKGR_PLLAR_MULA_Msk;
  4012b8:	4a08      	ldr	r2, [pc, #32]	; (4012dc <_pmc_init_sources+0x48>)
  4012ba:	400a      	ands	r2, r1
	tmp |= CKGR_PLLAR_MULA(data);
	((Pmc *)hw)->CKGR_PLLAR = tmp;
  4012bc:	629a      	str	r2, [r3, #40]	; 0x28
}

static inline void hri_pmc_write_CKGR_PLLAR_reg(const void *const hw, hri_pmc_ckgr_pllar_reg_t data)
{
	PMC_CRITICAL_SECTION_ENTER();
	((Pmc *)hw)->CKGR_PLLAR = data;
  4012be:	4a08      	ldr	r2, [pc, #32]	; (4012e0 <_pmc_init_sources+0x4c>)
  4012c0:	629a      	str	r2, [r3, #40]	; 0x28
	return (((Pmc *)hw)->PMC_SR & PMC_SR_LOCKA) > 0;
  4012c2:	4b03      	ldr	r3, [pc, #12]	; (4012d0 <_pmc_init_sources+0x3c>)
  4012c4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
#if (CONF_PLLACK_ENABLE == 1)
	data = CKGR_PLLAR_MULA(CONF_PLLACK_MUL - 1) | CKGR_PLLAR_DIVA(CONF_PLLACK_DIV) | CKGR_PLLAR_PLLACOUNT(PLL_COUNT);
	/* Stop PLL first */
	hri_pmc_write_CKGR_PLLAR_MULA_bf(PMC, 0);
	hri_pmc_write_CKGR_PLLAR_reg(PMC, (CKGR_PLLAR_ONE | data));
	while (!hri_pmc_get_SR_LOCKA_bit(PMC)) {
  4012c6:	f013 0f02 	tst.w	r3, #2
  4012ca:	d0fa      	beq.n	4012c2 <_pmc_init_sources+0x2e>
#if (CONF_CLK_CFDEN_ENABLE == 1)
	/* Enable main clock failure detection */
	hri_pmc_set_CKGR_MOR_CFDEN_bit(PMC);
#endif
#endif
}
  4012cc:	4770      	bx	lr
  4012ce:	bf00      	nop
  4012d0:	400e0600 	.word	0x400e0600
  4012d4:	00373e01 	.word	0x00373e01
  4012d8:	01370000 	.word	0x01370000
  4012dc:	f800ffff 	.word	0xf800ffff
  4012e0:	20183f01 	.word	0x20183f01

004012e4 <_pmc_init_master_clock>:

static inline void hri_pmc_write_MCKR_PRES_bf(const void *const hw, hri_pmc_mckr_reg_t data)
{
	uint32_t tmp;
	PMC_CRITICAL_SECTION_ENTER();
	tmp = ((Pmc *)hw)->PMC_MCKR;
  4012e4:	4a11      	ldr	r2, [pc, #68]	; (40132c <_pmc_init_master_clock+0x48>)
  4012e6:	6b13      	ldr	r3, [r2, #48]	; 0x30
	tmp &= ~PMC_MCKR_PRES_Msk;
  4012e8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
	tmp |= PMC_MCKR_PRES(data);
	((Pmc *)hw)->PMC_MCKR = tmp;
  4012ec:	6313      	str	r3, [r2, #48]	; 0x30
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MCKRDY) > 0;
  4012ee:	4b0f      	ldr	r3, [pc, #60]	; (40132c <_pmc_init_master_clock+0x48>)
  4012f0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
	while (!hri_pmc_get_SR_MCKRDY_bit(PMC)) {
		/* Wait until master clock is ready */
	}
#elif ((CONF_CLK_GEN_MCKR_SRC == CLK_SRC_OPTION_PLLACK) || (CONF_CLK_GEN_MCKR_SRC == CLK_SRC_OPTION_UPLLCKDIV))
	hri_pmc_write_MCKR_PRES_bf(PMC, CONF_MCKR_PRESC);
	while (!hri_pmc_get_SR_MCKRDY_bit(PMC)) {
  4012f2:	f013 0f08 	tst.w	r3, #8
  4012f6:	d0fa      	beq.n	4012ee <_pmc_init_master_clock+0xa>

static inline void hri_pmc_write_MCKR_MDIV_bf(const void *const hw, hri_pmc_mckr_reg_t data)
{
	uint32_t tmp;
	PMC_CRITICAL_SECTION_ENTER();
	tmp = ((Pmc *)hw)->PMC_MCKR;
  4012f8:	4a0c      	ldr	r2, [pc, #48]	; (40132c <_pmc_init_master_clock+0x48>)
  4012fa:	6b13      	ldr	r3, [r2, #48]	; 0x30
	tmp &= ~PMC_MCKR_MDIV_Msk;
  4012fc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
	tmp |= PMC_MCKR_MDIV(data);
  401300:	f443 7380 	orr.w	r3, r3, #256	; 0x100
	((Pmc *)hw)->PMC_MCKR = tmp;
  401304:	6313      	str	r3, [r2, #48]	; 0x30
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MCKRDY) > 0;
  401306:	4b09      	ldr	r3, [pc, #36]	; (40132c <_pmc_init_master_clock+0x48>)
  401308:	6e9b      	ldr	r3, [r3, #104]	; 0x68
		/* Wait until master clock is ready */
	}
	hri_pmc_write_MCKR_MDIV_bf(PMC, CONF_MCK_DIV);
	while (!hri_pmc_get_SR_MCKRDY_bit(PMC)) {
  40130a:	f013 0f08 	tst.w	r3, #8
  40130e:	d0fa      	beq.n	401306 <_pmc_init_master_clock+0x22>
	tmp = ((Pmc *)hw)->PMC_MCKR;
  401310:	4a06      	ldr	r2, [pc, #24]	; (40132c <_pmc_init_master_clock+0x48>)
  401312:	6b13      	ldr	r3, [r2, #48]	; 0x30
	tmp &= ~PMC_MCKR_CSS_Msk;
  401314:	f023 0303 	bic.w	r3, r3, #3
	tmp |= PMC_MCKR_CSS(data);
  401318:	f043 0302 	orr.w	r3, r3, #2
	((Pmc *)hw)->PMC_MCKR = tmp;
  40131c:	6313      	str	r3, [r2, #48]	; 0x30
	return (((Pmc *)hw)->PMC_SR & PMC_SR_MCKRDY) > 0;
  40131e:	4b03      	ldr	r3, [pc, #12]	; (40132c <_pmc_init_master_clock+0x48>)
  401320:	6e9b      	ldr	r3, [r3, #104]	; 0x68
		/* Wait until master clock is ready */
	}
	hri_pmc_write_MCKR_CSS_bf(PMC, CONF_CLK_GEN_MCKR_SRC);
	while (!hri_pmc_get_SR_MCKRDY_bit(PMC)) {
  401322:	f013 0f08 	tst.w	r3, #8
  401326:	d0fa      	beq.n	40131e <_pmc_init_master_clock+0x3a>
		/* Wait until master clock is ready */
	}
#endif
#endif
}
  401328:	4770      	bx	lr
  40132a:	bf00      	nop
  40132c:	400e0600 	.word	0x400e0600

00401330 <_pmc_init>:
/**
 * \brief Initializes cortex M7 core clock
 *
 */
void _pmc_init(void)
{
  401330:	b508      	push	{r3, lr}
	_pmc_init_sources();
  401332:	4b02      	ldr	r3, [pc, #8]	; (40133c <_pmc_init+0xc>)
  401334:	4798      	blx	r3
	_pmc_init_master_clock();
  401336:	4b02      	ldr	r3, [pc, #8]	; (401340 <_pmc_init+0x10>)
  401338:	4798      	blx	r3
  40133a:	bd08      	pop	{r3, pc}
  40133c:	00401295 	.word	0x00401295
  401340:	004012e5 	.word	0x004012e5

00401344 <_pwm_get_cfg>:
 */
static const struct _pwm_cfg *_pwm_get_cfg(void *const hw)
{
	uint8_t i;

	for (i = 0; i < ARRAY_SIZE(_pwms); i++) {
  401344:	2300      	movs	r3, #0
  401346:	2b01      	cmp	r3, #1
  401348:	d80f      	bhi.n	40136a <_pwm_get_cfg+0x26>
		if (_pwms[i].hw == hw) {
  40134a:	ebc3 1103 	rsb	r1, r3, r3, lsl #4
  40134e:	008a      	lsls	r2, r1, #2
  401350:	4907      	ldr	r1, [pc, #28]	; (401370 <_pwm_get_cfg+0x2c>)
  401352:	588a      	ldr	r2, [r1, r2]
  401354:	4282      	cmp	r2, r0
  401356:	d002      	beq.n	40135e <_pwm_get_cfg+0x1a>
	for (i = 0; i < ARRAY_SIZE(_pwms); i++) {
  401358:	3301      	adds	r3, #1
  40135a:	b2db      	uxtb	r3, r3
  40135c:	e7f3      	b.n	401346 <_pwm_get_cfg+0x2>
			return (_pwms + i);
  40135e:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
  401362:	009a      	lsls	r2, r3, #2
  401364:	4608      	mov	r0, r1
  401366:	4410      	add	r0, r2
  401368:	4770      	bx	lr
		}
	}

	return NULL;
  40136a:	2000      	movs	r0, #0
}
  40136c:	4770      	bx	lr
  40136e:	bf00      	nop
  401370:	00406238 	.word	0x00406238

00401374 <_pwm_init_irq_param>:
/**
 * \brief Init irq param with the given pwm hardware instance
 */
static void _pwm_init_irq_param(const void *const hw, struct _pwm_device *dev)
{
	if (hw == PWM0) {
  401374:	4b06      	ldr	r3, [pc, #24]	; (401390 <_pwm_init_irq_param+0x1c>)
  401376:	4298      	cmp	r0, r3
  401378:	d003      	beq.n	401382 <_pwm_init_irq_param+0xe>
		_pwm0_dev = dev;
	}
	if (hw == PWM1) {
  40137a:	4b06      	ldr	r3, [pc, #24]	; (401394 <_pwm_init_irq_param+0x20>)
  40137c:	4298      	cmp	r0, r3
  40137e:	d003      	beq.n	401388 <_pwm_init_irq_param+0x14>
  401380:	4770      	bx	lr
		_pwm0_dev = dev;
  401382:	4b05      	ldr	r3, [pc, #20]	; (401398 <_pwm_init_irq_param+0x24>)
  401384:	6019      	str	r1, [r3, #0]
  401386:	e7f8      	b.n	40137a <_pwm_init_irq_param+0x6>
		_pwm1_dev = dev;
  401388:	4b03      	ldr	r3, [pc, #12]	; (401398 <_pwm_init_irq_param+0x24>)
  40138a:	6059      	str	r1, [r3, #4]
	}
}
  40138c:	e7f8      	b.n	401380 <_pwm_init_irq_param+0xc>
  40138e:	bf00      	nop
  401390:	40020000 	.word	0x40020000
  401394:	4005c000 	.word	0x4005c000
  401398:	2040023c 	.word	0x2040023c

0040139c <_pwm_interrupt_handler>:
 * \internal interrupt handler for PWM
 *
 * \param[in] instance PWM instance number
 */
static void _pwm_interrupt_handler(struct _pwm_device *device)
{
  40139c:	b508      	push	{r3, lr}
	if (hri_pwm_read_ISR1_reg(device->hw)) {
  40139e:	6903      	ldr	r3, [r0, #16]
	return tmp;
}

static inline hri_pwm_isr1_reg_t hri_pwm_read_ISR1_reg(const void *const hw)
{
	return ((Pwm *)hw)->PWM_ISR1;
  4013a0:	69db      	ldr	r3, [r3, #28]
  4013a2:	b113      	cbz	r3, 4013aa <_pwm_interrupt_handler+0xe>
		if (NULL != device->callback.pwm_period_cb) {
  4013a4:	6803      	ldr	r3, [r0, #0]
  4013a6:	b103      	cbz	r3, 4013aa <_pwm_interrupt_handler+0xe>
			device->callback.pwm_period_cb(device);
  4013a8:	4798      	blx	r3
  4013aa:	bd08      	pop	{r3, pc}

004013ac <PWM0_Handler>:

/**
 * \internal PWM interrupt handler
 */
void PWM0_Handler(void)
{
  4013ac:	b508      	push	{r3, lr}
	_pwm_interrupt_handler(_pwm0_dev);
  4013ae:	4b02      	ldr	r3, [pc, #8]	; (4013b8 <PWM0_Handler+0xc>)
  4013b0:	6818      	ldr	r0, [r3, #0]
  4013b2:	4b02      	ldr	r3, [pc, #8]	; (4013bc <PWM0_Handler+0x10>)
  4013b4:	4798      	blx	r3
  4013b6:	bd08      	pop	{r3, pc}
  4013b8:	2040023c 	.word	0x2040023c
  4013bc:	0040139d 	.word	0x0040139d

004013c0 <PWM1_Handler>:

/**
 * \internal PWM interrupt handler
 */
void PWM1_Handler(void)
{
  4013c0:	b508      	push	{r3, lr}
	_pwm_interrupt_handler(_pwm1_dev);
  4013c2:	4b02      	ldr	r3, [pc, #8]	; (4013cc <PWM1_Handler+0xc>)
  4013c4:	6858      	ldr	r0, [r3, #4]
  4013c6:	4b02      	ldr	r3, [pc, #8]	; (4013d0 <PWM1_Handler+0x10>)
  4013c8:	4798      	blx	r3
  4013ca:	bd08      	pop	{r3, pc}
  4013cc:	2040023c 	.word	0x2040023c
  4013d0:	0040139d 	.word	0x0040139d

004013d4 <_pwm_init>:
}

int32_t _pwm_init(struct _pwm_device *const device, void *const hw)
{
  4013d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4013d6:	4606      	mov	r6, r0
	ASSERT(hw);
  4013d8:	460c      	mov	r4, r1
  4013da:	1c08      	adds	r0, r1, #0
  4013dc:	bf18      	it	ne
  4013de:	2001      	movne	r0, #1
  4013e0:	f44f 72bf 	mov.w	r2, #382	; 0x17e
  4013e4:	4944      	ldr	r1, [pc, #272]	; (4014f8 <_pwm_init+0x124>)
  4013e6:	4b45      	ldr	r3, [pc, #276]	; (4014fc <_pwm_init+0x128>)
  4013e8:	4798      	blx	r3
	int8_t                      i;
	const struct _pwm_cfg *     cfg;
	const struct _pwm_ch_cfg *  ch;
	const struct _pwm_comp_cfg *comp;

	cfg = _pwm_get_cfg(hw);
  4013ea:	4620      	mov	r0, r4
  4013ec:	4b44      	ldr	r3, [pc, #272]	; (401500 <_pwm_init+0x12c>)
  4013ee:	4798      	blx	r3
  4013f0:	4605      	mov	r5, r0

	device->hw = hw;
  4013f2:	6134      	str	r4, [r6, #16]
	/* Init PMW */
	hri_pwm_write_CLK_reg(hw, cfg->pwm_clk);
  4013f4:	6883      	ldr	r3, [r0, #8]
}

static inline void hri_pwm_write_CLK_reg(const void *const hw, hri_pwm_clk_reg_t data)
{
	PWM_CRITICAL_SECTION_ENTER();
	((Pwm *)hw)->PWM_CLK = data;
  4013f6:	6023      	str	r3, [r4, #0]
	hri_pwm_write_ELMR_reg(hw, 0, cfg->pwm_elmr0);
  4013f8:	68c3      	ldr	r3, [r0, #12]
}

static inline void hri_pwm_write_ELMR_reg(const void *const hw, uint8_t index, hri_pwm_elmr_reg_t data)
{
	PWM_CRITICAL_SECTION_ENTER();
	((Pwm *)hw)->PWM_ELMR[index] = data;
  4013fa:	67e3      	str	r3, [r4, #124]	; 0x7c
	hri_pwm_write_ELMR_reg(hw, 1, cfg->pwm_elmr1);
  4013fc:	6903      	ldr	r3, [r0, #16]
  4013fe:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
	hri_pwm_write_FMR_reg(hw, cfg->pwm_fmr);
  401402:	6943      	ldr	r3, [r0, #20]
	((Pwm *)hw)->PWM_FMR = data;
  401404:	65e3      	str	r3, [r4, #92]	; 0x5c
	hri_pwm_write_FPV1_reg(hw, cfg->pwm_fpv1);
  401406:	6983      	ldr	r3, [r0, #24]
	((Pwm *)hw)->PWM_FPV1 = data;
  401408:	66a3      	str	r3, [r4, #104]	; 0x68
	hri_pwm_write_FPV2_reg(hw, cfg->pwm_fpv2);
  40140a:	69c3      	ldr	r3, [r0, #28]
}

static inline void hri_pwm_write_FPV2_reg(const void *const hw, hri_pwm_fpv2_reg_t data)
{
	PWM_CRITICAL_SECTION_ENTER();
	((Pwm *)hw)->PWM_FPV2 = data;
  40140c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
	hri_pwm_write_FPE_reg(hw, cfg->pwm_fpe);
  401410:	6a03      	ldr	r3, [r0, #32]
	((Pwm *)hw)->PWM_FPE = data;
  401412:	66e3      	str	r3, [r4, #108]	; 0x6c
	hri_pwm_write_ETRG1_reg(hw, cfg->pwm_etrg1);
  401414:	6a43      	ldr	r3, [r0, #36]	; 0x24
}

static inline void hri_pwm_write_ETRG1_reg(const void *const hw, hri_pwm_etrg1_reg_t data)
{
	PWM_CRITICAL_SECTION_ENTER();
	((Pwm *)hw)->PWM_ETRG1 = data;
  401416:	f8c4 342c 	str.w	r3, [r4, #1068]	; 0x42c
	hri_pwm_write_ETRG2_reg(hw, cfg->pwm_etrg2);
  40141a:	6a83      	ldr	r3, [r0, #40]	; 0x28
}

static inline void hri_pwm_write_ETRG2_reg(const void *const hw, hri_pwm_etrg2_reg_t data)
{
	PWM_CRITICAL_SECTION_ENTER();
	((Pwm *)hw)->PWM_ETRG2 = data;
  40141c:	f8c4 344c 	str.w	r3, [r4, #1100]	; 0x44c

	/* Init Channel */
	for (i = 0; i < cfg->ch_num; i++) {
  401420:	2300      	movs	r3, #0
  401422:	e019      	b.n	401458 <_pwm_init+0x84>
		ch = cfg->ch + i;
  401424:	6b2f      	ldr	r7, [r5, #48]	; 0x30
  401426:	0118      	lsls	r0, r3, #4
  401428:	eb07 0e00 	add.w	lr, r7, r0
		hri_pwm_write_CMR_reg(hw, ch->index, ch->mode);
  40142c:	5c3a      	ldrb	r2, [r7, r0]
  40142e:	f8de 1004 	ldr.w	r1, [lr, #4]
	((Pwm *)hw)->PwmChNum[submodule_index].PWM_CMR = data;
  401432:	3210      	adds	r2, #16
  401434:	0152      	lsls	r2, r2, #5
  401436:	50a1      	str	r1, [r4, r2]
		hri_pwm_write_CDTY_reg(hw, ch->index, ch->duty_cycle);
  401438:	5c3a      	ldrb	r2, [r7, r0]
  40143a:	f8de 100c 	ldr.w	r1, [lr, #12]
	((Pwm *)hw)->PwmChNum[submodule_index].PWM_CDTY = data;
  40143e:	3210      	adds	r2, #16
  401440:	eb04 1242 	add.w	r2, r4, r2, lsl #5
  401444:	6051      	str	r1, [r2, #4]
		hri_pwm_write_CPRD_reg(hw, ch->index, ch->period);
  401446:	5c3a      	ldrb	r2, [r7, r0]
  401448:	f8de 1008 	ldr.w	r1, [lr, #8]
	((Pwm *)hw)->PwmChNum[submodule_index].PWM_CPRD = data;
  40144c:	eb04 1242 	add.w	r2, r4, r2, lsl #5
  401450:	f8c2 120c 	str.w	r1, [r2, #524]	; 0x20c
	for (i = 0; i < cfg->ch_num; i++) {
  401454:	3301      	adds	r3, #1
  401456:	b25b      	sxtb	r3, r3
  401458:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  40145a:	4293      	cmp	r3, r2
  40145c:	d3e2      	bcc.n	401424 <_pwm_init+0x50>
  40145e:	2300      	movs	r3, #0
  401460:	e014      	b.n	40148c <_pwm_init+0xb8>
	}
	/* Init comparison */
	for (i = 0; i < cfg->comp_num; i++) {
		comp = cfg->comp + i;
  401462:	6ba9      	ldr	r1, [r5, #56]	; 0x38
  401464:	eb03 0043 	add.w	r0, r3, r3, lsl #1
  401468:	0082      	lsls	r2, r0, #2
  40146a:	eb01 0e02 	add.w	lr, r1, r2
		hri_pwm_write_CMPM_reg(hw, comp->index, comp->comp_cmpm);
  40146e:	5c88      	ldrb	r0, [r1, r2]
  401470:	f8de 7004 	ldr.w	r7, [lr, #4]
	((Pwm *)hw)->PwmCmp[submodule_index].PWM_CMPM = data;
  401474:	eb04 1000 	add.w	r0, r4, r0, lsl #4
  401478:	f8c0 7138 	str.w	r7, [r0, #312]	; 0x138
		hri_pwm_write_CMPV_reg(hw, comp->index, comp->comp_cmpv);
  40147c:	5c8a      	ldrb	r2, [r1, r2]
  40147e:	f8de 1008 	ldr.w	r1, [lr, #8]
	((Pwm *)hw)->PwmCmp[submodule_index].PWM_CMPV = data;
  401482:	3213      	adds	r2, #19
  401484:	0112      	lsls	r2, r2, #4
  401486:	50a1      	str	r1, [r4, r2]
	for (i = 0; i < cfg->comp_num; i++) {
  401488:	3301      	adds	r3, #1
  40148a:	b25b      	sxtb	r3, r3
  40148c:	6b6a      	ldr	r2, [r5, #52]	; 0x34
  40148e:	4293      	cmp	r3, r2
  401490:	d3e7      	bcc.n	401462 <_pwm_init+0x8e>
	}

	_pwm_init_irq_param(hw, device);
  401492:	4631      	mov	r1, r6
  401494:	4620      	mov	r0, r4
  401496:	4b1b      	ldr	r3, [pc, #108]	; (401504 <_pwm_init+0x130>)
  401498:	4798      	blx	r3
	NVIC_DisableIRQ(cfg->irq);
  40149a:	f995 3004 	ldrsb.w	r3, [r5, #4]
  if ((int32_t)(IRQn) >= 0)
  40149e:	2b00      	cmp	r3, #0
  4014a0:	db0d      	blt.n	4014be <_pwm_init+0xea>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4014a2:	095a      	lsrs	r2, r3, #5
  4014a4:	f003 031f 	and.w	r3, r3, #31
  4014a8:	2101      	movs	r1, #1
  4014aa:	fa01 f303 	lsl.w	r3, r1, r3
  4014ae:	3220      	adds	r2, #32
  4014b0:	4915      	ldr	r1, [pc, #84]	; (401508 <_pwm_init+0x134>)
  4014b2:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
  4014b6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
  4014ba:	f3bf 8f6f 	isb	sy
	NVIC_ClearPendingIRQ(cfg->irq);
  4014be:	f995 3004 	ldrsb.w	r3, [r5, #4]
  if ((int32_t)(IRQn) >= 0)
  4014c2:	2b00      	cmp	r3, #0
  4014c4:	db09      	blt.n	4014da <_pwm_init+0x106>
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4014c6:	095a      	lsrs	r2, r3, #5
  4014c8:	f003 031f 	and.w	r3, r3, #31
  4014cc:	2101      	movs	r1, #1
  4014ce:	fa01 f303 	lsl.w	r3, r1, r3
  4014d2:	3260      	adds	r2, #96	; 0x60
  4014d4:	490c      	ldr	r1, [pc, #48]	; (401508 <_pwm_init+0x134>)
  4014d6:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
	NVIC_EnableIRQ(cfg->irq);
  4014da:	f995 3004 	ldrsb.w	r3, [r5, #4]
  if ((int32_t)(IRQn) >= 0)
  4014de:	2b00      	cmp	r3, #0
  4014e0:	db08      	blt.n	4014f4 <_pwm_init+0x120>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  4014e2:	0959      	lsrs	r1, r3, #5
  4014e4:	f003 031f 	and.w	r3, r3, #31
  4014e8:	2201      	movs	r2, #1
  4014ea:	fa02 f303 	lsl.w	r3, r2, r3
  4014ee:	4a06      	ldr	r2, [pc, #24]	; (401508 <_pwm_init+0x134>)
  4014f0:	f842 3021 	str.w	r3, [r2, r1, lsl #2]

	return ERR_NONE;
}
  4014f4:	2000      	movs	r0, #0
  4014f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4014f8:	004062e0 	.word	0x004062e0
  4014fc:	00400dad 	.word	0x00400dad
  401500:	00401345 	.word	0x00401345
  401504:	00401375 	.word	0x00401375
  401508:	e000e100 	.word	0xe000e100

0040150c <_pwm_enable>:

	hri_pwm_write_DIS_reg(device->hw, PWM_DIS_MASK);
}

void _pwm_enable(struct _pwm_device *const device)
{
  40150c:	b538      	push	{r3, r4, r5, lr}
	ASSERT(device);
  40150e:	4604      	mov	r4, r0
  401510:	f240 12b5 	movw	r2, #437	; 0x1b5
  401514:	490b      	ldr	r1, [pc, #44]	; (401544 <_pwm_enable+0x38>)
  401516:	3000      	adds	r0, #0
  401518:	bf18      	it	ne
  40151a:	2001      	movne	r0, #1
  40151c:	4b0a      	ldr	r3, [pc, #40]	; (401548 <_pwm_enable+0x3c>)
  40151e:	4798      	blx	r3
	int8_t                 i;
	const struct _pwm_cfg *cfg;

	cfg = _pwm_get_cfg(device->hw);
  401520:	6920      	ldr	r0, [r4, #16]
  401522:	4b0a      	ldr	r3, [pc, #40]	; (40154c <_pwm_enable+0x40>)
  401524:	4798      	blx	r3

	for (i = 0; i < cfg->ch_num; i++) {
  401526:	2300      	movs	r3, #0
  401528:	e008      	b.n	40153c <_pwm_enable+0x30>
		hri_pwm_write_ENA_reg(device->hw, 0x1u << cfg->ch[i].index);
  40152a:	6921      	ldr	r1, [r4, #16]
  40152c:	6b05      	ldr	r5, [r0, #48]	; 0x30
  40152e:	011a      	lsls	r2, r3, #4
  401530:	5cad      	ldrb	r5, [r5, r2]
  401532:	2201      	movs	r2, #1
  401534:	40aa      	lsls	r2, r5
}

static inline void hri_pwm_write_ENA_reg(const void *const hw, hri_pwm_ena_reg_t data)
{
	PWM_CRITICAL_SECTION_ENTER();
	((Pwm *)hw)->PWM_ENA = data;
  401536:	604a      	str	r2, [r1, #4]
	for (i = 0; i < cfg->ch_num; i++) {
  401538:	3301      	adds	r3, #1
  40153a:	b25b      	sxtb	r3, r3
  40153c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
  40153e:	4293      	cmp	r3, r2
  401540:	d3f3      	bcc.n	40152a <_pwm_enable+0x1e>
	}
}
  401542:	bd38      	pop	{r3, r4, r5, pc}
  401544:	004062e0 	.word	0x004062e0
  401548:	00400dad 	.word	0x00400dad
  40154c:	00401345 	.word	0x00401345

00401550 <_pwm_set_param>:
		hri_pwm_write_DIS_reg(device->hw, 0x1u << cfg->ch[i].index);
	}
}

void _pwm_set_param(struct _pwm_device *const device, const pwm_period_t period, const pwm_period_t duty_cycle)
{
  401550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  401552:	460d      	mov	r5, r1
  401554:	4616      	mov	r6, r2
	uint8_t                i;
	const struct _pwm_cfg *cfg;

	ASSERT(device && (duty_cycle < period));
  401556:	4604      	mov	r4, r0
  401558:	f44f 72e9 	mov.w	r2, #466	; 0x1d2
  40155c:	4911      	ldr	r1, [pc, #68]	; (4015a4 <_pwm_set_param+0x54>)
  40155e:	2800      	cmp	r0, #0
  401560:	bf18      	it	ne
  401562:	42ae      	cmpne	r6, r5
  401564:	bf34      	ite	cc
  401566:	2001      	movcc	r0, #1
  401568:	2000      	movcs	r0, #0
  40156a:	4b0f      	ldr	r3, [pc, #60]	; (4015a8 <_pwm_set_param+0x58>)
  40156c:	4798      	blx	r3

	cfg = _pwm_get_cfg(device->hw);
  40156e:	6920      	ldr	r0, [r4, #16]
  401570:	4b0e      	ldr	r3, [pc, #56]	; (4015ac <_pwm_set_param+0x5c>)
  401572:	4798      	blx	r3

	for (i = 0; i < cfg->ch_num; i++) {
  401574:	2300      	movs	r3, #0
  401576:	e010      	b.n	40159a <_pwm_set_param+0x4a>
		hri_pwm_write_CDTYUPD_reg(device->hw, cfg->ch[i].index, duty_cycle);
  401578:	6922      	ldr	r2, [r4, #16]
  40157a:	6b07      	ldr	r7, [r0, #48]	; 0x30
  40157c:	0119      	lsls	r1, r3, #4
  40157e:	5c7f      	ldrb	r7, [r7, r1]
	((Pwm *)hw)->PwmChNum[submodule_index].PWM_CDTYUPD = data;
  401580:	eb02 1247 	add.w	r2, r2, r7, lsl #5
  401584:	f8c2 6208 	str.w	r6, [r2, #520]	; 0x208
		hri_pwm_write_CPRDUPD_reg(device->hw, cfg->ch[i].index, period);
  401588:	6922      	ldr	r2, [r4, #16]
  40158a:	6b07      	ldr	r7, [r0, #48]	; 0x30
  40158c:	5c79      	ldrb	r1, [r7, r1]
	((Pwm *)hw)->PwmChNum[submodule_index].PWM_CPRDUPD = data;
  40158e:	eb02 1241 	add.w	r2, r2, r1, lsl #5
  401592:	f8c2 5210 	str.w	r5, [r2, #528]	; 0x210
	for (i = 0; i < cfg->ch_num; i++) {
  401596:	3301      	adds	r3, #1
  401598:	b2db      	uxtb	r3, r3
  40159a:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
  40159c:	4293      	cmp	r3, r2
  40159e:	d3eb      	bcc.n	401578 <_pwm_set_param+0x28>
	}
}
  4015a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4015a2:	bf00      	nop
  4015a4:	004062e0 	.word	0x004062e0
  4015a8:	00400dad 	.word	0x00400dad
  4015ac:	00401345 	.word	0x00401345

004015b0 <_pwm_is_enabled>:

bool _pwm_is_enabled(const struct _pwm_device *const device)
{
  4015b0:	b510      	push	{r4, lr}
	ASSERT(device);
  4015b2:	4604      	mov	r4, r0
  4015b4:	f44f 72ef 	mov.w	r2, #478	; 0x1de
  4015b8:	4907      	ldr	r1, [pc, #28]	; (4015d8 <_pwm_is_enabled+0x28>)
  4015ba:	3000      	adds	r0, #0
  4015bc:	bf18      	it	ne
  4015be:	2001      	movne	r0, #1
  4015c0:	4b06      	ldr	r3, [pc, #24]	; (4015dc <_pwm_is_enabled+0x2c>)
  4015c2:	4798      	blx	r3
	uint8_t status = hri_pwm_get_SR_reg(device->hw, 0x0F);
  4015c4:	6923      	ldr	r3, [r4, #16]
	tmp = ((Pwm *)hw)->PWM_SR;
  4015c6:	68db      	ldr	r3, [r3, #12]
	if (status == 0) {
  4015c8:	f013 0f0f 	tst.w	r3, #15
  4015cc:	d001      	beq.n	4015d2 <_pwm_is_enabled+0x22>
		return false;
	} else {
		return true;
  4015ce:	2001      	movs	r0, #1
	}
}
  4015d0:	bd10      	pop	{r4, pc}
		return false;
  4015d2:	2000      	movs	r0, #0
  4015d4:	bd10      	pop	{r4, pc}
  4015d6:	bf00      	nop
  4015d8:	004062e0 	.word	0x004062e0
  4015dc:	00400dad 	.word	0x00400dad

004015e0 <_pwm_get_pwm>:
 * \brief Retrieve pwm helper functions
 */
struct _pwm_hpl_interface *_pwm_get_pwm(void)
{
	return NULL;
}
  4015e0:	2000      	movs	r0, #0
  4015e2:	4770      	bx	lr

004015e4 <_system_time_init>:
 * \brief Initialize system time module
 */
void _system_time_init(void *const hw)
{
	(void)hw;
	SysTick->LOAD = (0xFFFFFF << SysTick_LOAD_RELOAD_Pos);
  4015e4:	4b03      	ldr	r3, [pc, #12]	; (4015f4 <_system_time_init+0x10>)
  4015e6:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
  4015ea:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos) | (CONF_SYSTICK_TICKINT << SysTick_CTRL_TICKINT_Pos)
  4015ec:	2205      	movs	r2, #5
  4015ee:	601a      	str	r2, [r3, #0]
  4015f0:	4770      	bx	lr
  4015f2:	bf00      	nop
  4015f4:	e000e010 	.word	0xe000e010

004015f8 <_delay_init>:
}
/**
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
  4015f8:	b508      	push	{r3, lr}
	_system_time_init(hw);
  4015fa:	4b01      	ldr	r3, [pc, #4]	; (401600 <_delay_init+0x8>)
  4015fc:	4798      	blx	r3
  4015fe:	bd08      	pop	{r3, pc}
  401600:	004015e5 	.word	0x004015e5

00401604 <_delay_cycles>:
 * \brief Delay loop to delay n number of cycles
 */
void _delay_cycles(void *const hw, uint32_t cycles)
{
	(void)hw;
	uint8_t  n   = cycles >> 24;
  401604:	0e08      	lsrs	r0, r1, #24
	uint32_t buf = cycles;

	while (n--) {
  401606:	e00d      	b.n	401624 <_delay_cycles+0x20>
		SysTick->LOAD = 0xFFFFFF;
  401608:	4b0d      	ldr	r3, [pc, #52]	; (401640 <_delay_cycles+0x3c>)
  40160a:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
  40160e:	6058      	str	r0, [r3, #4]
		SysTick->VAL  = 0xFFFFFF;
  401610:	6098      	str	r0, [r3, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
  401612:	4b0b      	ldr	r3, [pc, #44]	; (401640 <_delay_cycles+0x3c>)
  401614:	681b      	ldr	r3, [r3, #0]
  401616:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40161a:	d0fa      	beq.n	401612 <_delay_cycles+0xe>
			;
		buf -= 0xFFFFFF;
  40161c:	f101 417f 	add.w	r1, r1, #4278190080	; 0xff000000
  401620:	3101      	adds	r1, #1
	while (n--) {
  401622:	4610      	mov	r0, r2
  401624:	1e43      	subs	r3, r0, #1
  401626:	b2da      	uxtb	r2, r3
  401628:	2800      	cmp	r0, #0
  40162a:	d1ed      	bne.n	401608 <_delay_cycles+0x4>
	}

	SysTick->LOAD = buf;
  40162c:	4b04      	ldr	r3, [pc, #16]	; (401640 <_delay_cycles+0x3c>)
  40162e:	6059      	str	r1, [r3, #4]
	SysTick->VAL  = buf;
  401630:	6099      	str	r1, [r3, #8]
	while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
  401632:	4b03      	ldr	r3, [pc, #12]	; (401640 <_delay_cycles+0x3c>)
  401634:	681b      	ldr	r3, [r3, #0]
  401636:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  40163a:	d0fa      	beq.n	401632 <_delay_cycles+0x2e>
		;
}
  40163c:	4770      	bx	lr
  40163e:	bf00      	nop
  401640:	e000e010 	.word	0xe000e010

00401644 <_usart_get_hardware_index>:

/**
 * \brief Retrieve ordinal number of the given usart hardware instance
 */
static uint8_t _usart_get_hardware_index(const void *const hw)
{
  401644:	b510      	push	{r4, lr}
	ASSERT(hw);
  401646:	4604      	mov	r4, r0
  401648:	f240 222b 	movw	r2, #555	; 0x22b
  40164c:	4905      	ldr	r1, [pc, #20]	; (401664 <_usart_get_hardware_index+0x20>)
  40164e:	3000      	adds	r0, #0
  401650:	bf18      	it	ne
  401652:	2001      	movne	r0, #1
  401654:	4b04      	ldr	r3, [pc, #16]	; (401668 <_usart_get_hardware_index+0x24>)
  401656:	4798      	blx	r3

#ifdef _UNIT_TEST_
	return ((uint32_t)hw - (uint32_t)USART0) / sizeof(Usart);
#endif

	return ((uint32_t)hw - (uint32_t)USART0) >> 14;
  401658:	4804      	ldr	r0, [pc, #16]	; (40166c <_usart_get_hardware_index+0x28>)
  40165a:	4420      	add	r0, r4
}
  40165c:	f3c0 3087 	ubfx	r0, r0, #14, #8
  401660:	bd10      	pop	{r4, pc}
  401662:	bf00      	nop
  401664:	00406304 	.word	0x00406304
  401668:	00400dad 	.word	0x00400dad
  40166c:	bffdc000 	.word	0xbffdc000

00401670 <_get_usart_index>:
 * \param[in] hw The pointer to hardware instance

 * \return The ordinal number of the given usart hardware instance
 */
static uint8_t _get_usart_index(const void *const hw)
{
  401670:	b510      	push	{r4, lr}
	ASSERT(hw);
  401672:	4604      	mov	r4, r0
  401674:	f240 2287 	movw	r2, #647	; 0x287
  401678:	490e      	ldr	r1, [pc, #56]	; (4016b4 <_get_usart_index+0x44>)
  40167a:	3000      	adds	r0, #0
  40167c:	bf18      	it	ne
  40167e:	2001      	movne	r0, #1
  401680:	4b0d      	ldr	r3, [pc, #52]	; (4016b8 <_get_usart_index+0x48>)
  401682:	4798      	blx	r3
	uint8_t usart_offset = _usart_get_hardware_index(hw);
  401684:	4620      	mov	r0, r4
  401686:	4b0d      	ldr	r3, [pc, #52]	; (4016bc <_get_usart_index+0x4c>)
  401688:	4798      	blx	r3
	uint8_t i;

	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
  40168a:	2300      	movs	r3, #0
  40168c:	b143      	cbz	r3, 4016a0 <_get_usart_index+0x30>
		if (_usarts[i].number == usart_offset) {
			return i;
		}
	}

	ASSERT(false);
  40168e:	f240 2291 	movw	r2, #657	; 0x291
  401692:	4908      	ldr	r1, [pc, #32]	; (4016b4 <_get_usart_index+0x44>)
  401694:	2000      	movs	r0, #0
  401696:	4b08      	ldr	r3, [pc, #32]	; (4016b8 <_get_usart_index+0x48>)
  401698:	4798      	blx	r3
	return 0;
  40169a:	2300      	movs	r3, #0
}
  40169c:	4618      	mov	r0, r3
  40169e:	bd10      	pop	{r4, pc}
		if (_usarts[i].number == usart_offset) {
  4016a0:	eb03 0143 	add.w	r1, r3, r3, lsl #1
  4016a4:	008a      	lsls	r2, r1, #2
  4016a6:	4906      	ldr	r1, [pc, #24]	; (4016c0 <_get_usart_index+0x50>)
  4016a8:	5c8a      	ldrb	r2, [r1, r2]
  4016aa:	4290      	cmp	r0, r2
  4016ac:	d0f6      	beq.n	40169c <_get_usart_index+0x2c>
	for (i = 0; i < ARRAY_SIZE(_usarts); i++) {
  4016ae:	3301      	adds	r3, #1
  4016b0:	b2db      	uxtb	r3, r3
  4016b2:	e7eb      	b.n	40168c <_get_usart_index+0x1c>
  4016b4:	00406304 	.word	0x00406304
  4016b8:	00400dad 	.word	0x00400dad
  4016bc:	00401645 	.word	0x00401645
  4016c0:	004062f8 	.word	0x004062f8

004016c4 <_usart_init>:
 * \param[in] hw The pointer to hardware instance
 *
 * \return The status of initialization
 */
static int32_t _usart_init(void *const hw)
{
  4016c4:	b510      	push	{r4, lr}
	ASSERT(hw);
  4016c6:	4604      	mov	r4, r0
  4016c8:	f240 229e 	movw	r2, #670	; 0x29e
  4016cc:	4911      	ldr	r1, [pc, #68]	; (401714 <_usart_init+0x50>)
  4016ce:	3000      	adds	r0, #0
  4016d0:	bf18      	it	ne
  4016d2:	2001      	movne	r0, #1
  4016d4:	4b10      	ldr	r3, [pc, #64]	; (401718 <_usart_init+0x54>)
  4016d6:	4798      	blx	r3
	uint8_t i = _get_usart_index(hw);
  4016d8:	4620      	mov	r0, r4
  4016da:	4b10      	ldr	r3, [pc, #64]	; (40171c <_usart_init+0x58>)
  4016dc:	4798      	blx	r3
}

static inline void hri_usart_write_US_WPMR_reg(const void *const hw, hri_usart_us_wpmr_reg_t data)
{
	USART_CRITICAL_SECTION_ENTER();
	((Usart *)hw)->US_WPMR = data;
  4016de:	4b10      	ldr	r3, [pc, #64]	; (401720 <_usart_init+0x5c>)
  4016e0:	f8c4 30e4 	str.w	r3, [r4, #228]	; 0xe4
	((Usart *)hw)->US_MR = data;
  4016e4:	2300      	movs	r3, #0
  4016e6:	6063      	str	r3, [r4, #4]
	((Usart *)hw)->US_RTOR = data;
  4016e8:	6263      	str	r3, [r4, #36]	; 0x24
	((Usart *)hw)->US_TTGR = data;
  4016ea:	62a3      	str	r3, [r4, #40]	; 0x28
}

static inline void hri_usart_write_US_CR_reg(const void *const hw, hri_usart_us_cr_reg_t data)
{
	USART_CRITICAL_SECTION_ENTER();
	((Usart *)hw)->US_CR = data;
  4016ec:	22ac      	movs	r2, #172	; 0xac
  4016ee:	6022      	str	r2, [r4, #0]
  4016f0:	f44f 7280 	mov.w	r2, #256	; 0x100
  4016f4:	6022      	str	r2, [r4, #0]
  4016f6:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4016fa:	6022      	str	r2, [r4, #0]
	/* Reset status bits. */
	hri_usart_write_US_CR_reg(hw, US_CR_RSTSTA);
	/* Turn off RTS and DTR if exist. */
	hri_usart_write_US_CR_reg(hw, US_CR_USART_RTSDIS);

	hri_usart_write_US_MR_reg(hw, _usarts[i].us_mr);
  4016fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
  401700:	0081      	lsls	r1, r0, #2
  401702:	4a08      	ldr	r2, [pc, #32]	; (401724 <_usart_init+0x60>)
  401704:	440a      	add	r2, r1
  401706:	6852      	ldr	r2, [r2, #4]
	((Usart *)hw)->US_MR = data;
  401708:	6062      	str	r2, [r4, #4]
	((Usart *)hw)->US_BRGR = data;
  40170a:	4a07      	ldr	r2, [pc, #28]	; (401728 <_usart_init+0x64>)
  40170c:	6222      	str	r2, [r4, #32]
	hri_usart_write_US_BRGR_reg(hw, _usarts[i].us_brgr);

	return ERR_NONE;
}
  40170e:	4618      	mov	r0, r3
  401710:	bd10      	pop	{r4, pc}
  401712:	bf00      	nop
  401714:	00406304 	.word	0x00406304
  401718:	00400dad 	.word	0x00400dad
  40171c:	00401671 	.word	0x00401671
  401720:	55534100 	.word	0x55534100
  401724:	004062f8 	.word	0x004062f8
  401728:	000100f4 	.word	0x000100f4

0040172c <_usart_sync_init>:
{
  40172c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40172e:	460c      	mov	r4, r1
	ASSERT(device);
  401730:	4e09      	ldr	r6, [pc, #36]	; (401758 <_usart_sync_init+0x2c>)
  401732:	4607      	mov	r7, r0
  401734:	22bd      	movs	r2, #189	; 0xbd
  401736:	4631      	mov	r1, r6
  401738:	3000      	adds	r0, #0
  40173a:	bf18      	it	ne
  40173c:	2001      	movne	r0, #1
  40173e:	4d07      	ldr	r5, [pc, #28]	; (40175c <_usart_sync_init+0x30>)
  401740:	47a8      	blx	r5
	ASSERT(hw);
  401742:	22be      	movs	r2, #190	; 0xbe
  401744:	4631      	mov	r1, r6
  401746:	1c20      	adds	r0, r4, #0
  401748:	bf18      	it	ne
  40174a:	2001      	movne	r0, #1
  40174c:	47a8      	blx	r5
	device->hw = hw;
  40174e:	603c      	str	r4, [r7, #0]
	return _usart_init(hw);
  401750:	4620      	mov	r0, r4
  401752:	4b03      	ldr	r3, [pc, #12]	; (401760 <_usart_sync_init+0x34>)
  401754:	4798      	blx	r3
}
  401756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401758:	00406304 	.word	0x00406304
  40175c:	00400dad 	.word	0x00400dad
  401760:	004016c5 	.word	0x004016c5

00401764 <_usart_sync_enable>:
{
  401764:	b570      	push	{r4, r5, r6, lr}
	ASSERT(device);
  401766:	4e0a      	ldr	r6, [pc, #40]	; (401790 <_usart_sync_enable+0x2c>)
  401768:	4604      	mov	r4, r0
  40176a:	f240 1205 	movw	r2, #261	; 0x105
  40176e:	4631      	mov	r1, r6
  401770:	3000      	adds	r0, #0
  401772:	bf18      	it	ne
  401774:	2001      	movne	r0, #1
  401776:	4d07      	ldr	r5, [pc, #28]	; (401794 <_usart_sync_enable+0x30>)
  401778:	47a8      	blx	r5
	_usart_enable(device->hw);
  40177a:	6824      	ldr	r4, [r4, #0]
 *
 * \param[in] hw The pointer to hardware instance
 */
static inline void _usart_enable(void *const hw)
{
	ASSERT(hw);
  40177c:	f240 22c7 	movw	r2, #711	; 0x2c7
  401780:	4631      	mov	r1, r6
  401782:	1c20      	adds	r0, r4, #0
  401784:	bf18      	it	ne
  401786:	2001      	movne	r0, #1
  401788:	47a8      	blx	r5
	((Usart *)hw)->US_CR = data;
  40178a:	2350      	movs	r3, #80	; 0x50
  40178c:	6023      	str	r3, [r4, #0]
  40178e:	bd70      	pop	{r4, r5, r6, pc}
  401790:	00406304 	.word	0x00406304
  401794:	00400dad 	.word	0x00400dad

00401798 <_usart_sync_write_byte>:
{
  401798:	b538      	push	{r3, r4, r5, lr}
  40179a:	460c      	mov	r4, r1
	ASSERT(device);
  40179c:	4605      	mov	r5, r0
  40179e:	f44f 72d4 	mov.w	r2, #424	; 0x1a8
  4017a2:	4904      	ldr	r1, [pc, #16]	; (4017b4 <_usart_sync_write_byte+0x1c>)
  4017a4:	3000      	adds	r0, #0
  4017a6:	bf18      	it	ne
  4017a8:	2001      	movne	r0, #1
  4017aa:	4b03      	ldr	r3, [pc, #12]	; (4017b8 <_usart_sync_write_byte+0x20>)
  4017ac:	4798      	blx	r3
	hri_usart_write_US_THR_reg(device->hw, (hri_usart_us_thr_reg_t)data);
  4017ae:	682b      	ldr	r3, [r5, #0]
}

static inline void hri_usart_write_US_THR_reg(const void *const hw, hri_usart_us_thr_reg_t data)
{
	USART_CRITICAL_SECTION_ENTER();
	((Usart *)hw)->US_THR = data;
  4017b0:	61dc      	str	r4, [r3, #28]
  4017b2:	bd38      	pop	{r3, r4, r5, pc}
  4017b4:	00406304 	.word	0x00406304
  4017b8:	00400dad 	.word	0x00400dad

004017bc <_usart_sync_read_byte>:
{
  4017bc:	b510      	push	{r4, lr}
	ASSERT(device);
  4017be:	4604      	mov	r4, r0
  4017c0:	f44f 72dd 	mov.w	r2, #442	; 0x1ba
  4017c4:	4904      	ldr	r1, [pc, #16]	; (4017d8 <_usart_sync_read_byte+0x1c>)
  4017c6:	3000      	adds	r0, #0
  4017c8:	bf18      	it	ne
  4017ca:	2001      	movne	r0, #1
  4017cc:	4b03      	ldr	r3, [pc, #12]	; (4017dc <_usart_sync_read_byte+0x20>)
  4017ce:	4798      	blx	r3
	return (uint8_t)(hri_usart_read_US_RHR_reg(device->hw) & 0xff);
  4017d0:	6823      	ldr	r3, [r4, #0]
	return ((Usart *)hw)->US_RHR;
  4017d2:	6998      	ldr	r0, [r3, #24]
}
  4017d4:	b2c0      	uxtb	r0, r0
  4017d6:	bd10      	pop	{r4, pc}
  4017d8:	00406304 	.word	0x00406304
  4017dc:	00400dad 	.word	0x00400dad

004017e0 <_usart_sync_is_ready_to_send>:
{
  4017e0:	b510      	push	{r4, lr}
	ASSERT(device);
  4017e2:	4604      	mov	r4, r0
  4017e4:	f240 12c3 	movw	r2, #451	; 0x1c3
  4017e8:	4905      	ldr	r1, [pc, #20]	; (401800 <_usart_sync_is_ready_to_send+0x20>)
  4017ea:	3000      	adds	r0, #0
  4017ec:	bf18      	it	ne
  4017ee:	2001      	movne	r0, #1
  4017f0:	4b04      	ldr	r3, [pc, #16]	; (401804 <_usart_sync_is_ready_to_send+0x24>)
  4017f2:	4798      	blx	r3
	return hri_usart_get_US_CSR_TXRDY_bit(device->hw);
  4017f4:	6823      	ldr	r3, [r4, #0]
	return (((Usart *)hw)->US_CSR & US_CSR_TXRDY) > 0;
  4017f6:	6958      	ldr	r0, [r3, #20]
}
  4017f8:	f3c0 0040 	ubfx	r0, r0, #1, #1
  4017fc:	bd10      	pop	{r4, pc}
  4017fe:	bf00      	nop
  401800:	00406304 	.word	0x00406304
  401804:	00400dad 	.word	0x00400dad

00401808 <_usart_sync_is_transmit_done>:
{
  401808:	b510      	push	{r4, lr}
	ASSERT(device);
  40180a:	4604      	mov	r4, r0
  40180c:	f44f 72e6 	mov.w	r2, #460	; 0x1cc
  401810:	4905      	ldr	r1, [pc, #20]	; (401828 <_usart_sync_is_transmit_done+0x20>)
  401812:	3000      	adds	r0, #0
  401814:	bf18      	it	ne
  401816:	2001      	movne	r0, #1
  401818:	4b04      	ldr	r3, [pc, #16]	; (40182c <_usart_sync_is_transmit_done+0x24>)
  40181a:	4798      	blx	r3
	return hri_usart_get_US_CSR_TXEMPTY_bit(device->hw);
  40181c:	6823      	ldr	r3, [r4, #0]
	return (((Usart *)hw)->US_CSR & US_CSR_TXEMPTY) > 0;
  40181e:	6958      	ldr	r0, [r3, #20]
}
  401820:	f3c0 2040 	ubfx	r0, r0, #9, #1
  401824:	bd10      	pop	{r4, pc}
  401826:	bf00      	nop
  401828:	00406304 	.word	0x00406304
  40182c:	00400dad 	.word	0x00400dad

00401830 <_usart_sync_is_byte_received>:
{
  401830:	b510      	push	{r4, lr}
	ASSERT(device);
  401832:	4604      	mov	r4, r0
  401834:	f44f 72ef 	mov.w	r2, #478	; 0x1de
  401838:	4905      	ldr	r1, [pc, #20]	; (401850 <_usart_sync_is_byte_received+0x20>)
  40183a:	3000      	adds	r0, #0
  40183c:	bf18      	it	ne
  40183e:	2001      	movne	r0, #1
  401840:	4b04      	ldr	r3, [pc, #16]	; (401854 <_usart_sync_is_byte_received+0x24>)
  401842:	4798      	blx	r3
	return hri_usart_get_US_CSR_RXRDY_bit(device->hw);
  401844:	6823      	ldr	r3, [r4, #0]
	return (((Usart *)hw)->US_CSR & US_CSR_RXRDY) > 0;
  401846:	6958      	ldr	r0, [r3, #20]
  401848:	f000 0001 	and.w	r0, r0, #1
}
  40184c:	bd10      	pop	{r4, pc}
  40184e:	bf00      	nop
  401850:	00406304 	.word	0x00406304
  401854:	00400dad 	.word	0x00400dad

00401858 <_usart_get_usart_sync>:
}
  401858:	2000      	movs	r0, #0
  40185a:	4770      	bx	lr

0040185c <main>:
#include "arm_math.h"



int main(void)
{
  40185c:	b508      	push	{r3, lr}
	/* Initializes MCU, drivers and middleware */
	atmel_start_init();
  40185e:	4b0a      	ldr	r3, [pc, #40]	; (401888 <main+0x2c>)
  401860:	4798      	blx	r3
	//CAN is currently disabled
	//Temp 3 currently disabled as pin is shared with edbg com
	
	
	//Initialise dead time on PWMs 
	pwm_deadtime_init();	
  401862:	4b0a      	ldr	r3, [pc, #40]	; (40188c <main+0x30>)
  401864:	4798      	blx	r3
	
	
	pwm_enable_all();
  401866:	4b0a      	ldr	r3, [pc, #40]	; (401890 <main+0x34>)
  401868:	4798      	blx	r3
	adc_enable_all();
  40186a:	4b0a      	ldr	r3, [pc, #40]	; (401894 <main+0x38>)
  40186c:	4798      	blx	r3
	((Pio *)hw)->PIO_SODR = mask;
  40186e:	f44f 2280 	mov.w	r2, #262144	; 0x40000
  401872:	4b09      	ldr	r3, [pc, #36]	; (401898 <main+0x3c>)
  401874:	631a      	str	r2, [r3, #48]	; 0x30
	
	
	//Runs first slow spin test of motor slowly increasing the angle so the rotor can catch up
	
	
	first_slow_spin();
  401876:	4b09      	ldr	r3, [pc, #36]	; (40189c <main+0x40>)
  401878:	4798      	blx	r3

	/* Replace with your application code */
	while (1) {
		
		
		Current_Voltage_Inital_Test();
  40187a:	4b09      	ldr	r3, [pc, #36]	; (4018a0 <main+0x44>)
  40187c:	4798      	blx	r3
		delay_ms(500);
  40187e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
  401882:	4b08      	ldr	r3, [pc, #32]	; (4018a4 <main+0x48>)
  401884:	4798      	blx	r3
  401886:	e7f8      	b.n	40187a <main+0x1e>
  401888:	004001d5 	.word	0x004001d5
  40188c:	004002a1 	.word	0x004002a1
  401890:	00400259 	.word	0x00400259
  401894:	004001e9 	.word	0x004001e9
  401898:	400e0e00 	.word	0x400e0e00
  40189c:	00400391 	.word	0x00400391
  4018a0:	00400329 	.word	0x00400329
  4018a4:	00400aad 	.word	0x00400aad

004018a8 <_read>:

int __attribute__((weak)) _read(int file, char *ptr, int len)
{
	int n = 0;

	if (file != 0) {
  4018a8:	b958      	cbnz	r0, 4018c2 <_read+0x1a>
{
  4018aa:	b508      	push	{r3, lr}
  4018ac:	460b      	mov	r3, r1
  4018ae:	4611      	mov	r1, r2
  4018b0:	4618      	mov	r0, r3
		return -1;
	}

	n = stdio_io_read((uint8_t *)ptr, len);
  4018b2:	4b05      	ldr	r3, [pc, #20]	; (4018c8 <_read+0x20>)
  4018b4:	4798      	blx	r3
	if (n < 0) {
  4018b6:	2800      	cmp	r0, #0
  4018b8:	db00      	blt.n	4018bc <_read+0x14>
		return -1;
	}

	return n;
}
  4018ba:	bd08      	pop	{r3, pc}
		return -1;
  4018bc:	f04f 30ff 	mov.w	r0, #4294967295
  4018c0:	bd08      	pop	{r3, pc}
		return -1;
  4018c2:	f04f 30ff 	mov.w	r0, #4294967295
  4018c6:	4770      	bx	lr
  4018c8:	00401921 	.word	0x00401921

004018cc <_write>:

int __attribute__((weak)) _write(int file, char *ptr, int len)
{
	int n = 0;

	if ((file != 1) && (file != 2) && (file != 3)) {
  4018cc:	3801      	subs	r0, #1
  4018ce:	2802      	cmp	r0, #2
  4018d0:	d80b      	bhi.n	4018ea <_write+0x1e>
{
  4018d2:	b508      	push	{r3, lr}
  4018d4:	460b      	mov	r3, r1
  4018d6:	4611      	mov	r1, r2
  4018d8:	4618      	mov	r0, r3
		return -1;
	}

	n = stdio_io_write((const uint8_t *)ptr, len);
  4018da:	4b05      	ldr	r3, [pc, #20]	; (4018f0 <_write+0x24>)
  4018dc:	4798      	blx	r3
	if (n < 0) {
  4018de:	2800      	cmp	r0, #0
  4018e0:	db00      	blt.n	4018e4 <_write+0x18>
		return -1;
	}

	return n;
}
  4018e2:	bd08      	pop	{r3, pc}
		return -1;
  4018e4:	f04f 30ff 	mov.w	r0, #4294967295
  4018e8:	bd08      	pop	{r3, pc}
		return -1;
  4018ea:	f04f 30ff 	mov.w	r0, #4294967295
  4018ee:	4770      	bx	lr
  4018f0:	00401945 	.word	0x00401945

004018f4 <stdio_io_init>:

/** IO descriptor for STDIO access. */
static struct io_descriptor *stdio_io = NULL;

void stdio_io_init(struct io_descriptor *io)
{
  4018f4:	b570      	push	{r4, r5, r6, lr}
  4018f6:	4606      	mov	r6, r0
#if defined(__GNUC__)
	/* Specify that stdout and stdin should not be buffered. */
	setbuf(stdout, NULL);
  4018f8:	4d06      	ldr	r5, [pc, #24]	; (401914 <stdio_io_init+0x20>)
  4018fa:	682b      	ldr	r3, [r5, #0]
  4018fc:	2100      	movs	r1, #0
  4018fe:	6898      	ldr	r0, [r3, #8]
  401900:	4c05      	ldr	r4, [pc, #20]	; (401918 <stdio_io_init+0x24>)
  401902:	47a0      	blx	r4
	setbuf(stdin, NULL);
  401904:	682b      	ldr	r3, [r5, #0]
  401906:	2100      	movs	r1, #0
  401908:	6858      	ldr	r0, [r3, #4]
  40190a:	47a0      	blx	r4
	 * and AVR GCC library:
	 * - printf() emits one character at a time.
	 * - getchar() requests only 1 byte to exit.
	 */
#endif
	stdio_io = io;
  40190c:	4b03      	ldr	r3, [pc, #12]	; (40191c <stdio_io_init+0x28>)
  40190e:	601e      	str	r6, [r3, #0]
  401910:	bd70      	pop	{r4, r5, r6, pc}
  401912:	bf00      	nop
  401914:	20400000 	.word	0x20400000
  401918:	00403fbd 	.word	0x00403fbd
  40191c:	2040025c 	.word	0x2040025c

00401920 <stdio_io_read>:
{
	stdio_io = io;
}

int32_t stdio_io_read(uint8_t *buf, const int32_t len)
{
  401920:	b508      	push	{r3, lr}
	if (stdio_io == NULL) {
  401922:	4b06      	ldr	r3, [pc, #24]	; (40193c <stdio_io_read+0x1c>)
  401924:	681b      	ldr	r3, [r3, #0]
  401926:	b133      	cbz	r3, 401936 <stdio_io_read+0x16>
  401928:	460a      	mov	r2, r1
  40192a:	4601      	mov	r1, r0
		return 0;
	}
	return io_read(stdio_io, buf, len);
  40192c:	b292      	uxth	r2, r2
  40192e:	4618      	mov	r0, r3
  401930:	4b03      	ldr	r3, [pc, #12]	; (401940 <stdio_io_read+0x20>)
  401932:	4798      	blx	r3
  401934:	bd08      	pop	{r3, pc}
		return 0;
  401936:	2000      	movs	r0, #0
}
  401938:	bd08      	pop	{r3, pc}
  40193a:	bf00      	nop
  40193c:	2040025c 	.word	0x2040025c
  401940:	00400b75 	.word	0x00400b75

00401944 <stdio_io_write>:

int32_t stdio_io_write(const uint8_t *buf, const int32_t len)
{
  401944:	b508      	push	{r3, lr}
	if (stdio_io == NULL) {
  401946:	4b06      	ldr	r3, [pc, #24]	; (401960 <stdio_io_write+0x1c>)
  401948:	681b      	ldr	r3, [r3, #0]
  40194a:	b133      	cbz	r3, 40195a <stdio_io_write+0x16>
  40194c:	460a      	mov	r2, r1
  40194e:	4601      	mov	r1, r0
		return 0;
	}
	return io_write(stdio_io, buf, len);
  401950:	b292      	uxth	r2, r2
  401952:	4618      	mov	r0, r3
  401954:	4b03      	ldr	r3, [pc, #12]	; (401964 <stdio_io_write+0x20>)
  401956:	4798      	blx	r3
  401958:	bd08      	pop	{r3, pc}
		return 0;
  40195a:	2000      	movs	r0, #0
}
  40195c:	bd08      	pop	{r3, pc}
  40195e:	bf00      	nop
  401960:	2040025c 	.word	0x2040025c
  401964:	00400b45 	.word	0x00400b45

00401968 <stdio_redirect_init>:
	/* Print welcome message */
	printf("\r\nHello ATMEL World!\r\n");
}

void stdio_redirect_init(void)
{
  401968:	b510      	push	{r4, lr}

	usart_sync_enable(&EDBG_COM);
  40196a:	4c04      	ldr	r4, [pc, #16]	; (40197c <stdio_redirect_init+0x14>)
  40196c:	4620      	mov	r0, r4
  40196e:	4b04      	ldr	r3, [pc, #16]	; (401980 <stdio_redirect_init+0x18>)
  401970:	4798      	blx	r3
	stdio_io_init(&EDBG_COM.io);
  401972:	4620      	mov	r0, r4
  401974:	4b03      	ldr	r3, [pc, #12]	; (401984 <stdio_redirect_init+0x1c>)
  401976:	4798      	blx	r3
  401978:	bd10      	pop	{r4, pc}
  40197a:	bf00      	nop
  40197c:	204002ac 	.word	0x204002ac
  401980:	00400d81 	.word	0x00400d81
  401984:	004018f5 	.word	0x004018f5

00401988 <sin>:
  401988:	b530      	push	{r4, r5, lr}
  40198a:	4a1f      	ldr	r2, [pc, #124]	; (401a08 <sin+0x80>)
  40198c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  401990:	4293      	cmp	r3, r2
  401992:	b087      	sub	sp, #28
  401994:	dd1b      	ble.n	4019ce <sin+0x46>
  401996:	4a1d      	ldr	r2, [pc, #116]	; (401a0c <sin+0x84>)
  401998:	4293      	cmp	r3, r2
  40199a:	dd05      	ble.n	4019a8 <sin+0x20>
  40199c:	4602      	mov	r2, r0
  40199e:	460b      	mov	r3, r1
  4019a0:	f001 f998 	bl	402cd4 <__aeabi_dsub>
  4019a4:	b007      	add	sp, #28
  4019a6:	bd30      	pop	{r4, r5, pc}
  4019a8:	aa02      	add	r2, sp, #8
  4019aa:	f000 f831 	bl	401a10 <__ieee754_rem_pio2>
  4019ae:	f000 0003 	and.w	r0, r0, #3
  4019b2:	2801      	cmp	r0, #1
  4019b4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  4019b8:	d01a      	beq.n	4019f0 <sin+0x68>
  4019ba:	2802      	cmp	r0, #2
  4019bc:	d00f      	beq.n	4019de <sin+0x56>
  4019be:	b1e0      	cbz	r0, 4019fa <sin+0x72>
  4019c0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4019c4:	f000 fa48 	bl	401e58 <__kernel_cos>
  4019c8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  4019cc:	e7ea      	b.n	4019a4 <sin+0x1c>
  4019ce:	2300      	movs	r3, #0
  4019d0:	9300      	str	r3, [sp, #0]
  4019d2:	2200      	movs	r2, #0
  4019d4:	2300      	movs	r3, #0
  4019d6:	f000 ffab 	bl	402930 <__kernel_sin>
  4019da:	b007      	add	sp, #28
  4019dc:	bd30      	pop	{r4, r5, pc}
  4019de:	2401      	movs	r4, #1
  4019e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4019e4:	9400      	str	r4, [sp, #0]
  4019e6:	f000 ffa3 	bl	402930 <__kernel_sin>
  4019ea:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  4019ee:	e7d9      	b.n	4019a4 <sin+0x1c>
  4019f0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4019f4:	f000 fa30 	bl	401e58 <__kernel_cos>
  4019f8:	e7d4      	b.n	4019a4 <sin+0x1c>
  4019fa:	2401      	movs	r4, #1
  4019fc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401a00:	9400      	str	r4, [sp, #0]
  401a02:	f000 ff95 	bl	402930 <__kernel_sin>
  401a06:	e7cd      	b.n	4019a4 <sin+0x1c>
  401a08:	3fe921fb 	.word	0x3fe921fb
  401a0c:	7fefffff 	.word	0x7fefffff

00401a10 <__ieee754_rem_pio2>:
  401a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401a14:	4e9a      	ldr	r6, [pc, #616]	; (401c80 <__ieee754_rem_pio2+0x270>)
  401a16:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
  401a1a:	42b7      	cmp	r7, r6
  401a1c:	b091      	sub	sp, #68	; 0x44
  401a1e:	f340 808e 	ble.w	401b3e <__ieee754_rem_pio2+0x12e>
  401a22:	4692      	mov	sl, r2
  401a24:	4a97      	ldr	r2, [pc, #604]	; (401c84 <__ieee754_rem_pio2+0x274>)
  401a26:	4297      	cmp	r7, r2
  401a28:	460c      	mov	r4, r1
  401a2a:	dc26      	bgt.n	401a7a <__ieee754_rem_pio2+0x6a>
  401a2c:	2900      	cmp	r1, #0
  401a2e:	a38a      	add	r3, pc, #552	; (adr r3, 401c58 <__ieee754_rem_pio2+0x248>)
  401a30:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a34:	f340 81b4 	ble.w	401da0 <__ieee754_rem_pio2+0x390>
  401a38:	f001 f94c 	bl	402cd4 <__aeabi_dsub>
  401a3c:	4b92      	ldr	r3, [pc, #584]	; (401c88 <__ieee754_rem_pio2+0x278>)
  401a3e:	429f      	cmp	r7, r3
  401a40:	4604      	mov	r4, r0
  401a42:	460d      	mov	r5, r1
  401a44:	f000 8090 	beq.w	401b68 <__ieee754_rem_pio2+0x158>
  401a48:	a385      	add	r3, pc, #532	; (adr r3, 401c60 <__ieee754_rem_pio2+0x250>)
  401a4a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a4e:	f001 f941 	bl	402cd4 <__aeabi_dsub>
  401a52:	4602      	mov	r2, r0
  401a54:	460b      	mov	r3, r1
  401a56:	e9ca 2300 	strd	r2, r3, [sl]
  401a5a:	4620      	mov	r0, r4
  401a5c:	4629      	mov	r1, r5
  401a5e:	f001 f939 	bl	402cd4 <__aeabi_dsub>
  401a62:	a37f      	add	r3, pc, #508	; (adr r3, 401c60 <__ieee754_rem_pio2+0x250>)
  401a64:	e9d3 2300 	ldrd	r2, r3, [r3]
  401a68:	f001 f934 	bl	402cd4 <__aeabi_dsub>
  401a6c:	2501      	movs	r5, #1
  401a6e:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401a72:	4628      	mov	r0, r5
  401a74:	b011      	add	sp, #68	; 0x44
  401a76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401a7a:	4a84      	ldr	r2, [pc, #528]	; (401c8c <__ieee754_rem_pio2+0x27c>)
  401a7c:	4297      	cmp	r7, r2
  401a7e:	f340 8090 	ble.w	401ba2 <__ieee754_rem_pio2+0x192>
  401a82:	4a83      	ldr	r2, [pc, #524]	; (401c90 <__ieee754_rem_pio2+0x280>)
  401a84:	4297      	cmp	r7, r2
  401a86:	dc65      	bgt.n	401b54 <__ieee754_rem_pio2+0x144>
  401a88:	153d      	asrs	r5, r7, #20
  401a8a:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
  401a8e:	eba7 5305 	sub.w	r3, r7, r5, lsl #20
  401a92:	4619      	mov	r1, r3
  401a94:	461f      	mov	r7, r3
  401a96:	4606      	mov	r6, r0
  401a98:	f001 fd6a 	bl	403570 <__aeabi_d2iz>
  401a9c:	f001 fa68 	bl	402f70 <__aeabi_i2d>
  401aa0:	4680      	mov	r8, r0
  401aa2:	4689      	mov	r9, r1
  401aa4:	4602      	mov	r2, r0
  401aa6:	460b      	mov	r3, r1
  401aa8:	4630      	mov	r0, r6
  401aaa:	4639      	mov	r1, r7
  401aac:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
  401ab0:	f001 f910 	bl	402cd4 <__aeabi_dsub>
  401ab4:	2200      	movs	r2, #0
  401ab6:	4b77      	ldr	r3, [pc, #476]	; (401c94 <__ieee754_rem_pio2+0x284>)
  401ab8:	f001 fac0 	bl	40303c <__aeabi_dmul>
  401abc:	4689      	mov	r9, r1
  401abe:	4680      	mov	r8, r0
  401ac0:	f001 fd56 	bl	403570 <__aeabi_d2iz>
  401ac4:	f001 fa54 	bl	402f70 <__aeabi_i2d>
  401ac8:	4602      	mov	r2, r0
  401aca:	460b      	mov	r3, r1
  401acc:	4606      	mov	r6, r0
  401ace:	460f      	mov	r7, r1
  401ad0:	4640      	mov	r0, r8
  401ad2:	4649      	mov	r1, r9
  401ad4:	e9cd 670c 	strd	r6, r7, [sp, #48]	; 0x30
  401ad8:	f001 f8fc 	bl	402cd4 <__aeabi_dsub>
  401adc:	2200      	movs	r2, #0
  401ade:	4b6d      	ldr	r3, [pc, #436]	; (401c94 <__ieee754_rem_pio2+0x284>)
  401ae0:	f001 faac 	bl	40303c <__aeabi_dmul>
  401ae4:	2200      	movs	r2, #0
  401ae6:	2300      	movs	r3, #0
  401ae8:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  401aec:	f001 fd0e 	bl	40350c <__aeabi_dcmpeq>
  401af0:	2800      	cmp	r0, #0
  401af2:	f000 8173 	beq.w	401ddc <__ieee754_rem_pio2+0x3cc>
  401af6:	2300      	movs	r3, #0
  401af8:	4630      	mov	r0, r6
  401afa:	4639      	mov	r1, r7
  401afc:	2200      	movs	r2, #0
  401afe:	f001 fd05 	bl	40350c <__aeabi_dcmpeq>
  401b02:	2800      	cmp	r0, #0
  401b04:	bf14      	ite	ne
  401b06:	2301      	movne	r3, #1
  401b08:	2302      	moveq	r3, #2
  401b0a:	4a63      	ldr	r2, [pc, #396]	; (401c98 <__ieee754_rem_pio2+0x288>)
  401b0c:	9201      	str	r2, [sp, #4]
  401b0e:	2102      	movs	r1, #2
  401b10:	462a      	mov	r2, r5
  401b12:	9100      	str	r1, [sp, #0]
  401b14:	a80a      	add	r0, sp, #40	; 0x28
  401b16:	4651      	mov	r1, sl
  401b18:	f000 fac2 	bl	4020a0 <__kernel_rem_pio2>
  401b1c:	2c00      	cmp	r4, #0
  401b1e:	4605      	mov	r5, r0
  401b20:	da14      	bge.n	401b4c <__ieee754_rem_pio2+0x13c>
  401b22:	f8da 2004 	ldr.w	r2, [sl, #4]
  401b26:	f8da 300c 	ldr.w	r3, [sl, #12]
  401b2a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  401b2e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  401b32:	4245      	negs	r5, r0
  401b34:	f8ca 2004 	str.w	r2, [sl, #4]
  401b38:	f8ca 300c 	str.w	r3, [sl, #12]
  401b3c:	e006      	b.n	401b4c <__ieee754_rem_pio2+0x13c>
  401b3e:	e9c2 0100 	strd	r0, r1, [r2]
  401b42:	2500      	movs	r5, #0
  401b44:	2400      	movs	r4, #0
  401b46:	e9c2 4502 	strd	r4, r5, [r2, #8]
  401b4a:	2500      	movs	r5, #0
  401b4c:	4628      	mov	r0, r5
  401b4e:	b011      	add	sp, #68	; 0x44
  401b50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401b54:	4602      	mov	r2, r0
  401b56:	460b      	mov	r3, r1
  401b58:	f001 f8bc 	bl	402cd4 <__aeabi_dsub>
  401b5c:	2500      	movs	r5, #0
  401b5e:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401b62:	e9ca 0100 	strd	r0, r1, [sl]
  401b66:	e7f1      	b.n	401b4c <__ieee754_rem_pio2+0x13c>
  401b68:	a33f      	add	r3, pc, #252	; (adr r3, 401c68 <__ieee754_rem_pio2+0x258>)
  401b6a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b6e:	f001 f8b1 	bl	402cd4 <__aeabi_dsub>
  401b72:	a33f      	add	r3, pc, #252	; (adr r3, 401c70 <__ieee754_rem_pio2+0x260>)
  401b74:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b78:	460d      	mov	r5, r1
  401b7a:	4604      	mov	r4, r0
  401b7c:	f001 f8aa 	bl	402cd4 <__aeabi_dsub>
  401b80:	4602      	mov	r2, r0
  401b82:	460b      	mov	r3, r1
  401b84:	e9ca 2300 	strd	r2, r3, [sl]
  401b88:	4629      	mov	r1, r5
  401b8a:	4620      	mov	r0, r4
  401b8c:	f001 f8a2 	bl	402cd4 <__aeabi_dsub>
  401b90:	a337      	add	r3, pc, #220	; (adr r3, 401c70 <__ieee754_rem_pio2+0x260>)
  401b92:	e9d3 2300 	ldrd	r2, r3, [r3]
  401b96:	f001 f89d 	bl	402cd4 <__aeabi_dsub>
  401b9a:	2501      	movs	r5, #1
  401b9c:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401ba0:	e7d4      	b.n	401b4c <__ieee754_rem_pio2+0x13c>
  401ba2:	f000 ff7b 	bl	402a9c <fabs>
  401ba6:	a334      	add	r3, pc, #208	; (adr r3, 401c78 <__ieee754_rem_pio2+0x268>)
  401ba8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401bac:	4680      	mov	r8, r0
  401bae:	4689      	mov	r9, r1
  401bb0:	f001 fa44 	bl	40303c <__aeabi_dmul>
  401bb4:	2200      	movs	r2, #0
  401bb6:	4b39      	ldr	r3, [pc, #228]	; (401c9c <__ieee754_rem_pio2+0x28c>)
  401bb8:	f001 f88e 	bl	402cd8 <__adddf3>
  401bbc:	f001 fcd8 	bl	403570 <__aeabi_d2iz>
  401bc0:	4605      	mov	r5, r0
  401bc2:	f001 f9d5 	bl	402f70 <__aeabi_i2d>
  401bc6:	a324      	add	r3, pc, #144	; (adr r3, 401c58 <__ieee754_rem_pio2+0x248>)
  401bc8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401bcc:	e9cd 0104 	strd	r0, r1, [sp, #16]
  401bd0:	f001 fa34 	bl	40303c <__aeabi_dmul>
  401bd4:	4602      	mov	r2, r0
  401bd6:	460b      	mov	r3, r1
  401bd8:	4640      	mov	r0, r8
  401bda:	4649      	mov	r1, r9
  401bdc:	f001 f87a 	bl	402cd4 <__aeabi_dsub>
  401be0:	a31f      	add	r3, pc, #124	; (adr r3, 401c60 <__ieee754_rem_pio2+0x250>)
  401be2:	e9d3 2300 	ldrd	r2, r3, [r3]
  401be6:	4680      	mov	r8, r0
  401be8:	4689      	mov	r9, r1
  401bea:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401bee:	f001 fa25 	bl	40303c <__aeabi_dmul>
  401bf2:	2d1f      	cmp	r5, #31
  401bf4:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401bf8:	dc54      	bgt.n	401ca4 <__ieee754_rem_pio2+0x294>
  401bfa:	4b29      	ldr	r3, [pc, #164]	; (401ca0 <__ieee754_rem_pio2+0x290>)
  401bfc:	1e6a      	subs	r2, r5, #1
  401bfe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  401c02:	429f      	cmp	r7, r3
  401c04:	d04e      	beq.n	401ca4 <__ieee754_rem_pio2+0x294>
  401c06:	4602      	mov	r2, r0
  401c08:	460b      	mov	r3, r1
  401c0a:	4640      	mov	r0, r8
  401c0c:	4649      	mov	r1, r9
  401c0e:	f001 f861 	bl	402cd4 <__aeabi_dsub>
  401c12:	4602      	mov	r2, r0
  401c14:	460b      	mov	r3, r1
  401c16:	e9ca 2300 	strd	r2, r3, [sl]
  401c1a:	4683      	mov	fp, r0
  401c1c:	460e      	mov	r6, r1
  401c1e:	465a      	mov	r2, fp
  401c20:	4633      	mov	r3, r6
  401c22:	4640      	mov	r0, r8
  401c24:	4649      	mov	r1, r9
  401c26:	f001 f855 	bl	402cd4 <__aeabi_dsub>
  401c2a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401c2e:	f001 f851 	bl	402cd4 <__aeabi_dsub>
  401c32:	2c00      	cmp	r4, #0
  401c34:	4602      	mov	r2, r0
  401c36:	460b      	mov	r3, r1
  401c38:	e9ca 2302 	strd	r2, r3, [sl, #8]
  401c3c:	da86      	bge.n	401b4c <__ieee754_rem_pio2+0x13c>
  401c3e:	465b      	mov	r3, fp
  401c40:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
  401c44:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  401c48:	e88a 0048 	stmia.w	sl, {r3, r6}
  401c4c:	f8ca 100c 	str.w	r1, [sl, #12]
  401c50:	f8ca 0008 	str.w	r0, [sl, #8]
  401c54:	426d      	negs	r5, r5
  401c56:	e779      	b.n	401b4c <__ieee754_rem_pio2+0x13c>
  401c58:	54400000 	.word	0x54400000
  401c5c:	3ff921fb 	.word	0x3ff921fb
  401c60:	1a626331 	.word	0x1a626331
  401c64:	3dd0b461 	.word	0x3dd0b461
  401c68:	1a600000 	.word	0x1a600000
  401c6c:	3dd0b461 	.word	0x3dd0b461
  401c70:	2e037073 	.word	0x2e037073
  401c74:	3ba3198a 	.word	0x3ba3198a
  401c78:	6dc9c883 	.word	0x6dc9c883
  401c7c:	3fe45f30 	.word	0x3fe45f30
  401c80:	3fe921fb 	.word	0x3fe921fb
  401c84:	4002d97b 	.word	0x4002d97b
  401c88:	3ff921fb 	.word	0x3ff921fb
  401c8c:	413921fb 	.word	0x413921fb
  401c90:	7fefffff 	.word	0x7fefffff
  401c94:	41700000 	.word	0x41700000
  401c98:	004063a0 	.word	0x004063a0
  401c9c:	3fe00000 	.word	0x3fe00000
  401ca0:	00406320 	.word	0x00406320
  401ca4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  401ca8:	4640      	mov	r0, r8
  401caa:	4649      	mov	r1, r9
  401cac:	f001 f812 	bl	402cd4 <__aeabi_dsub>
  401cb0:	153a      	asrs	r2, r7, #20
  401cb2:	f3c1 530a 	ubfx	r3, r1, #20, #11
  401cb6:	1ad3      	subs	r3, r2, r3
  401cb8:	2b10      	cmp	r3, #16
  401cba:	4683      	mov	fp, r0
  401cbc:	460e      	mov	r6, r1
  401cbe:	9209      	str	r2, [sp, #36]	; 0x24
  401cc0:	e9ca 0100 	strd	r0, r1, [sl]
  401cc4:	ddab      	ble.n	401c1e <__ieee754_rem_pio2+0x20e>
  401cc6:	a358      	add	r3, pc, #352	; (adr r3, 401e28 <__ieee754_rem_pio2+0x418>)
  401cc8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ccc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401cd0:	f001 f9b4 	bl	40303c <__aeabi_dmul>
  401cd4:	4606      	mov	r6, r0
  401cd6:	460f      	mov	r7, r1
  401cd8:	4602      	mov	r2, r0
  401cda:	460b      	mov	r3, r1
  401cdc:	4640      	mov	r0, r8
  401cde:	4649      	mov	r1, r9
  401ce0:	f000 fff8 	bl	402cd4 <__aeabi_dsub>
  401ce4:	e9cd 0106 	strd	r0, r1, [sp, #24]
  401ce8:	4602      	mov	r2, r0
  401cea:	460b      	mov	r3, r1
  401cec:	4640      	mov	r0, r8
  401cee:	4649      	mov	r1, r9
  401cf0:	f000 fff0 	bl	402cd4 <__aeabi_dsub>
  401cf4:	4632      	mov	r2, r6
  401cf6:	463b      	mov	r3, r7
  401cf8:	f000 ffec 	bl	402cd4 <__aeabi_dsub>
  401cfc:	a34c      	add	r3, pc, #304	; (adr r3, 401e30 <__ieee754_rem_pio2+0x420>)
  401cfe:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d02:	4606      	mov	r6, r0
  401d04:	460f      	mov	r7, r1
  401d06:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401d0a:	f001 f997 	bl	40303c <__aeabi_dmul>
  401d0e:	4632      	mov	r2, r6
  401d10:	463b      	mov	r3, r7
  401d12:	f000 ffdf 	bl	402cd4 <__aeabi_dsub>
  401d16:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  401d1a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401d1e:	4602      	mov	r2, r0
  401d20:	460b      	mov	r3, r1
  401d22:	4640      	mov	r0, r8
  401d24:	4649      	mov	r1, r9
  401d26:	f000 ffd5 	bl	402cd4 <__aeabi_dsub>
  401d2a:	460b      	mov	r3, r1
  401d2c:	f3c1 570a 	ubfx	r7, r1, #20, #11
  401d30:	460e      	mov	r6, r1
  401d32:	9909      	ldr	r1, [sp, #36]	; 0x24
  401d34:	1bcf      	subs	r7, r1, r7
  401d36:	4602      	mov	r2, r0
  401d38:	2f31      	cmp	r7, #49	; 0x31
  401d3a:	4683      	mov	fp, r0
  401d3c:	e9ca 2300 	strd	r2, r3, [sl]
  401d40:	dd6c      	ble.n	401e1c <__ieee754_rem_pio2+0x40c>
  401d42:	a33d      	add	r3, pc, #244	; (adr r3, 401e38 <__ieee754_rem_pio2+0x428>)
  401d44:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d48:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401d4c:	f001 f976 	bl	40303c <__aeabi_dmul>
  401d50:	4606      	mov	r6, r0
  401d52:	460f      	mov	r7, r1
  401d54:	4602      	mov	r2, r0
  401d56:	460b      	mov	r3, r1
  401d58:	4640      	mov	r0, r8
  401d5a:	4649      	mov	r1, r9
  401d5c:	e9cd 8906 	strd	r8, r9, [sp, #24]
  401d60:	f000 ffb8 	bl	402cd4 <__aeabi_dsub>
  401d64:	4602      	mov	r2, r0
  401d66:	460b      	mov	r3, r1
  401d68:	4680      	mov	r8, r0
  401d6a:	4689      	mov	r9, r1
  401d6c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  401d70:	f000 ffb0 	bl	402cd4 <__aeabi_dsub>
  401d74:	4632      	mov	r2, r6
  401d76:	463b      	mov	r3, r7
  401d78:	f000 ffac 	bl	402cd4 <__aeabi_dsub>
  401d7c:	a330      	add	r3, pc, #192	; (adr r3, 401e40 <__ieee754_rem_pio2+0x430>)
  401d7e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401d82:	4606      	mov	r6, r0
  401d84:	460f      	mov	r7, r1
  401d86:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  401d8a:	f001 f957 	bl	40303c <__aeabi_dmul>
  401d8e:	4632      	mov	r2, r6
  401d90:	463b      	mov	r3, r7
  401d92:	f000 ff9f 	bl	402cd4 <__aeabi_dsub>
  401d96:	4602      	mov	r2, r0
  401d98:	460b      	mov	r3, r1
  401d9a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  401d9e:	e734      	b.n	401c0a <__ieee754_rem_pio2+0x1fa>
  401da0:	f000 ff9a 	bl	402cd8 <__adddf3>
  401da4:	4b2a      	ldr	r3, [pc, #168]	; (401e50 <__ieee754_rem_pio2+0x440>)
  401da6:	429f      	cmp	r7, r3
  401da8:	4604      	mov	r4, r0
  401daa:	460d      	mov	r5, r1
  401dac:	d018      	beq.n	401de0 <__ieee754_rem_pio2+0x3d0>
  401dae:	a326      	add	r3, pc, #152	; (adr r3, 401e48 <__ieee754_rem_pio2+0x438>)
  401db0:	e9d3 2300 	ldrd	r2, r3, [r3]
  401db4:	f000 ff90 	bl	402cd8 <__adddf3>
  401db8:	4602      	mov	r2, r0
  401dba:	460b      	mov	r3, r1
  401dbc:	e9ca 2300 	strd	r2, r3, [sl]
  401dc0:	4629      	mov	r1, r5
  401dc2:	4620      	mov	r0, r4
  401dc4:	f000 ff86 	bl	402cd4 <__aeabi_dsub>
  401dc8:	a31f      	add	r3, pc, #124	; (adr r3, 401e48 <__ieee754_rem_pio2+0x438>)
  401dca:	e9d3 2300 	ldrd	r2, r3, [r3]
  401dce:	f000 ff83 	bl	402cd8 <__adddf3>
  401dd2:	f04f 35ff 	mov.w	r5, #4294967295
  401dd6:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401dda:	e6b7      	b.n	401b4c <__ieee754_rem_pio2+0x13c>
  401ddc:	2303      	movs	r3, #3
  401dde:	e694      	b.n	401b0a <__ieee754_rem_pio2+0xfa>
  401de0:	a311      	add	r3, pc, #68	; (adr r3, 401e28 <__ieee754_rem_pio2+0x418>)
  401de2:	e9d3 2300 	ldrd	r2, r3, [r3]
  401de6:	f000 ff77 	bl	402cd8 <__adddf3>
  401dea:	a311      	add	r3, pc, #68	; (adr r3, 401e30 <__ieee754_rem_pio2+0x420>)
  401dec:	e9d3 2300 	ldrd	r2, r3, [r3]
  401df0:	460d      	mov	r5, r1
  401df2:	4604      	mov	r4, r0
  401df4:	f000 ff70 	bl	402cd8 <__adddf3>
  401df8:	4602      	mov	r2, r0
  401dfa:	460b      	mov	r3, r1
  401dfc:	e9ca 2300 	strd	r2, r3, [sl]
  401e00:	4629      	mov	r1, r5
  401e02:	4620      	mov	r0, r4
  401e04:	f000 ff66 	bl	402cd4 <__aeabi_dsub>
  401e08:	a309      	add	r3, pc, #36	; (adr r3, 401e30 <__ieee754_rem_pio2+0x420>)
  401e0a:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e0e:	f000 ff63 	bl	402cd8 <__adddf3>
  401e12:	f04f 35ff 	mov.w	r5, #4294967295
  401e16:	e9ca 0102 	strd	r0, r1, [sl, #8]
  401e1a:	e697      	b.n	401b4c <__ieee754_rem_pio2+0x13c>
  401e1c:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
  401e20:	e6fd      	b.n	401c1e <__ieee754_rem_pio2+0x20e>
  401e22:	bf00      	nop
  401e24:	f3af 8000 	nop.w
  401e28:	1a600000 	.word	0x1a600000
  401e2c:	3dd0b461 	.word	0x3dd0b461
  401e30:	2e037073 	.word	0x2e037073
  401e34:	3ba3198a 	.word	0x3ba3198a
  401e38:	2e000000 	.word	0x2e000000
  401e3c:	3ba3198a 	.word	0x3ba3198a
  401e40:	252049c1 	.word	0x252049c1
  401e44:	397b839a 	.word	0x397b839a
  401e48:	1a626331 	.word	0x1a626331
  401e4c:	3dd0b461 	.word	0x3dd0b461
  401e50:	3ff921fb 	.word	0x3ff921fb
  401e54:	00000000 	.word	0x00000000

00401e58 <__kernel_cos>:
  401e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401e5c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  401e60:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  401e64:	b085      	sub	sp, #20
  401e66:	460c      	mov	r4, r1
  401e68:	4692      	mov	sl, r2
  401e6a:	469b      	mov	fp, r3
  401e6c:	4605      	mov	r5, r0
  401e6e:	da6b      	bge.n	401f48 <__kernel_cos+0xf0>
  401e70:	f001 fb7e 	bl	403570 <__aeabi_d2iz>
  401e74:	2800      	cmp	r0, #0
  401e76:	f000 80e8 	beq.w	40204a <__kernel_cos+0x1f2>
  401e7a:	462a      	mov	r2, r5
  401e7c:	4623      	mov	r3, r4
  401e7e:	4628      	mov	r0, r5
  401e80:	4621      	mov	r1, r4
  401e82:	f001 f8db 	bl	40303c <__aeabi_dmul>
  401e86:	a374      	add	r3, pc, #464	; (adr r3, 402058 <__kernel_cos+0x200>)
  401e88:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e8c:	4680      	mov	r8, r0
  401e8e:	4689      	mov	r9, r1
  401e90:	f001 f8d4 	bl	40303c <__aeabi_dmul>
  401e94:	a372      	add	r3, pc, #456	; (adr r3, 402060 <__kernel_cos+0x208>)
  401e96:	e9d3 2300 	ldrd	r2, r3, [r3]
  401e9a:	f000 ff1d 	bl	402cd8 <__adddf3>
  401e9e:	4642      	mov	r2, r8
  401ea0:	464b      	mov	r3, r9
  401ea2:	f001 f8cb 	bl	40303c <__aeabi_dmul>
  401ea6:	a370      	add	r3, pc, #448	; (adr r3, 402068 <__kernel_cos+0x210>)
  401ea8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401eac:	f000 ff12 	bl	402cd4 <__aeabi_dsub>
  401eb0:	4642      	mov	r2, r8
  401eb2:	464b      	mov	r3, r9
  401eb4:	f001 f8c2 	bl	40303c <__aeabi_dmul>
  401eb8:	a36d      	add	r3, pc, #436	; (adr r3, 402070 <__kernel_cos+0x218>)
  401eba:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ebe:	f000 ff0b 	bl	402cd8 <__adddf3>
  401ec2:	4642      	mov	r2, r8
  401ec4:	464b      	mov	r3, r9
  401ec6:	f001 f8b9 	bl	40303c <__aeabi_dmul>
  401eca:	a36b      	add	r3, pc, #428	; (adr r3, 402078 <__kernel_cos+0x220>)
  401ecc:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ed0:	f000 ff00 	bl	402cd4 <__aeabi_dsub>
  401ed4:	4642      	mov	r2, r8
  401ed6:	464b      	mov	r3, r9
  401ed8:	f001 f8b0 	bl	40303c <__aeabi_dmul>
  401edc:	a368      	add	r3, pc, #416	; (adr r3, 402080 <__kernel_cos+0x228>)
  401ede:	e9d3 2300 	ldrd	r2, r3, [r3]
  401ee2:	f000 fef9 	bl	402cd8 <__adddf3>
  401ee6:	4642      	mov	r2, r8
  401ee8:	464b      	mov	r3, r9
  401eea:	f001 f8a7 	bl	40303c <__aeabi_dmul>
  401eee:	e9cd 0100 	strd	r0, r1, [sp]
  401ef2:	2200      	movs	r2, #0
  401ef4:	4b64      	ldr	r3, [pc, #400]	; (402088 <__kernel_cos+0x230>)
  401ef6:	4640      	mov	r0, r8
  401ef8:	4649      	mov	r1, r9
  401efa:	f001 f89f 	bl	40303c <__aeabi_dmul>
  401efe:	e9dd 2300 	ldrd	r2, r3, [sp]
  401f02:	4606      	mov	r6, r0
  401f04:	460f      	mov	r7, r1
  401f06:	4640      	mov	r0, r8
  401f08:	4649      	mov	r1, r9
  401f0a:	f001 f897 	bl	40303c <__aeabi_dmul>
  401f0e:	4652      	mov	r2, sl
  401f10:	4680      	mov	r8, r0
  401f12:	4689      	mov	r9, r1
  401f14:	465b      	mov	r3, fp
  401f16:	4628      	mov	r0, r5
  401f18:	4621      	mov	r1, r4
  401f1a:	f001 f88f 	bl	40303c <__aeabi_dmul>
  401f1e:	4602      	mov	r2, r0
  401f20:	460b      	mov	r3, r1
  401f22:	4640      	mov	r0, r8
  401f24:	4649      	mov	r1, r9
  401f26:	f000 fed5 	bl	402cd4 <__aeabi_dsub>
  401f2a:	4602      	mov	r2, r0
  401f2c:	460b      	mov	r3, r1
  401f2e:	4630      	mov	r0, r6
  401f30:	4639      	mov	r1, r7
  401f32:	f000 fecf 	bl	402cd4 <__aeabi_dsub>
  401f36:	4602      	mov	r2, r0
  401f38:	460b      	mov	r3, r1
  401f3a:	2000      	movs	r0, #0
  401f3c:	4953      	ldr	r1, [pc, #332]	; (40208c <__kernel_cos+0x234>)
  401f3e:	f000 fec9 	bl	402cd4 <__aeabi_dsub>
  401f42:	b005      	add	sp, #20
  401f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401f48:	4602      	mov	r2, r0
  401f4a:	460b      	mov	r3, r1
  401f4c:	f001 f876 	bl	40303c <__aeabi_dmul>
  401f50:	a341      	add	r3, pc, #260	; (adr r3, 402058 <__kernel_cos+0x200>)
  401f52:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f56:	4680      	mov	r8, r0
  401f58:	4689      	mov	r9, r1
  401f5a:	f001 f86f 	bl	40303c <__aeabi_dmul>
  401f5e:	a340      	add	r3, pc, #256	; (adr r3, 402060 <__kernel_cos+0x208>)
  401f60:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f64:	f000 feb8 	bl	402cd8 <__adddf3>
  401f68:	4642      	mov	r2, r8
  401f6a:	464b      	mov	r3, r9
  401f6c:	f001 f866 	bl	40303c <__aeabi_dmul>
  401f70:	a33d      	add	r3, pc, #244	; (adr r3, 402068 <__kernel_cos+0x210>)
  401f72:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f76:	f000 fead 	bl	402cd4 <__aeabi_dsub>
  401f7a:	4642      	mov	r2, r8
  401f7c:	464b      	mov	r3, r9
  401f7e:	f001 f85d 	bl	40303c <__aeabi_dmul>
  401f82:	a33b      	add	r3, pc, #236	; (adr r3, 402070 <__kernel_cos+0x218>)
  401f84:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f88:	f000 fea6 	bl	402cd8 <__adddf3>
  401f8c:	4642      	mov	r2, r8
  401f8e:	464b      	mov	r3, r9
  401f90:	f001 f854 	bl	40303c <__aeabi_dmul>
  401f94:	a338      	add	r3, pc, #224	; (adr r3, 402078 <__kernel_cos+0x220>)
  401f96:	e9d3 2300 	ldrd	r2, r3, [r3]
  401f9a:	f000 fe9b 	bl	402cd4 <__aeabi_dsub>
  401f9e:	4642      	mov	r2, r8
  401fa0:	464b      	mov	r3, r9
  401fa2:	f001 f84b 	bl	40303c <__aeabi_dmul>
  401fa6:	a336      	add	r3, pc, #216	; (adr r3, 402080 <__kernel_cos+0x228>)
  401fa8:	e9d3 2300 	ldrd	r2, r3, [r3]
  401fac:	f000 fe94 	bl	402cd8 <__adddf3>
  401fb0:	464b      	mov	r3, r9
  401fb2:	4642      	mov	r2, r8
  401fb4:	f001 f842 	bl	40303c <__aeabi_dmul>
  401fb8:	4b35      	ldr	r3, [pc, #212]	; (402090 <__kernel_cos+0x238>)
  401fba:	429e      	cmp	r6, r3
  401fbc:	e9cd 0100 	strd	r0, r1, [sp]
  401fc0:	dd97      	ble.n	401ef2 <__kernel_cos+0x9a>
  401fc2:	4b34      	ldr	r3, [pc, #208]	; (402094 <__kernel_cos+0x23c>)
  401fc4:	429e      	cmp	r6, r3
  401fc6:	f04f 0200 	mov.w	r2, #0
  401fca:	dc38      	bgt.n	40203e <__kernel_cos+0x1e6>
  401fcc:	f5a6 1300 	sub.w	r3, r6, #2097152	; 0x200000
  401fd0:	2000      	movs	r0, #0
  401fd2:	492e      	ldr	r1, [pc, #184]	; (40208c <__kernel_cos+0x234>)
  401fd4:	4616      	mov	r6, r2
  401fd6:	461f      	mov	r7, r3
  401fd8:	f000 fe7c 	bl	402cd4 <__aeabi_dsub>
  401fdc:	e9cd 0102 	strd	r0, r1, [sp, #8]
  401fe0:	2200      	movs	r2, #0
  401fe2:	4b29      	ldr	r3, [pc, #164]	; (402088 <__kernel_cos+0x230>)
  401fe4:	4640      	mov	r0, r8
  401fe6:	4649      	mov	r1, r9
  401fe8:	f001 f828 	bl	40303c <__aeabi_dmul>
  401fec:	4632      	mov	r2, r6
  401fee:	463b      	mov	r3, r7
  401ff0:	f000 fe70 	bl	402cd4 <__aeabi_dsub>
  401ff4:	e9dd 2300 	ldrd	r2, r3, [sp]
  401ff8:	4606      	mov	r6, r0
  401ffa:	460f      	mov	r7, r1
  401ffc:	4640      	mov	r0, r8
  401ffe:	4649      	mov	r1, r9
  402000:	f001 f81c 	bl	40303c <__aeabi_dmul>
  402004:	4652      	mov	r2, sl
  402006:	4680      	mov	r8, r0
  402008:	4689      	mov	r9, r1
  40200a:	465b      	mov	r3, fp
  40200c:	4628      	mov	r0, r5
  40200e:	4621      	mov	r1, r4
  402010:	f001 f814 	bl	40303c <__aeabi_dmul>
  402014:	4602      	mov	r2, r0
  402016:	460b      	mov	r3, r1
  402018:	4640      	mov	r0, r8
  40201a:	4649      	mov	r1, r9
  40201c:	f000 fe5a 	bl	402cd4 <__aeabi_dsub>
  402020:	4602      	mov	r2, r0
  402022:	460b      	mov	r3, r1
  402024:	4630      	mov	r0, r6
  402026:	4639      	mov	r1, r7
  402028:	f000 fe54 	bl	402cd4 <__aeabi_dsub>
  40202c:	4602      	mov	r2, r0
  40202e:	460b      	mov	r3, r1
  402030:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  402034:	f000 fe4e 	bl	402cd4 <__aeabi_dsub>
  402038:	b005      	add	sp, #20
  40203a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40203e:	4b16      	ldr	r3, [pc, #88]	; (402098 <__kernel_cos+0x240>)
  402040:	4f16      	ldr	r7, [pc, #88]	; (40209c <__kernel_cos+0x244>)
  402042:	e9cd 2302 	strd	r2, r3, [sp, #8]
  402046:	2600      	movs	r6, #0
  402048:	e7ca      	b.n	401fe0 <__kernel_cos+0x188>
  40204a:	4910      	ldr	r1, [pc, #64]	; (40208c <__kernel_cos+0x234>)
  40204c:	2000      	movs	r0, #0
  40204e:	b005      	add	sp, #20
  402050:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402054:	f3af 8000 	nop.w
  402058:	be8838d4 	.word	0xbe8838d4
  40205c:	bda8fae9 	.word	0xbda8fae9
  402060:	bdb4b1c4 	.word	0xbdb4b1c4
  402064:	3e21ee9e 	.word	0x3e21ee9e
  402068:	809c52ad 	.word	0x809c52ad
  40206c:	3e927e4f 	.word	0x3e927e4f
  402070:	19cb1590 	.word	0x19cb1590
  402074:	3efa01a0 	.word	0x3efa01a0
  402078:	16c15177 	.word	0x16c15177
  40207c:	3f56c16c 	.word	0x3f56c16c
  402080:	5555554c 	.word	0x5555554c
  402084:	3fa55555 	.word	0x3fa55555
  402088:	3fe00000 	.word	0x3fe00000
  40208c:	3ff00000 	.word	0x3ff00000
  402090:	3fd33332 	.word	0x3fd33332
  402094:	3fe90000 	.word	0x3fe90000
  402098:	3fe70000 	.word	0x3fe70000
  40209c:	3fd20000 	.word	0x3fd20000

004020a0 <__kernel_rem_pio2>:
  4020a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4020a4:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
  4020a8:	4c9c      	ldr	r4, [pc, #624]	; (40231c <__kernel_rem_pio2+0x27c>)
  4020aa:	9ea2      	ldr	r6, [sp, #648]	; 0x288
  4020ac:	4d9c      	ldr	r5, [pc, #624]	; (402320 <__kernel_rem_pio2+0x280>)
  4020ae:	f854 4026 	ldr.w	r4, [r4, r6, lsl #2]
  4020b2:	9405      	str	r4, [sp, #20]
  4020b4:	4626      	mov	r6, r4
  4020b6:	1ed4      	subs	r4, r2, #3
  4020b8:	fb85 7504 	smull	r7, r5, r5, r4
  4020bc:	17e4      	asrs	r4, r4, #31
  4020be:	ebc4 04a5 	rsb	r4, r4, r5, asr #2
  4020c2:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
  4020c6:	461d      	mov	r5, r3
  4020c8:	9308      	str	r3, [sp, #32]
  4020ca:	1c63      	adds	r3, r4, #1
  4020cc:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
  4020d0:	3d01      	subs	r5, #1
  4020d2:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  4020d6:	9304      	str	r3, [sp, #16]
  4020d8:	462b      	mov	r3, r5
  4020da:	9409      	str	r4, [sp, #36]	; 0x24
  4020dc:	9502      	str	r5, [sp, #8]
  4020de:	1b65      	subs	r5, r4, r5
  4020e0:	18f4      	adds	r4, r6, r3
  4020e2:	9003      	str	r0, [sp, #12]
  4020e4:	9106      	str	r1, [sp, #24]
  4020e6:	d41a      	bmi.n	40211e <__kernel_rem_pio2+0x7e>
  4020e8:	442c      	add	r4, r5
  4020ea:	3401      	adds	r4, #1
  4020ec:	f10d 0878 	add.w	r8, sp, #120	; 0x78
  4020f0:	2600      	movs	r6, #0
  4020f2:	2700      	movs	r7, #0
  4020f4:	f8dd 928c 	ldr.w	r9, [sp, #652]	; 0x28c
  4020f8:	e008      	b.n	40210c <__kernel_rem_pio2+0x6c>
  4020fa:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
  4020fe:	f000 ff37 	bl	402f70 <__aeabi_i2d>
  402102:	3501      	adds	r5, #1
  402104:	42a5      	cmp	r5, r4
  402106:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  40210a:	d008      	beq.n	40211e <__kernel_rem_pio2+0x7e>
  40210c:	2d00      	cmp	r5, #0
  40210e:	daf4      	bge.n	4020fa <__kernel_rem_pio2+0x5a>
  402110:	3501      	adds	r5, #1
  402112:	4630      	mov	r0, r6
  402114:	4639      	mov	r1, r7
  402116:	42a5      	cmp	r5, r4
  402118:	e9e8 0102 	strd	r0, r1, [r8, #8]!
  40211c:	d1f6      	bne.n	40210c <__kernel_rem_pio2+0x6c>
  40211e:	9b05      	ldr	r3, [sp, #20]
  402120:	2b00      	cmp	r3, #0
  402122:	db2e      	blt.n	402182 <__kernel_rem_pio2+0xe2>
  402124:	9b08      	ldr	r3, [sp, #32]
  402126:	ea4f 09c3 	mov.w	r9, r3, lsl #3
  40212a:	9b03      	ldr	r3, [sp, #12]
  40212c:	f1a9 0808 	sub.w	r8, r9, #8
  402130:	4498      	add	r8, r3
  402132:	ab20      	add	r3, sp, #128	; 0x80
  402134:	4499      	add	r9, r3
  402136:	9b05      	ldr	r3, [sp, #20]
  402138:	aa70      	add	r2, sp, #448	; 0x1c0
  40213a:	eb02 0bc3 	add.w	fp, r2, r3, lsl #3
  40213e:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  402142:	9b02      	ldr	r3, [sp, #8]
  402144:	2b00      	cmp	r3, #0
  402146:	f2c0 830f 	blt.w	402768 <__kernel_rem_pio2+0x6c8>
  40214a:	9b03      	ldr	r3, [sp, #12]
  40214c:	464d      	mov	r5, r9
  40214e:	f1a3 0408 	sub.w	r4, r3, #8
  402152:	2600      	movs	r6, #0
  402154:	2700      	movs	r7, #0
  402156:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  40215a:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  40215e:	f000 ff6d 	bl	40303c <__aeabi_dmul>
  402162:	4602      	mov	r2, r0
  402164:	460b      	mov	r3, r1
  402166:	4630      	mov	r0, r6
  402168:	4639      	mov	r1, r7
  40216a:	f000 fdb5 	bl	402cd8 <__adddf3>
  40216e:	4544      	cmp	r4, r8
  402170:	4606      	mov	r6, r0
  402172:	460f      	mov	r7, r1
  402174:	d1ef      	bne.n	402156 <__kernel_rem_pio2+0xb6>
  402176:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  40217a:	45da      	cmp	sl, fp
  40217c:	f109 0908 	add.w	r9, r9, #8
  402180:	d1df      	bne.n	402142 <__kernel_rem_pio2+0xa2>
  402182:	9805      	ldr	r0, [sp, #20]
  402184:	9a08      	ldr	r2, [sp, #32]
  402186:	9000      	str	r0, [sp, #0]
  402188:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  40218c:	3b01      	subs	r3, #1
  40218e:	009b      	lsls	r3, r3, #2
  402190:	ac0c      	add	r4, sp, #48	; 0x30
  402192:	1f19      	subs	r1, r3, #4
  402194:	4423      	add	r3, r4
  402196:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
  40219a:	930b      	str	r3, [sp, #44]	; 0x2c
  40219c:	9b03      	ldr	r3, [sp, #12]
  40219e:	3a01      	subs	r2, #1
  4021a0:	4421      	add	r1, r4
  4021a2:	910a      	str	r1, [sp, #40]	; 0x28
  4021a4:	eb03 0bc2 	add.w	fp, r3, r2, lsl #3
  4021a8:	9a00      	ldr	r2, [sp, #0]
  4021aa:	a998      	add	r1, sp, #608	; 0x260
  4021ac:	eb01 03c2 	add.w	r3, r1, r2, lsl #3
  4021b0:	2a00      	cmp	r2, #0
  4021b2:	e953 4528 	ldrd	r4, r5, [r3, #-160]	; 0xa0
  4021b6:	4613      	mov	r3, r2
  4021b8:	dd2b      	ble.n	402212 <__kernel_rem_pio2+0x172>
  4021ba:	eb01 08c3 	add.w	r8, r1, r3, lsl #3
  4021be:	f1a8 08a8 	sub.w	r8, r8, #168	; 0xa8
  4021c2:	f10d 092c 	add.w	r9, sp, #44	; 0x2c
  4021c6:	f50d 7adc 	add.w	sl, sp, #440	; 0x1b8
  4021ca:	2200      	movs	r2, #0
  4021cc:	4b55      	ldr	r3, [pc, #340]	; (402324 <__kernel_rem_pio2+0x284>)
  4021ce:	4620      	mov	r0, r4
  4021d0:	4629      	mov	r1, r5
  4021d2:	f000 ff33 	bl	40303c <__aeabi_dmul>
  4021d6:	f001 f9cb 	bl	403570 <__aeabi_d2iz>
  4021da:	f000 fec9 	bl	402f70 <__aeabi_i2d>
  4021de:	2200      	movs	r2, #0
  4021e0:	4b51      	ldr	r3, [pc, #324]	; (402328 <__kernel_rem_pio2+0x288>)
  4021e2:	4606      	mov	r6, r0
  4021e4:	460f      	mov	r7, r1
  4021e6:	f000 ff29 	bl	40303c <__aeabi_dmul>
  4021ea:	4602      	mov	r2, r0
  4021ec:	460b      	mov	r3, r1
  4021ee:	4620      	mov	r0, r4
  4021f0:	4629      	mov	r1, r5
  4021f2:	f000 fd6f 	bl	402cd4 <__aeabi_dsub>
  4021f6:	f001 f9bb 	bl	403570 <__aeabi_d2iz>
  4021fa:	e878 2302 	ldrd	r2, r3, [r8], #-8
  4021fe:	f849 0f04 	str.w	r0, [r9, #4]!
  402202:	4639      	mov	r1, r7
  402204:	4630      	mov	r0, r6
  402206:	f000 fd67 	bl	402cd8 <__adddf3>
  40220a:	45d0      	cmp	r8, sl
  40220c:	4604      	mov	r4, r0
  40220e:	460d      	mov	r5, r1
  402210:	d1db      	bne.n	4021ca <__kernel_rem_pio2+0x12a>
  402212:	f8dd 9010 	ldr.w	r9, [sp, #16]
  402216:	4620      	mov	r0, r4
  402218:	4629      	mov	r1, r5
  40221a:	464a      	mov	r2, r9
  40221c:	f000 fcd0 	bl	402bc0 <scalbn>
  402220:	2200      	movs	r2, #0
  402222:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
  402226:	4604      	mov	r4, r0
  402228:	460d      	mov	r5, r1
  40222a:	f000 ff07 	bl	40303c <__aeabi_dmul>
  40222e:	f000 fc3b 	bl	402aa8 <floor>
  402232:	2200      	movs	r2, #0
  402234:	4b3d      	ldr	r3, [pc, #244]	; (40232c <__kernel_rem_pio2+0x28c>)
  402236:	f000 ff01 	bl	40303c <__aeabi_dmul>
  40223a:	4602      	mov	r2, r0
  40223c:	460b      	mov	r3, r1
  40223e:	4620      	mov	r0, r4
  402240:	4629      	mov	r1, r5
  402242:	f000 fd47 	bl	402cd4 <__aeabi_dsub>
  402246:	460d      	mov	r5, r1
  402248:	4604      	mov	r4, r0
  40224a:	f001 f991 	bl	403570 <__aeabi_d2iz>
  40224e:	4680      	mov	r8, r0
  402250:	f000 fe8e 	bl	402f70 <__aeabi_i2d>
  402254:	460b      	mov	r3, r1
  402256:	4602      	mov	r2, r0
  402258:	4629      	mov	r1, r5
  40225a:	4620      	mov	r0, r4
  40225c:	f000 fd3a 	bl	402cd4 <__aeabi_dsub>
  402260:	464b      	mov	r3, r9
  402262:	2b00      	cmp	r3, #0
  402264:	4606      	mov	r6, r0
  402266:	460f      	mov	r7, r1
  402268:	f340 80f7 	ble.w	40245a <__kernel_rem_pio2+0x3ba>
  40226c:	9a00      	ldr	r2, [sp, #0]
  40226e:	a90c      	add	r1, sp, #48	; 0x30
  402270:	3a01      	subs	r2, #1
  402272:	f1c9 0318 	rsb	r3, r9, #24
  402276:	f851 5022 	ldr.w	r5, [r1, r2, lsl #2]
  40227a:	fa45 f103 	asr.w	r1, r5, r3
  40227e:	fa01 f303 	lsl.w	r3, r1, r3
  402282:	a80c      	add	r0, sp, #48	; 0x30
  402284:	1aeb      	subs	r3, r5, r3
  402286:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
  40228a:	f1c9 0517 	rsb	r5, r9, #23
  40228e:	4488      	add	r8, r1
  402290:	fa43 f505 	asr.w	r5, r3, r5
  402294:	2d00      	cmp	r5, #0
  402296:	dd63      	ble.n	402360 <__kernel_rem_pio2+0x2c0>
  402298:	9b00      	ldr	r3, [sp, #0]
  40229a:	2b00      	cmp	r3, #0
  40229c:	f108 0801 	add.w	r8, r8, #1
  4022a0:	f340 8281 	ble.w	4027a6 <__kernel_rem_pio2+0x706>
  4022a4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4022a6:	2c00      	cmp	r4, #0
  4022a8:	f000 8318 	beq.w	4028dc <__kernel_rem_pio2+0x83c>
  4022ac:	2001      	movs	r0, #1
  4022ae:	2300      	movs	r3, #0
  4022b0:	aa0c      	add	r2, sp, #48	; 0x30
  4022b2:	f1c4 7480 	rsb	r4, r4, #16777216	; 0x1000000
  4022b6:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
  4022ba:	9a00      	ldr	r2, [sp, #0]
  4022bc:	4282      	cmp	r2, r0
  4022be:	dd19      	ble.n	4022f4 <__kernel_rem_pio2+0x254>
  4022c0:	aa0c      	add	r2, sp, #48	; 0x30
  4022c2:	ac0c      	add	r4, sp, #48	; 0x30
  4022c4:	f852 1020 	ldr.w	r1, [r2, r0, lsl #2]
  4022c8:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
  4022cc:	1a51      	subs	r1, r2, r1
  4022ce:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
  4022d2:	9900      	ldr	r1, [sp, #0]
  4022d4:	3302      	adds	r3, #2
  4022d6:	4299      	cmp	r1, r3
  4022d8:	dd0c      	ble.n	4022f4 <__kernel_rem_pio2+0x254>
  4022da:	4610      	mov	r0, r2
  4022dc:	9a00      	ldr	r2, [sp, #0]
  4022de:	a90c      	add	r1, sp, #48	; 0x30
  4022e0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
  4022e4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
  4022e8:	681a      	ldr	r2, [r3, #0]
  4022ea:	1a82      	subs	r2, r0, r2
  4022ec:	f843 2b04 	str.w	r2, [r3], #4
  4022f0:	428b      	cmp	r3, r1
  4022f2:	d1f9      	bne.n	4022e8 <__kernel_rem_pio2+0x248>
  4022f4:	9b04      	ldr	r3, [sp, #16]
  4022f6:	2b00      	cmp	r3, #0
  4022f8:	dd1a      	ble.n	402330 <__kernel_rem_pio2+0x290>
  4022fa:	9b04      	ldr	r3, [sp, #16]
  4022fc:	2b01      	cmp	r3, #1
  4022fe:	f04f 0401 	mov.w	r4, #1
  402302:	f040 8258 	bne.w	4027b6 <__kernel_rem_pio2+0x716>
  402306:	9b00      	ldr	r3, [sp, #0]
  402308:	1e5a      	subs	r2, r3, #1
  40230a:	ab0c      	add	r3, sp, #48	; 0x30
  40230c:	a90c      	add	r1, sp, #48	; 0x30
  40230e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  402312:	f3c3 0316 	ubfx	r3, r3, #0, #23
  402316:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  40231a:	e258      	b.n	4027ce <__kernel_rem_pio2+0x72e>
  40231c:	004064e8 	.word	0x004064e8
  402320:	2aaaaaab 	.word	0x2aaaaaab
  402324:	3e700000 	.word	0x3e700000
  402328:	41700000 	.word	0x41700000
  40232c:	40200000 	.word	0x40200000
  402330:	2d02      	cmp	r5, #2
  402332:	d115      	bne.n	402360 <__kernel_rem_pio2+0x2c0>
  402334:	4632      	mov	r2, r6
  402336:	463b      	mov	r3, r7
  402338:	2000      	movs	r0, #0
  40233a:	4997      	ldr	r1, [pc, #604]	; (402598 <__kernel_rem_pio2+0x4f8>)
  40233c:	f000 fcca 	bl	402cd4 <__aeabi_dsub>
  402340:	4606      	mov	r6, r0
  402342:	460f      	mov	r7, r1
  402344:	9a04      	ldr	r2, [sp, #16]
  402346:	4994      	ldr	r1, [pc, #592]	; (402598 <__kernel_rem_pio2+0x4f8>)
  402348:	2000      	movs	r0, #0
  40234a:	f000 fc39 	bl	402bc0 <scalbn>
  40234e:	4602      	mov	r2, r0
  402350:	460b      	mov	r3, r1
  402352:	4630      	mov	r0, r6
  402354:	4639      	mov	r1, r7
  402356:	f000 fcbd 	bl	402cd4 <__aeabi_dsub>
  40235a:	2502      	movs	r5, #2
  40235c:	4606      	mov	r6, r0
  40235e:	460f      	mov	r7, r1
  402360:	2200      	movs	r2, #0
  402362:	2300      	movs	r3, #0
  402364:	4630      	mov	r0, r6
  402366:	4639      	mov	r1, r7
  402368:	f001 f8d0 	bl	40350c <__aeabi_dcmpeq>
  40236c:	2800      	cmp	r0, #0
  40236e:	f000 8252 	beq.w	402816 <__kernel_rem_pio2+0x776>
  402372:	9a00      	ldr	r2, [sp, #0]
  402374:	9b05      	ldr	r3, [sp, #20]
  402376:	1e50      	subs	r0, r2, #1
  402378:	4283      	cmp	r3, r0
  40237a:	dc0f      	bgt.n	40239c <__kernel_rem_pio2+0x2fc>
  40237c:	f102 4380 	add.w	r3, r2, #1073741824	; 0x40000000
  402380:	3b01      	subs	r3, #1
  402382:	aa0c      	add	r2, sp, #48	; 0x30
  402384:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402386:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  40238a:	2200      	movs	r2, #0
  40238c:	f853 1904 	ldr.w	r1, [r3], #-4
  402390:	42a3      	cmp	r3, r4
  402392:	ea42 0201 	orr.w	r2, r2, r1
  402396:	d1f9      	bne.n	40238c <__kernel_rem_pio2+0x2ec>
  402398:	2a00      	cmp	r2, #0
  40239a:	d16f      	bne.n	40247c <__kernel_rem_pio2+0x3dc>
  40239c:	9b05      	ldr	r3, [sp, #20]
  40239e:	aa0c      	add	r2, sp, #48	; 0x30
  4023a0:	3b01      	subs	r3, #1
  4023a2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
  4023a6:	2b00      	cmp	r3, #0
  4023a8:	f040 8233 	bne.w	402812 <__kernel_rem_pio2+0x772>
  4023ac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4023ae:	2301      	movs	r3, #1
  4023b0:	f852 1904 	ldr.w	r1, [r2], #-4
  4023b4:	3301      	adds	r3, #1
  4023b6:	2900      	cmp	r1, #0
  4023b8:	d0fa      	beq.n	4023b0 <__kernel_rem_pio2+0x310>
  4023ba:	9a00      	ldr	r2, [sp, #0]
  4023bc:	18d3      	adds	r3, r2, r3
  4023be:	f102 0a01 	add.w	sl, r2, #1
  4023c2:	459a      	cmp	sl, r3
  4023c4:	9307      	str	r3, [sp, #28]
  4023c6:	dc3d      	bgt.n	402444 <__kernel_rem_pio2+0x3a4>
  4023c8:	9b00      	ldr	r3, [sp, #0]
  4023ca:	9908      	ldr	r1, [sp, #32]
  4023cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
  4023ce:	440b      	add	r3, r1
  4023d0:	9907      	ldr	r1, [sp, #28]
  4023d2:	eb0a 0802 	add.w	r8, sl, r2
  4023d6:	4699      	mov	r9, r3
  4023d8:	ab20      	add	r3, sp, #128	; 0x80
  4023da:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
  4023de:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
  4023e2:	188b      	adds	r3, r1, r2
  4023e4:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  4023e6:	f108 38ff 	add.w	r8, r8, #4294967295
  4023ea:	eb02 0888 	add.w	r8, r2, r8, lsl #2
  4023ee:	aa70      	add	r2, sp, #448	; 0x1c0
  4023f0:	eb02 0aca 	add.w	sl, r2, sl, lsl #3
  4023f4:	9aa3      	ldr	r2, [sp, #652]	; 0x28c
  4023f6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4023fa:	9300      	str	r3, [sp, #0]
  4023fc:	f858 0f04 	ldr.w	r0, [r8, #4]!
  402400:	f000 fdb6 	bl	402f70 <__aeabi_i2d>
  402404:	9b02      	ldr	r3, [sp, #8]
  402406:	2b00      	cmp	r3, #0
  402408:	e8e9 0102 	strd	r0, r1, [r9], #8
  40240c:	db1d      	blt.n	40244a <__kernel_rem_pio2+0x3aa>
  40240e:	9b03      	ldr	r3, [sp, #12]
  402410:	464d      	mov	r5, r9
  402412:	f1a3 0408 	sub.w	r4, r3, #8
  402416:	2600      	movs	r6, #0
  402418:	2700      	movs	r7, #0
  40241a:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
  40241e:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
  402422:	f000 fe0b 	bl	40303c <__aeabi_dmul>
  402426:	4602      	mov	r2, r0
  402428:	460b      	mov	r3, r1
  40242a:	4630      	mov	r0, r6
  40242c:	4639      	mov	r1, r7
  40242e:	f000 fc53 	bl	402cd8 <__adddf3>
  402432:	455c      	cmp	r4, fp
  402434:	4606      	mov	r6, r0
  402436:	460f      	mov	r7, r1
  402438:	d1ef      	bne.n	40241a <__kernel_rem_pio2+0x37a>
  40243a:	9b00      	ldr	r3, [sp, #0]
  40243c:	4598      	cmp	r8, r3
  40243e:	e8ea 6702 	strd	r6, r7, [sl], #8
  402442:	d1db      	bne.n	4023fc <__kernel_rem_pio2+0x35c>
  402444:	9b07      	ldr	r3, [sp, #28]
  402446:	9300      	str	r3, [sp, #0]
  402448:	e6ae      	b.n	4021a8 <__kernel_rem_pio2+0x108>
  40244a:	9b00      	ldr	r3, [sp, #0]
  40244c:	2600      	movs	r6, #0
  40244e:	2700      	movs	r7, #0
  402450:	4598      	cmp	r8, r3
  402452:	e8ea 6702 	strd	r6, r7, [sl], #8
  402456:	d1d1      	bne.n	4023fc <__kernel_rem_pio2+0x35c>
  402458:	e7f4      	b.n	402444 <__kernel_rem_pio2+0x3a4>
  40245a:	d106      	bne.n	40246a <__kernel_rem_pio2+0x3ca>
  40245c:	9b00      	ldr	r3, [sp, #0]
  40245e:	aa0c      	add	r2, sp, #48	; 0x30
  402460:	3b01      	subs	r3, #1
  402462:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
  402466:	15ed      	asrs	r5, r5, #23
  402468:	e714      	b.n	402294 <__kernel_rem_pio2+0x1f4>
  40246a:	2200      	movs	r2, #0
  40246c:	4b4b      	ldr	r3, [pc, #300]	; (40259c <__kernel_rem_pio2+0x4fc>)
  40246e:	f001 f86b 	bl	403548 <__aeabi_dcmpge>
  402472:	2800      	cmp	r0, #0
  402474:	f040 8182 	bne.w	40277c <__kernel_rem_pio2+0x6dc>
  402478:	4605      	mov	r5, r0
  40247a:	e771      	b.n	402360 <__kernel_rem_pio2+0x2c0>
  40247c:	a90c      	add	r1, sp, #48	; 0x30
  40247e:	9502      	str	r5, [sp, #8]
  402480:	f851 3020 	ldr.w	r3, [r1, r0, lsl #2]
  402484:	9904      	ldr	r1, [sp, #16]
  402486:	f8cd 801c 	str.w	r8, [sp, #28]
  40248a:	3918      	subs	r1, #24
  40248c:	4602      	mov	r2, r0
  40248e:	9000      	str	r0, [sp, #0]
  402490:	9104      	str	r1, [sp, #16]
  402492:	b96b      	cbnz	r3, 4024b0 <__kernel_rem_pio2+0x410>
  402494:	f100 4380 	add.w	r3, r0, #1073741824	; 0x40000000
  402498:	3b01      	subs	r3, #1
  40249a:	a80c      	add	r0, sp, #48	; 0x30
  40249c:	eb00 0383 	add.w	r3, r0, r3, lsl #2
  4024a0:	f853 0904 	ldr.w	r0, [r3], #-4
  4024a4:	3a01      	subs	r2, #1
  4024a6:	3918      	subs	r1, #24
  4024a8:	2800      	cmp	r0, #0
  4024aa:	d0f9      	beq.n	4024a0 <__kernel_rem_pio2+0x400>
  4024ac:	9200      	str	r2, [sp, #0]
  4024ae:	9104      	str	r1, [sp, #16]
  4024b0:	9a04      	ldr	r2, [sp, #16]
  4024b2:	4939      	ldr	r1, [pc, #228]	; (402598 <__kernel_rem_pio2+0x4f8>)
  4024b4:	2000      	movs	r0, #0
  4024b6:	f000 fb83 	bl	402bc0 <scalbn>
  4024ba:	9b00      	ldr	r3, [sp, #0]
  4024bc:	2b00      	cmp	r3, #0
  4024be:	4604      	mov	r4, r0
  4024c0:	460d      	mov	r5, r1
  4024c2:	f2c0 8203 	blt.w	4028cc <__kernel_rem_pio2+0x82c>
  4024c6:	00da      	lsls	r2, r3, #3
  4024c8:	a970      	add	r1, sp, #448	; 0x1c0
  4024ca:	eb01 0b02 	add.w	fp, r1, r2
  4024ce:	9204      	str	r2, [sp, #16]
  4024d0:	aa0c      	add	r2, sp, #48	; 0x30
  4024d2:	eb02 0683 	add.w	r6, r2, r3, lsl #2
  4024d6:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 4025a0 <__kernel_rem_pio2+0x500>
  4024da:	f10b 0708 	add.w	r7, fp, #8
  4024de:	3604      	adds	r6, #4
  4024e0:	f04f 0800 	mov.w	r8, #0
  4024e4:	f856 0d04 	ldr.w	r0, [r6, #-4]!
  4024e8:	f000 fd42 	bl	402f70 <__aeabi_i2d>
  4024ec:	4622      	mov	r2, r4
  4024ee:	462b      	mov	r3, r5
  4024f0:	f000 fda4 	bl	40303c <__aeabi_dmul>
  4024f4:	464b      	mov	r3, r9
  4024f6:	e967 0102 	strd	r0, r1, [r7, #-8]!
  4024fa:	4642      	mov	r2, r8
  4024fc:	4620      	mov	r0, r4
  4024fe:	4629      	mov	r1, r5
  402500:	f000 fd9c 	bl	40303c <__aeabi_dmul>
  402504:	ab0c      	add	r3, sp, #48	; 0x30
  402506:	429e      	cmp	r6, r3
  402508:	4604      	mov	r4, r0
  40250a:	460d      	mov	r5, r1
  40250c:	d1ea      	bne.n	4024e4 <__kernel_rem_pio2+0x444>
  40250e:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  402512:	f8cd a00c 	str.w	sl, [sp, #12]
  402516:	f8dd a014 	ldr.w	sl, [sp, #20]
  40251a:	f04f 0900 	mov.w	r9, #0
  40251e:	f1ba 0f00 	cmp.w	sl, #0
  402522:	f2c0 813d 	blt.w	4027a0 <__kernel_rem_pio2+0x700>
  402526:	f8df 807c 	ldr.w	r8, [pc, #124]	; 4025a4 <__kernel_rem_pio2+0x504>
  40252a:	465d      	mov	r5, fp
  40252c:	a118      	add	r1, pc, #96	; (adr r1, 402590 <__kernel_rem_pio2+0x4f0>)
  40252e:	e9d1 0100 	ldrd	r0, r1, [r1]
  402532:	2600      	movs	r6, #0
  402534:	2700      	movs	r7, #0
  402536:	2400      	movs	r4, #0
  402538:	e003      	b.n	402542 <__kernel_rem_pio2+0x4a2>
  40253a:	454c      	cmp	r4, r9
  40253c:	dc10      	bgt.n	402560 <__kernel_rem_pio2+0x4c0>
  40253e:	e8f8 0102 	ldrd	r0, r1, [r8], #8
  402542:	e8f5 2302 	ldrd	r2, r3, [r5], #8
  402546:	f000 fd79 	bl	40303c <__aeabi_dmul>
  40254a:	4602      	mov	r2, r0
  40254c:	460b      	mov	r3, r1
  40254e:	4630      	mov	r0, r6
  402550:	4639      	mov	r1, r7
  402552:	f000 fbc1 	bl	402cd8 <__adddf3>
  402556:	3401      	adds	r4, #1
  402558:	45a2      	cmp	sl, r4
  40255a:	4606      	mov	r6, r0
  40255c:	460f      	mov	r7, r1
  40255e:	daec      	bge.n	40253a <__kernel_rem_pio2+0x49a>
  402560:	9b03      	ldr	r3, [sp, #12]
  402562:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
  402566:	f1ab 0b08 	sub.w	fp, fp, #8
  40256a:	e9c3 6700 	strd	r6, r7, [r3]
  40256e:	ab6e      	add	r3, sp, #440	; 0x1b8
  402570:	455b      	cmp	r3, fp
  402572:	f109 0901 	add.w	r9, r9, #1
  402576:	d1d2      	bne.n	40251e <__kernel_rem_pio2+0x47e>
  402578:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  40257a:	f8dd a00c 	ldr.w	sl, [sp, #12]
  40257e:	2b03      	cmp	r3, #3
  402580:	f200 808b 	bhi.w	40269a <__kernel_rem_pio2+0x5fa>
  402584:	e8df f013 	tbh	[pc, r3, lsl #1]
  402588:	009000d1 	.word	0x009000d1
  40258c:	00100090 	.word	0x00100090
  402590:	40000000 	.word	0x40000000
  402594:	3ff921fb 	.word	0x3ff921fb
  402598:	3ff00000 	.word	0x3ff00000
  40259c:	3fe00000 	.word	0x3fe00000
  4025a0:	3e700000 	.word	0x3e700000
  4025a4:	004064b0 	.word	0x004064b0
  4025a8:	9b00      	ldr	r3, [sp, #0]
  4025aa:	2b00      	cmp	r3, #0
  4025ac:	f340 81a4 	ble.w	4028f8 <__kernel_rem_pio2+0x858>
  4025b0:	9b04      	ldr	r3, [sp, #16]
  4025b2:	eb0a 0803 	add.w	r8, sl, r3
  4025b6:	e9d8 6700 	ldrd	r6, r7, [r8]
  4025ba:	46d3      	mov	fp, sl
  4025bc:	e958 9a02 	ldrd	r9, sl, [r8, #-8]
  4025c0:	4632      	mov	r2, r6
  4025c2:	463b      	mov	r3, r7
  4025c4:	4648      	mov	r0, r9
  4025c6:	4651      	mov	r1, sl
  4025c8:	f000 fb86 	bl	402cd8 <__adddf3>
  4025cc:	4604      	mov	r4, r0
  4025ce:	460d      	mov	r5, r1
  4025d0:	4602      	mov	r2, r0
  4025d2:	460b      	mov	r3, r1
  4025d4:	4648      	mov	r0, r9
  4025d6:	4651      	mov	r1, sl
  4025d8:	f000 fb7c 	bl	402cd4 <__aeabi_dsub>
  4025dc:	4632      	mov	r2, r6
  4025de:	463b      	mov	r3, r7
  4025e0:	f000 fb7a 	bl	402cd8 <__adddf3>
  4025e4:	e9c8 0100 	strd	r0, r1, [r8]
  4025e8:	e968 4502 	strd	r4, r5, [r8, #-8]!
  4025ec:	45c3      	cmp	fp, r8
  4025ee:	4626      	mov	r6, r4
  4025f0:	462f      	mov	r7, r5
  4025f2:	d1e3      	bne.n	4025bc <__kernel_rem_pio2+0x51c>
  4025f4:	9b00      	ldr	r3, [sp, #0]
  4025f6:	2b01      	cmp	r3, #1
  4025f8:	46da      	mov	sl, fp
  4025fa:	f340 817d 	ble.w	4028f8 <__kernel_rem_pio2+0x858>
  4025fe:	9b04      	ldr	r3, [sp, #16]
  402600:	445b      	add	r3, fp
  402602:	e9d3 6700 	ldrd	r6, r7, [r3]
  402606:	4698      	mov	r8, r3
  402608:	4699      	mov	r9, r3
  40260a:	f50d 7b94 	add.w	fp, sp, #296	; 0x128
  40260e:	e959 3402 	ldrd	r3, r4, [r9, #-8]
  402612:	4632      	mov	r2, r6
  402614:	4618      	mov	r0, r3
  402616:	4621      	mov	r1, r4
  402618:	463b      	mov	r3, r7
  40261a:	e9cd 0100 	strd	r0, r1, [sp]
  40261e:	f000 fb5b 	bl	402cd8 <__adddf3>
  402622:	4604      	mov	r4, r0
  402624:	460d      	mov	r5, r1
  402626:	4602      	mov	r2, r0
  402628:	460b      	mov	r3, r1
  40262a:	e9dd 0100 	ldrd	r0, r1, [sp]
  40262e:	f000 fb51 	bl	402cd4 <__aeabi_dsub>
  402632:	4632      	mov	r2, r6
  402634:	463b      	mov	r3, r7
  402636:	f000 fb4f 	bl	402cd8 <__adddf3>
  40263a:	e9c9 0100 	strd	r0, r1, [r9]
  40263e:	e969 4502 	strd	r4, r5, [r9, #-8]!
  402642:	45cb      	cmp	fp, r9
  402644:	4626      	mov	r6, r4
  402646:	462f      	mov	r7, r5
  402648:	d1e1      	bne.n	40260e <__kernel_rem_pio2+0x56e>
  40264a:	2300      	movs	r3, #0
  40264c:	f108 0808 	add.w	r8, r8, #8
  402650:	461d      	mov	r5, r3
  402652:	ac4c      	add	r4, sp, #304	; 0x130
  402654:	4618      	mov	r0, r3
  402656:	4629      	mov	r1, r5
  402658:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
  40265c:	f000 fb3c 	bl	402cd8 <__adddf3>
  402660:	4544      	cmp	r4, r8
  402662:	4603      	mov	r3, r0
  402664:	460d      	mov	r5, r1
  402666:	d1f5      	bne.n	402654 <__kernel_rem_pio2+0x5b4>
  402668:	9a02      	ldr	r2, [sp, #8]
  40266a:	2a00      	cmp	r2, #0
  40266c:	f000 8120 	beq.w	4028b0 <__kernel_rem_pio2+0x810>
  402670:	f8da 4004 	ldr.w	r4, [sl, #4]
  402674:	f8da 200c 	ldr.w	r2, [sl, #12]
  402678:	9f06      	ldr	r7, [sp, #24]
  40267a:	f8da 1000 	ldr.w	r1, [sl]
  40267e:	f8da 0008 	ldr.w	r0, [sl, #8]
  402682:	613b      	str	r3, [r7, #16]
  402684:	f105 4500 	add.w	r5, r5, #2147483648	; 0x80000000
  402688:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
  40268c:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
  402690:	617d      	str	r5, [r7, #20]
  402692:	607c      	str	r4, [r7, #4]
  402694:	60fa      	str	r2, [r7, #12]
  402696:	6039      	str	r1, [r7, #0]
  402698:	60b8      	str	r0, [r7, #8]
  40269a:	9b07      	ldr	r3, [sp, #28]
  40269c:	f003 0007 	and.w	r0, r3, #7
  4026a0:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  4026a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4026a8:	9c04      	ldr	r4, [sp, #16]
  4026aa:	2600      	movs	r6, #0
  4026ac:	3408      	adds	r4, #8
  4026ae:	4454      	add	r4, sl
  4026b0:	4633      	mov	r3, r6
  4026b2:	4630      	mov	r0, r6
  4026b4:	4619      	mov	r1, r3
  4026b6:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  4026ba:	f000 fb0d 	bl	402cd8 <__adddf3>
  4026be:	4554      	cmp	r4, sl
  4026c0:	4606      	mov	r6, r0
  4026c2:	460b      	mov	r3, r1
  4026c4:	d1f5      	bne.n	4026b2 <__kernel_rem_pio2+0x612>
  4026c6:	9a02      	ldr	r2, [sp, #8]
  4026c8:	4630      	mov	r0, r6
  4026ca:	4619      	mov	r1, r3
  4026cc:	2a00      	cmp	r2, #0
  4026ce:	f000 80da 	beq.w	402886 <__kernel_rem_pio2+0x7e6>
  4026d2:	9806      	ldr	r0, [sp, #24]
  4026d4:	f103 4400 	add.w	r4, r3, #2147483648	; 0x80000000
  4026d8:	4632      	mov	r2, r6
  4026da:	6044      	str	r4, [r0, #4]
  4026dc:	6006      	str	r6, [r0, #0]
  4026de:	e9da 0100 	ldrd	r0, r1, [sl]
  4026e2:	f000 faf7 	bl	402cd4 <__aeabi_dsub>
  4026e6:	460b      	mov	r3, r1
  4026e8:	9900      	ldr	r1, [sp, #0]
  4026ea:	2900      	cmp	r1, #0
  4026ec:	4602      	mov	r2, r0
  4026ee:	dd0e      	ble.n	40270e <__kernel_rem_pio2+0x66e>
  4026f0:	2401      	movs	r4, #1
  4026f2:	4610      	mov	r0, r2
  4026f4:	4619      	mov	r1, r3
  4026f6:	e9fa 2302 	ldrd	r2, r3, [sl, #8]!
  4026fa:	f000 faed 	bl	402cd8 <__adddf3>
  4026fe:	460b      	mov	r3, r1
  402700:	9900      	ldr	r1, [sp, #0]
  402702:	3401      	adds	r4, #1
  402704:	42a1      	cmp	r1, r4
  402706:	4602      	mov	r2, r0
  402708:	daf3      	bge.n	4026f2 <__kernel_rem_pio2+0x652>
  40270a:	9902      	ldr	r1, [sp, #8]
  40270c:	b109      	cbz	r1, 402712 <__kernel_rem_pio2+0x672>
  40270e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  402712:	4619      	mov	r1, r3
  402714:	9b06      	ldr	r3, [sp, #24]
  402716:	4610      	mov	r0, r2
  402718:	e9c3 0102 	strd	r0, r1, [r3, #8]
  40271c:	9b07      	ldr	r3, [sp, #28]
  40271e:	f003 0007 	and.w	r0, r3, #7
  402722:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  402726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40272a:	9c04      	ldr	r4, [sp, #16]
  40272c:	2200      	movs	r2, #0
  40272e:	3408      	adds	r4, #8
  402730:	4454      	add	r4, sl
  402732:	4613      	mov	r3, r2
  402734:	4610      	mov	r0, r2
  402736:	4619      	mov	r1, r3
  402738:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
  40273c:	f000 facc 	bl	402cd8 <__adddf3>
  402740:	45a2      	cmp	sl, r4
  402742:	4602      	mov	r2, r0
  402744:	460b      	mov	r3, r1
  402746:	d1f5      	bne.n	402734 <__kernel_rem_pio2+0x694>
  402748:	9902      	ldr	r1, [sp, #8]
  40274a:	b109      	cbz	r1, 402750 <__kernel_rem_pio2+0x6b0>
  40274c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
  402750:	4619      	mov	r1, r3
  402752:	9b06      	ldr	r3, [sp, #24]
  402754:	4610      	mov	r0, r2
  402756:	e9c3 0100 	strd	r0, r1, [r3]
  40275a:	9b07      	ldr	r3, [sp, #28]
  40275c:	f003 0007 	and.w	r0, r3, #7
  402760:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
  402764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402768:	2600      	movs	r6, #0
  40276a:	2700      	movs	r7, #0
  40276c:	e9ea 6702 	strd	r6, r7, [sl, #8]!
  402770:	45da      	cmp	sl, fp
  402772:	f109 0908 	add.w	r9, r9, #8
  402776:	f47f ace4 	bne.w	402142 <__kernel_rem_pio2+0xa2>
  40277a:	e502      	b.n	402182 <__kernel_rem_pio2+0xe2>
  40277c:	9b00      	ldr	r3, [sp, #0]
  40277e:	2b00      	cmp	r3, #0
  402780:	f108 0801 	add.w	r8, r8, #1
  402784:	bfc8      	it	gt
  402786:	2502      	movgt	r5, #2
  402788:	f73f ad8c 	bgt.w	4022a4 <__kernel_rem_pio2+0x204>
  40278c:	4632      	mov	r2, r6
  40278e:	463b      	mov	r3, r7
  402790:	2000      	movs	r0, #0
  402792:	4963      	ldr	r1, [pc, #396]	; (402920 <__kernel_rem_pio2+0x880>)
  402794:	f000 fa9e 	bl	402cd4 <__aeabi_dsub>
  402798:	2502      	movs	r5, #2
  40279a:	4606      	mov	r6, r0
  40279c:	460f      	mov	r7, r1
  40279e:	e5df      	b.n	402360 <__kernel_rem_pio2+0x2c0>
  4027a0:	2600      	movs	r6, #0
  4027a2:	2700      	movs	r7, #0
  4027a4:	e6dc      	b.n	402560 <__kernel_rem_pio2+0x4c0>
  4027a6:	9b04      	ldr	r3, [sp, #16]
  4027a8:	2b00      	cmp	r3, #0
  4027aa:	dd26      	ble.n	4027fa <__kernel_rem_pio2+0x75a>
  4027ac:	2400      	movs	r4, #0
  4027ae:	9b04      	ldr	r3, [sp, #16]
  4027b0:	2b01      	cmp	r3, #1
  4027b2:	f43f ada8 	beq.w	402306 <__kernel_rem_pio2+0x266>
  4027b6:	2b02      	cmp	r3, #2
  4027b8:	d109      	bne.n	4027ce <__kernel_rem_pio2+0x72e>
  4027ba:	9b00      	ldr	r3, [sp, #0]
  4027bc:	1e5a      	subs	r2, r3, #1
  4027be:	ab0c      	add	r3, sp, #48	; 0x30
  4027c0:	a90c      	add	r1, sp, #48	; 0x30
  4027c2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
  4027c6:	f3c3 0315 	ubfx	r3, r3, #0, #22
  4027ca:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
  4027ce:	2d02      	cmp	r5, #2
  4027d0:	f47f adc6 	bne.w	402360 <__kernel_rem_pio2+0x2c0>
  4027d4:	4632      	mov	r2, r6
  4027d6:	463b      	mov	r3, r7
  4027d8:	2000      	movs	r0, #0
  4027da:	4951      	ldr	r1, [pc, #324]	; (402920 <__kernel_rem_pio2+0x880>)
  4027dc:	f000 fa7a 	bl	402cd4 <__aeabi_dsub>
  4027e0:	4606      	mov	r6, r0
  4027e2:	460f      	mov	r7, r1
  4027e4:	2c00      	cmp	r4, #0
  4027e6:	f43f adbb 	beq.w	402360 <__kernel_rem_pio2+0x2c0>
  4027ea:	e5ab      	b.n	402344 <__kernel_rem_pio2+0x2a4>
  4027ec:	9900      	ldr	r1, [sp, #0]
  4027ee:	3301      	adds	r3, #1
  4027f0:	4299      	cmp	r1, r3
  4027f2:	d178      	bne.n	4028e6 <__kernel_rem_pio2+0x846>
  4027f4:	9b04      	ldr	r3, [sp, #16]
  4027f6:	2b00      	cmp	r3, #0
  4027f8:	dcd9      	bgt.n	4027ae <__kernel_rem_pio2+0x70e>
  4027fa:	2d02      	cmp	r5, #2
  4027fc:	f47f adb0 	bne.w	402360 <__kernel_rem_pio2+0x2c0>
  402800:	4632      	mov	r2, r6
  402802:	463b      	mov	r3, r7
  402804:	2000      	movs	r0, #0
  402806:	4946      	ldr	r1, [pc, #280]	; (402920 <__kernel_rem_pio2+0x880>)
  402808:	f000 fa64 	bl	402cd4 <__aeabi_dsub>
  40280c:	4606      	mov	r6, r0
  40280e:	460f      	mov	r7, r1
  402810:	e5a6      	b.n	402360 <__kernel_rem_pio2+0x2c0>
  402812:	2301      	movs	r3, #1
  402814:	e5d1      	b.n	4023ba <__kernel_rem_pio2+0x31a>
  402816:	4639      	mov	r1, r7
  402818:	9f04      	ldr	r7, [sp, #16]
  40281a:	9502      	str	r5, [sp, #8]
  40281c:	427a      	negs	r2, r7
  40281e:	4630      	mov	r0, r6
  402820:	f8cd 801c 	str.w	r8, [sp, #28]
  402824:	f000 f9cc 	bl	402bc0 <scalbn>
  402828:	2200      	movs	r2, #0
  40282a:	4b3e      	ldr	r3, [pc, #248]	; (402924 <__kernel_rem_pio2+0x884>)
  40282c:	4604      	mov	r4, r0
  40282e:	460d      	mov	r5, r1
  402830:	f000 fe8a 	bl	403548 <__aeabi_dcmpge>
  402834:	2800      	cmp	r0, #0
  402836:	d062      	beq.n	4028fe <__kernel_rem_pio2+0x85e>
  402838:	2200      	movs	r2, #0
  40283a:	4b3b      	ldr	r3, [pc, #236]	; (402928 <__kernel_rem_pio2+0x888>)
  40283c:	4620      	mov	r0, r4
  40283e:	4629      	mov	r1, r5
  402840:	f000 fbfc 	bl	40303c <__aeabi_dmul>
  402844:	f000 fe94 	bl	403570 <__aeabi_d2iz>
  402848:	4606      	mov	r6, r0
  40284a:	f000 fb91 	bl	402f70 <__aeabi_i2d>
  40284e:	2200      	movs	r2, #0
  402850:	4b34      	ldr	r3, [pc, #208]	; (402924 <__kernel_rem_pio2+0x884>)
  402852:	f000 fbf3 	bl	40303c <__aeabi_dmul>
  402856:	4602      	mov	r2, r0
  402858:	460b      	mov	r3, r1
  40285a:	4620      	mov	r0, r4
  40285c:	4629      	mov	r1, r5
  40285e:	f000 fa39 	bl	402cd4 <__aeabi_dsub>
  402862:	f000 fe85 	bl	403570 <__aeabi_d2iz>
  402866:	9900      	ldr	r1, [sp, #0]
  402868:	460b      	mov	r3, r1
  40286a:	3301      	adds	r3, #1
  40286c:	461a      	mov	r2, r3
  40286e:	9300      	str	r3, [sp, #0]
  402870:	463b      	mov	r3, r7
  402872:	3318      	adds	r3, #24
  402874:	9304      	str	r3, [sp, #16]
  402876:	460b      	mov	r3, r1
  402878:	a90c      	add	r1, sp, #48	; 0x30
  40287a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
  40287e:	4613      	mov	r3, r2
  402880:	f841 6023 	str.w	r6, [r1, r3, lsl #2]
  402884:	e614      	b.n	4024b0 <__kernel_rem_pio2+0x410>
  402886:	9b06      	ldr	r3, [sp, #24]
  402888:	4632      	mov	r2, r6
  40288a:	e9c3 0100 	strd	r0, r1, [r3]
  40288e:	460b      	mov	r3, r1
  402890:	e9da 0100 	ldrd	r0, r1, [sl]
  402894:	f000 fa1e 	bl	402cd4 <__aeabi_dsub>
  402898:	460b      	mov	r3, r1
  40289a:	9900      	ldr	r1, [sp, #0]
  40289c:	2900      	cmp	r1, #0
  40289e:	4602      	mov	r2, r0
  4028a0:	f73f af26 	bgt.w	4026f0 <__kernel_rem_pio2+0x650>
  4028a4:	4619      	mov	r1, r3
  4028a6:	9b06      	ldr	r3, [sp, #24]
  4028a8:	4610      	mov	r0, r2
  4028aa:	e9c3 0102 	strd	r0, r1, [r3, #8]
  4028ae:	e735      	b.n	40271c <__kernel_rem_pio2+0x67c>
  4028b0:	4618      	mov	r0, r3
  4028b2:	4629      	mov	r1, r5
  4028b4:	e9da 2300 	ldrd	r2, r3, [sl]
  4028b8:	e9da 4502 	ldrd	r4, r5, [sl, #8]
  4028bc:	9f06      	ldr	r7, [sp, #24]
  4028be:	e9c7 0104 	strd	r0, r1, [r7, #16]
  4028c2:	e9c7 2300 	strd	r2, r3, [r7]
  4028c6:	e9c7 4502 	strd	r4, r5, [r7, #8]
  4028ca:	e6e6      	b.n	40269a <__kernel_rem_pio2+0x5fa>
  4028cc:	9ba2      	ldr	r3, [sp, #648]	; 0x288
  4028ce:	2b03      	cmp	r3, #3
  4028d0:	f63f aee3 	bhi.w	40269a <__kernel_rem_pio2+0x5fa>
  4028d4:	e8df f003 	tbb	[pc, r3]
  4028d8:	0e1c1c21 	.word	0x0e1c1c21
  4028dc:	9b00      	ldr	r3, [sp, #0]
  4028de:	2b01      	cmp	r3, #1
  4028e0:	dd88      	ble.n	4027f4 <__kernel_rem_pio2+0x754>
  4028e2:	aa0c      	add	r2, sp, #48	; 0x30
  4028e4:	2301      	movs	r3, #1
  4028e6:	f852 4f04 	ldr.w	r4, [r2, #4]!
  4028ea:	2c00      	cmp	r4, #0
  4028ec:	f43f af7e 	beq.w	4027ec <__kernel_rem_pio2+0x74c>
  4028f0:	1c58      	adds	r0, r3, #1
  4028f2:	e4dd      	b.n	4022b0 <__kernel_rem_pio2+0x210>
  4028f4:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  4028f8:	2300      	movs	r3, #0
  4028fa:	461d      	mov	r5, r3
  4028fc:	e6b4      	b.n	402668 <__kernel_rem_pio2+0x5c8>
  4028fe:	4629      	mov	r1, r5
  402900:	4620      	mov	r0, r4
  402902:	f000 fe35 	bl	403570 <__aeabi_d2iz>
  402906:	9a00      	ldr	r2, [sp, #0]
  402908:	a90c      	add	r1, sp, #48	; 0x30
  40290a:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
  40290e:	e5cf      	b.n	4024b0 <__kernel_rem_pio2+0x410>
  402910:	2600      	movs	r6, #0
  402912:	4633      	mov	r3, r6
  402914:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
  402918:	e6d5      	b.n	4026c6 <__kernel_rem_pio2+0x626>
  40291a:	2200      	movs	r2, #0
  40291c:	4613      	mov	r3, r2
  40291e:	e713      	b.n	402748 <__kernel_rem_pio2+0x6a8>
  402920:	3ff00000 	.word	0x3ff00000
  402924:	41700000 	.word	0x41700000
  402928:	3e700000 	.word	0x3e700000
  40292c:	00000000 	.word	0x00000000

00402930 <__kernel_sin>:
  402930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402934:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  402938:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
  40293c:	b085      	sub	sp, #20
  40293e:	460c      	mov	r4, r1
  402940:	4690      	mov	r8, r2
  402942:	4699      	mov	r9, r3
  402944:	4605      	mov	r5, r0
  402946:	da04      	bge.n	402952 <__kernel_sin+0x22>
  402948:	f000 fe12 	bl	403570 <__aeabi_d2iz>
  40294c:	2800      	cmp	r0, #0
  40294e:	f000 8085 	beq.w	402a5c <__kernel_sin+0x12c>
  402952:	462a      	mov	r2, r5
  402954:	4623      	mov	r3, r4
  402956:	4628      	mov	r0, r5
  402958:	4621      	mov	r1, r4
  40295a:	f000 fb6f 	bl	40303c <__aeabi_dmul>
  40295e:	4606      	mov	r6, r0
  402960:	460f      	mov	r7, r1
  402962:	4602      	mov	r2, r0
  402964:	460b      	mov	r3, r1
  402966:	4628      	mov	r0, r5
  402968:	4621      	mov	r1, r4
  40296a:	f000 fb67 	bl	40303c <__aeabi_dmul>
  40296e:	a33e      	add	r3, pc, #248	; (adr r3, 402a68 <__kernel_sin+0x138>)
  402970:	e9d3 2300 	ldrd	r2, r3, [r3]
  402974:	4682      	mov	sl, r0
  402976:	468b      	mov	fp, r1
  402978:	4630      	mov	r0, r6
  40297a:	4639      	mov	r1, r7
  40297c:	f000 fb5e 	bl	40303c <__aeabi_dmul>
  402980:	a33b      	add	r3, pc, #236	; (adr r3, 402a70 <__kernel_sin+0x140>)
  402982:	e9d3 2300 	ldrd	r2, r3, [r3]
  402986:	f000 f9a5 	bl	402cd4 <__aeabi_dsub>
  40298a:	4632      	mov	r2, r6
  40298c:	463b      	mov	r3, r7
  40298e:	f000 fb55 	bl	40303c <__aeabi_dmul>
  402992:	a339      	add	r3, pc, #228	; (adr r3, 402a78 <__kernel_sin+0x148>)
  402994:	e9d3 2300 	ldrd	r2, r3, [r3]
  402998:	f000 f99e 	bl	402cd8 <__adddf3>
  40299c:	4632      	mov	r2, r6
  40299e:	463b      	mov	r3, r7
  4029a0:	f000 fb4c 	bl	40303c <__aeabi_dmul>
  4029a4:	a336      	add	r3, pc, #216	; (adr r3, 402a80 <__kernel_sin+0x150>)
  4029a6:	e9d3 2300 	ldrd	r2, r3, [r3]
  4029aa:	f000 f993 	bl	402cd4 <__aeabi_dsub>
  4029ae:	4632      	mov	r2, r6
  4029b0:	463b      	mov	r3, r7
  4029b2:	f000 fb43 	bl	40303c <__aeabi_dmul>
  4029b6:	a334      	add	r3, pc, #208	; (adr r3, 402a88 <__kernel_sin+0x158>)
  4029b8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4029bc:	f000 f98c 	bl	402cd8 <__adddf3>
  4029c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4029c2:	e9cd 0100 	strd	r0, r1, [sp]
  4029c6:	b39b      	cbz	r3, 402a30 <__kernel_sin+0x100>
  4029c8:	2200      	movs	r2, #0
  4029ca:	4b33      	ldr	r3, [pc, #204]	; (402a98 <__kernel_sin+0x168>)
  4029cc:	4640      	mov	r0, r8
  4029ce:	4649      	mov	r1, r9
  4029d0:	f000 fb34 	bl	40303c <__aeabi_dmul>
  4029d4:	e9dd 2300 	ldrd	r2, r3, [sp]
  4029d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4029dc:	4650      	mov	r0, sl
  4029de:	4659      	mov	r1, fp
  4029e0:	f000 fb2c 	bl	40303c <__aeabi_dmul>
  4029e4:	4602      	mov	r2, r0
  4029e6:	460b      	mov	r3, r1
  4029e8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4029ec:	f000 f972 	bl	402cd4 <__aeabi_dsub>
  4029f0:	4632      	mov	r2, r6
  4029f2:	463b      	mov	r3, r7
  4029f4:	f000 fb22 	bl	40303c <__aeabi_dmul>
  4029f8:	4642      	mov	r2, r8
  4029fa:	464b      	mov	r3, r9
  4029fc:	f000 f96a 	bl	402cd4 <__aeabi_dsub>
  402a00:	a323      	add	r3, pc, #140	; (adr r3, 402a90 <__kernel_sin+0x160>)
  402a02:	e9d3 2300 	ldrd	r2, r3, [r3]
  402a06:	4606      	mov	r6, r0
  402a08:	460f      	mov	r7, r1
  402a0a:	4650      	mov	r0, sl
  402a0c:	4659      	mov	r1, fp
  402a0e:	f000 fb15 	bl	40303c <__aeabi_dmul>
  402a12:	4602      	mov	r2, r0
  402a14:	460b      	mov	r3, r1
  402a16:	4630      	mov	r0, r6
  402a18:	4639      	mov	r1, r7
  402a1a:	f000 f95d 	bl	402cd8 <__adddf3>
  402a1e:	4602      	mov	r2, r0
  402a20:	460b      	mov	r3, r1
  402a22:	4628      	mov	r0, r5
  402a24:	4621      	mov	r1, r4
  402a26:	f000 f955 	bl	402cd4 <__aeabi_dsub>
  402a2a:	b005      	add	sp, #20
  402a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a30:	4602      	mov	r2, r0
  402a32:	460b      	mov	r3, r1
  402a34:	4630      	mov	r0, r6
  402a36:	4639      	mov	r1, r7
  402a38:	f000 fb00 	bl	40303c <__aeabi_dmul>
  402a3c:	a314      	add	r3, pc, #80	; (adr r3, 402a90 <__kernel_sin+0x160>)
  402a3e:	e9d3 2300 	ldrd	r2, r3, [r3]
  402a42:	f000 f947 	bl	402cd4 <__aeabi_dsub>
  402a46:	4652      	mov	r2, sl
  402a48:	465b      	mov	r3, fp
  402a4a:	f000 faf7 	bl	40303c <__aeabi_dmul>
  402a4e:	462a      	mov	r2, r5
  402a50:	4623      	mov	r3, r4
  402a52:	f000 f941 	bl	402cd8 <__adddf3>
  402a56:	b005      	add	sp, #20
  402a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a5c:	4628      	mov	r0, r5
  402a5e:	4621      	mov	r1, r4
  402a60:	b005      	add	sp, #20
  402a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402a66:	bf00      	nop
  402a68:	5acfd57c 	.word	0x5acfd57c
  402a6c:	3de5d93a 	.word	0x3de5d93a
  402a70:	8a2b9ceb 	.word	0x8a2b9ceb
  402a74:	3e5ae5e6 	.word	0x3e5ae5e6
  402a78:	57b1fe7d 	.word	0x57b1fe7d
  402a7c:	3ec71de3 	.word	0x3ec71de3
  402a80:	19c161d5 	.word	0x19c161d5
  402a84:	3f2a01a0 	.word	0x3f2a01a0
  402a88:	1110f8a6 	.word	0x1110f8a6
  402a8c:	3f811111 	.word	0x3f811111
  402a90:	55555549 	.word	0x55555549
  402a94:	3fc55555 	.word	0x3fc55555
  402a98:	3fe00000 	.word	0x3fe00000

00402a9c <fabs>:
  402a9c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402aa0:	4770      	bx	lr
  402aa2:	bf00      	nop
  402aa4:	0000      	movs	r0, r0
	...

00402aa8 <floor>:
  402aa8:	f3c1 520a 	ubfx	r2, r1, #20, #11
  402aac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402ab0:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
  402ab4:	2e13      	cmp	r6, #19
  402ab6:	460b      	mov	r3, r1
  402ab8:	460d      	mov	r5, r1
  402aba:	4604      	mov	r4, r0
  402abc:	4688      	mov	r8, r1
  402abe:	4607      	mov	r7, r0
  402ac0:	dc1d      	bgt.n	402afe <floor+0x56>
  402ac2:	2e00      	cmp	r6, #0
  402ac4:	db40      	blt.n	402b48 <floor+0xa0>
  402ac6:	4a3c      	ldr	r2, [pc, #240]	; (402bb8 <floor+0x110>)
  402ac8:	fa42 f906 	asr.w	r9, r2, r6
  402acc:	ea01 0209 	and.w	r2, r1, r9
  402ad0:	4302      	orrs	r2, r0
  402ad2:	4686      	mov	lr, r0
  402ad4:	d018      	beq.n	402b08 <floor+0x60>
  402ad6:	a336      	add	r3, pc, #216	; (adr r3, 402bb0 <floor+0x108>)
  402ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
  402adc:	f000 f8fc 	bl	402cd8 <__adddf3>
  402ae0:	2200      	movs	r2, #0
  402ae2:	2300      	movs	r3, #0
  402ae4:	f000 fd3a 	bl	40355c <__aeabi_dcmpgt>
  402ae8:	b120      	cbz	r0, 402af4 <floor+0x4c>
  402aea:	2d00      	cmp	r5, #0
  402aec:	db42      	blt.n	402b74 <floor+0xcc>
  402aee:	ea28 0509 	bic.w	r5, r8, r9
  402af2:	2700      	movs	r7, #0
  402af4:	463c      	mov	r4, r7
  402af6:	4629      	mov	r1, r5
  402af8:	4620      	mov	r0, r4
  402afa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402afe:	2e33      	cmp	r6, #51	; 0x33
  402b00:	dd06      	ble.n	402b10 <floor+0x68>
  402b02:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
  402b06:	d02f      	beq.n	402b68 <floor+0xc0>
  402b08:	4619      	mov	r1, r3
  402b0a:	4620      	mov	r0, r4
  402b0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  402b10:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
  402b14:	f04f 39ff 	mov.w	r9, #4294967295
  402b18:	fa29 f902 	lsr.w	r9, r9, r2
  402b1c:	ea10 0f09 	tst.w	r0, r9
  402b20:	d0f2      	beq.n	402b08 <floor+0x60>
  402b22:	a323      	add	r3, pc, #140	; (adr r3, 402bb0 <floor+0x108>)
  402b24:	e9d3 2300 	ldrd	r2, r3, [r3]
  402b28:	f000 f8d6 	bl	402cd8 <__adddf3>
  402b2c:	2200      	movs	r2, #0
  402b2e:	2300      	movs	r3, #0
  402b30:	f000 fd14 	bl	40355c <__aeabi_dcmpgt>
  402b34:	2800      	cmp	r0, #0
  402b36:	d0dd      	beq.n	402af4 <floor+0x4c>
  402b38:	2d00      	cmp	r5, #0
  402b3a:	db21      	blt.n	402b80 <floor+0xd8>
  402b3c:	4645      	mov	r5, r8
  402b3e:	ea27 0709 	bic.w	r7, r7, r9
  402b42:	463c      	mov	r4, r7
  402b44:	4629      	mov	r1, r5
  402b46:	e7d7      	b.n	402af8 <floor+0x50>
  402b48:	a319      	add	r3, pc, #100	; (adr r3, 402bb0 <floor+0x108>)
  402b4a:	e9d3 2300 	ldrd	r2, r3, [r3]
  402b4e:	f000 f8c3 	bl	402cd8 <__adddf3>
  402b52:	2200      	movs	r2, #0
  402b54:	2300      	movs	r3, #0
  402b56:	f000 fd01 	bl	40355c <__aeabi_dcmpgt>
  402b5a:	2800      	cmp	r0, #0
  402b5c:	d0ca      	beq.n	402af4 <floor+0x4c>
  402b5e:	2d00      	cmp	r5, #0
  402b60:	db19      	blt.n	402b96 <floor+0xee>
  402b62:	2700      	movs	r7, #0
  402b64:	463d      	mov	r5, r7
  402b66:	e7c5      	b.n	402af4 <floor+0x4c>
  402b68:	4602      	mov	r2, r0
  402b6a:	460b      	mov	r3, r1
  402b6c:	f000 f8b4 	bl	402cd8 <__adddf3>
  402b70:	4604      	mov	r4, r0
  402b72:	e7ca      	b.n	402b0a <floor+0x62>
  402b74:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
  402b78:	fa43 f606 	asr.w	r6, r3, r6
  402b7c:	44b0      	add	r8, r6
  402b7e:	e7b6      	b.n	402aee <floor+0x46>
  402b80:	2e14      	cmp	r6, #20
  402b82:	d010      	beq.n	402ba6 <floor+0xfe>
  402b84:	2301      	movs	r3, #1
  402b86:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
  402b8a:	fa03 f606 	lsl.w	r6, r3, r6
  402b8e:	1937      	adds	r7, r6, r4
  402b90:	bf28      	it	cs
  402b92:	4498      	addcs	r8, r3
  402b94:	e7d2      	b.n	402b3c <floor+0x94>
  402b96:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
  402b9a:	4b08      	ldr	r3, [pc, #32]	; (402bbc <floor+0x114>)
  402b9c:	4322      	orrs	r2, r4
  402b9e:	bf18      	it	ne
  402ba0:	461d      	movne	r5, r3
  402ba2:	2700      	movs	r7, #0
  402ba4:	e7a6      	b.n	402af4 <floor+0x4c>
  402ba6:	f105 0801 	add.w	r8, r5, #1
  402baa:	e7c7      	b.n	402b3c <floor+0x94>
  402bac:	f3af 8000 	nop.w
  402bb0:	8800759c 	.word	0x8800759c
  402bb4:	7e37e43c 	.word	0x7e37e43c
  402bb8:	000fffff 	.word	0x000fffff
  402bbc:	bff00000 	.word	0xbff00000

00402bc0 <scalbn>:
  402bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  402bc2:	f3c1 560a 	ubfx	r6, r1, #20, #11
  402bc6:	4604      	mov	r4, r0
  402bc8:	460d      	mov	r5, r1
  402bca:	460b      	mov	r3, r1
  402bcc:	4617      	mov	r7, r2
  402bce:	bb0e      	cbnz	r6, 402c14 <scalbn+0x54>
  402bd0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  402bd4:	4303      	orrs	r3, r0
  402bd6:	4686      	mov	lr, r0
  402bd8:	d025      	beq.n	402c26 <scalbn+0x66>
  402bda:	2200      	movs	r2, #0
  402bdc:	4b34      	ldr	r3, [pc, #208]	; (402cb0 <scalbn+0xf0>)
  402bde:	f000 fa2d 	bl	40303c <__aeabi_dmul>
  402be2:	4a34      	ldr	r2, [pc, #208]	; (402cb4 <scalbn+0xf4>)
  402be4:	4297      	cmp	r7, r2
  402be6:	4604      	mov	r4, r0
  402be8:	460d      	mov	r5, r1
  402bea:	460b      	mov	r3, r1
  402bec:	db2a      	blt.n	402c44 <scalbn+0x84>
  402bee:	f3c1 560a 	ubfx	r6, r1, #20, #11
  402bf2:	3e36      	subs	r6, #54	; 0x36
  402bf4:	443e      	add	r6, r7
  402bf6:	f240 72fe 	movw	r2, #2046	; 0x7fe
  402bfa:	4296      	cmp	r6, r2
  402bfc:	dc28      	bgt.n	402c50 <scalbn+0x90>
  402bfe:	2e00      	cmp	r6, #0
  402c00:	dd12      	ble.n	402c28 <scalbn+0x68>
  402c02:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  402c06:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  402c0a:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  402c0e:	4620      	mov	r0, r4
  402c10:	4629      	mov	r1, r5
  402c12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c14:	f240 72ff 	movw	r2, #2047	; 0x7ff
  402c18:	4296      	cmp	r6, r2
  402c1a:	d1eb      	bne.n	402bf4 <scalbn+0x34>
  402c1c:	4602      	mov	r2, r0
  402c1e:	460b      	mov	r3, r1
  402c20:	f000 f85a 	bl	402cd8 <__adddf3>
  402c24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c28:	f116 0f35 	cmn.w	r6, #53	; 0x35
  402c2c:	da1d      	bge.n	402c6a <scalbn+0xaa>
  402c2e:	f24c 3350 	movw	r3, #50000	; 0xc350
  402c32:	429f      	cmp	r7, r3
  402c34:	4622      	mov	r2, r4
  402c36:	462b      	mov	r3, r5
  402c38:	dc25      	bgt.n	402c86 <scalbn+0xc6>
  402c3a:	a119      	add	r1, pc, #100	; (adr r1, 402ca0 <scalbn+0xe0>)
  402c3c:	e9d1 0100 	ldrd	r0, r1, [r1]
  402c40:	f000 f83c 	bl	402cbc <copysign>
  402c44:	a316      	add	r3, pc, #88	; (adr r3, 402ca0 <scalbn+0xe0>)
  402c46:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c4a:	f000 f9f7 	bl	40303c <__aeabi_dmul>
  402c4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c50:	4622      	mov	r2, r4
  402c52:	462b      	mov	r3, r5
  402c54:	a114      	add	r1, pc, #80	; (adr r1, 402ca8 <scalbn+0xe8>)
  402c56:	e9d1 0100 	ldrd	r0, r1, [r1]
  402c5a:	f000 f82f 	bl	402cbc <copysign>
  402c5e:	a312      	add	r3, pc, #72	; (adr r3, 402ca8 <scalbn+0xe8>)
  402c60:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c64:	f000 f9ea 	bl	40303c <__aeabi_dmul>
  402c68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c6a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
  402c6e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
  402c72:	3636      	adds	r6, #54	; 0x36
  402c74:	ea43 5506 	orr.w	r5, r3, r6, lsl #20
  402c78:	4620      	mov	r0, r4
  402c7a:	4629      	mov	r1, r5
  402c7c:	2200      	movs	r2, #0
  402c7e:	4b0e      	ldr	r3, [pc, #56]	; (402cb8 <scalbn+0xf8>)
  402c80:	f000 f9dc 	bl	40303c <__aeabi_dmul>
  402c84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c86:	a108      	add	r1, pc, #32	; (adr r1, 402ca8 <scalbn+0xe8>)
  402c88:	e9d1 0100 	ldrd	r0, r1, [r1]
  402c8c:	f000 f816 	bl	402cbc <copysign>
  402c90:	a305      	add	r3, pc, #20	; (adr r3, 402ca8 <scalbn+0xe8>)
  402c92:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c96:	f000 f9d1 	bl	40303c <__aeabi_dmul>
  402c9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  402c9c:	f3af 8000 	nop.w
  402ca0:	c2f8f359 	.word	0xc2f8f359
  402ca4:	01a56e1f 	.word	0x01a56e1f
  402ca8:	8800759c 	.word	0x8800759c
  402cac:	7e37e43c 	.word	0x7e37e43c
  402cb0:	43500000 	.word	0x43500000
  402cb4:	ffff3cb0 	.word	0xffff3cb0
  402cb8:	3c900000 	.word	0x3c900000

00402cbc <copysign>:
  402cbc:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
  402cc0:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
  402cc4:	ea42 0103 	orr.w	r1, r2, r3
  402cc8:	4770      	bx	lr
  402cca:	bf00      	nop

00402ccc <__aeabi_drsub>:
  402ccc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  402cd0:	e002      	b.n	402cd8 <__adddf3>
  402cd2:	bf00      	nop

00402cd4 <__aeabi_dsub>:
  402cd4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00402cd8 <__adddf3>:
  402cd8:	b530      	push	{r4, r5, lr}
  402cda:	ea4f 0441 	mov.w	r4, r1, lsl #1
  402cde:	ea4f 0543 	mov.w	r5, r3, lsl #1
  402ce2:	ea94 0f05 	teq	r4, r5
  402ce6:	bf08      	it	eq
  402ce8:	ea90 0f02 	teqeq	r0, r2
  402cec:	bf1f      	itttt	ne
  402cee:	ea54 0c00 	orrsne.w	ip, r4, r0
  402cf2:	ea55 0c02 	orrsne.w	ip, r5, r2
  402cf6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  402cfa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402cfe:	f000 80e2 	beq.w	402ec6 <__adddf3+0x1ee>
  402d02:	ea4f 5454 	mov.w	r4, r4, lsr #21
  402d06:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  402d0a:	bfb8      	it	lt
  402d0c:	426d      	neglt	r5, r5
  402d0e:	dd0c      	ble.n	402d2a <__adddf3+0x52>
  402d10:	442c      	add	r4, r5
  402d12:	ea80 0202 	eor.w	r2, r0, r2
  402d16:	ea81 0303 	eor.w	r3, r1, r3
  402d1a:	ea82 0000 	eor.w	r0, r2, r0
  402d1e:	ea83 0101 	eor.w	r1, r3, r1
  402d22:	ea80 0202 	eor.w	r2, r0, r2
  402d26:	ea81 0303 	eor.w	r3, r1, r3
  402d2a:	2d36      	cmp	r5, #54	; 0x36
  402d2c:	bf88      	it	hi
  402d2e:	bd30      	pophi	{r4, r5, pc}
  402d30:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  402d34:	ea4f 3101 	mov.w	r1, r1, lsl #12
  402d38:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  402d3c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  402d40:	d002      	beq.n	402d48 <__adddf3+0x70>
  402d42:	4240      	negs	r0, r0
  402d44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402d48:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  402d4c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  402d50:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  402d54:	d002      	beq.n	402d5c <__adddf3+0x84>
  402d56:	4252      	negs	r2, r2
  402d58:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  402d5c:	ea94 0f05 	teq	r4, r5
  402d60:	f000 80a7 	beq.w	402eb2 <__adddf3+0x1da>
  402d64:	f1a4 0401 	sub.w	r4, r4, #1
  402d68:	f1d5 0e20 	rsbs	lr, r5, #32
  402d6c:	db0d      	blt.n	402d8a <__adddf3+0xb2>
  402d6e:	fa02 fc0e 	lsl.w	ip, r2, lr
  402d72:	fa22 f205 	lsr.w	r2, r2, r5
  402d76:	1880      	adds	r0, r0, r2
  402d78:	f141 0100 	adc.w	r1, r1, #0
  402d7c:	fa03 f20e 	lsl.w	r2, r3, lr
  402d80:	1880      	adds	r0, r0, r2
  402d82:	fa43 f305 	asr.w	r3, r3, r5
  402d86:	4159      	adcs	r1, r3
  402d88:	e00e      	b.n	402da8 <__adddf3+0xd0>
  402d8a:	f1a5 0520 	sub.w	r5, r5, #32
  402d8e:	f10e 0e20 	add.w	lr, lr, #32
  402d92:	2a01      	cmp	r2, #1
  402d94:	fa03 fc0e 	lsl.w	ip, r3, lr
  402d98:	bf28      	it	cs
  402d9a:	f04c 0c02 	orrcs.w	ip, ip, #2
  402d9e:	fa43 f305 	asr.w	r3, r3, r5
  402da2:	18c0      	adds	r0, r0, r3
  402da4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  402da8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402dac:	d507      	bpl.n	402dbe <__adddf3+0xe6>
  402dae:	f04f 0e00 	mov.w	lr, #0
  402db2:	f1dc 0c00 	rsbs	ip, ip, #0
  402db6:	eb7e 0000 	sbcs.w	r0, lr, r0
  402dba:	eb6e 0101 	sbc.w	r1, lr, r1
  402dbe:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  402dc2:	d31b      	bcc.n	402dfc <__adddf3+0x124>
  402dc4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  402dc8:	d30c      	bcc.n	402de4 <__adddf3+0x10c>
  402dca:	0849      	lsrs	r1, r1, #1
  402dcc:	ea5f 0030 	movs.w	r0, r0, rrx
  402dd0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  402dd4:	f104 0401 	add.w	r4, r4, #1
  402dd8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  402ddc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  402de0:	f080 809a 	bcs.w	402f18 <__adddf3+0x240>
  402de4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  402de8:	bf08      	it	eq
  402dea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  402dee:	f150 0000 	adcs.w	r0, r0, #0
  402df2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  402df6:	ea41 0105 	orr.w	r1, r1, r5
  402dfa:	bd30      	pop	{r4, r5, pc}
  402dfc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  402e00:	4140      	adcs	r0, r0
  402e02:	eb41 0101 	adc.w	r1, r1, r1
  402e06:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  402e0a:	f1a4 0401 	sub.w	r4, r4, #1
  402e0e:	d1e9      	bne.n	402de4 <__adddf3+0x10c>
  402e10:	f091 0f00 	teq	r1, #0
  402e14:	bf04      	itt	eq
  402e16:	4601      	moveq	r1, r0
  402e18:	2000      	moveq	r0, #0
  402e1a:	fab1 f381 	clz	r3, r1
  402e1e:	bf08      	it	eq
  402e20:	3320      	addeq	r3, #32
  402e22:	f1a3 030b 	sub.w	r3, r3, #11
  402e26:	f1b3 0220 	subs.w	r2, r3, #32
  402e2a:	da0c      	bge.n	402e46 <__adddf3+0x16e>
  402e2c:	320c      	adds	r2, #12
  402e2e:	dd08      	ble.n	402e42 <__adddf3+0x16a>
  402e30:	f102 0c14 	add.w	ip, r2, #20
  402e34:	f1c2 020c 	rsb	r2, r2, #12
  402e38:	fa01 f00c 	lsl.w	r0, r1, ip
  402e3c:	fa21 f102 	lsr.w	r1, r1, r2
  402e40:	e00c      	b.n	402e5c <__adddf3+0x184>
  402e42:	f102 0214 	add.w	r2, r2, #20
  402e46:	bfd8      	it	le
  402e48:	f1c2 0c20 	rsble	ip, r2, #32
  402e4c:	fa01 f102 	lsl.w	r1, r1, r2
  402e50:	fa20 fc0c 	lsr.w	ip, r0, ip
  402e54:	bfdc      	itt	le
  402e56:	ea41 010c 	orrle.w	r1, r1, ip
  402e5a:	4090      	lslle	r0, r2
  402e5c:	1ae4      	subs	r4, r4, r3
  402e5e:	bfa2      	ittt	ge
  402e60:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  402e64:	4329      	orrge	r1, r5
  402e66:	bd30      	popge	{r4, r5, pc}
  402e68:	ea6f 0404 	mvn.w	r4, r4
  402e6c:	3c1f      	subs	r4, #31
  402e6e:	da1c      	bge.n	402eaa <__adddf3+0x1d2>
  402e70:	340c      	adds	r4, #12
  402e72:	dc0e      	bgt.n	402e92 <__adddf3+0x1ba>
  402e74:	f104 0414 	add.w	r4, r4, #20
  402e78:	f1c4 0220 	rsb	r2, r4, #32
  402e7c:	fa20 f004 	lsr.w	r0, r0, r4
  402e80:	fa01 f302 	lsl.w	r3, r1, r2
  402e84:	ea40 0003 	orr.w	r0, r0, r3
  402e88:	fa21 f304 	lsr.w	r3, r1, r4
  402e8c:	ea45 0103 	orr.w	r1, r5, r3
  402e90:	bd30      	pop	{r4, r5, pc}
  402e92:	f1c4 040c 	rsb	r4, r4, #12
  402e96:	f1c4 0220 	rsb	r2, r4, #32
  402e9a:	fa20 f002 	lsr.w	r0, r0, r2
  402e9e:	fa01 f304 	lsl.w	r3, r1, r4
  402ea2:	ea40 0003 	orr.w	r0, r0, r3
  402ea6:	4629      	mov	r1, r5
  402ea8:	bd30      	pop	{r4, r5, pc}
  402eaa:	fa21 f004 	lsr.w	r0, r1, r4
  402eae:	4629      	mov	r1, r5
  402eb0:	bd30      	pop	{r4, r5, pc}
  402eb2:	f094 0f00 	teq	r4, #0
  402eb6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  402eba:	bf06      	itte	eq
  402ebc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  402ec0:	3401      	addeq	r4, #1
  402ec2:	3d01      	subne	r5, #1
  402ec4:	e74e      	b.n	402d64 <__adddf3+0x8c>
  402ec6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  402eca:	bf18      	it	ne
  402ecc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  402ed0:	d029      	beq.n	402f26 <__adddf3+0x24e>
  402ed2:	ea94 0f05 	teq	r4, r5
  402ed6:	bf08      	it	eq
  402ed8:	ea90 0f02 	teqeq	r0, r2
  402edc:	d005      	beq.n	402eea <__adddf3+0x212>
  402ede:	ea54 0c00 	orrs.w	ip, r4, r0
  402ee2:	bf04      	itt	eq
  402ee4:	4619      	moveq	r1, r3
  402ee6:	4610      	moveq	r0, r2
  402ee8:	bd30      	pop	{r4, r5, pc}
  402eea:	ea91 0f03 	teq	r1, r3
  402eee:	bf1e      	ittt	ne
  402ef0:	2100      	movne	r1, #0
  402ef2:	2000      	movne	r0, #0
  402ef4:	bd30      	popne	{r4, r5, pc}
  402ef6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  402efa:	d105      	bne.n	402f08 <__adddf3+0x230>
  402efc:	0040      	lsls	r0, r0, #1
  402efe:	4149      	adcs	r1, r1
  402f00:	bf28      	it	cs
  402f02:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  402f06:	bd30      	pop	{r4, r5, pc}
  402f08:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  402f0c:	bf3c      	itt	cc
  402f0e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  402f12:	bd30      	popcc	{r4, r5, pc}
  402f14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402f18:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  402f1c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  402f20:	f04f 0000 	mov.w	r0, #0
  402f24:	bd30      	pop	{r4, r5, pc}
  402f26:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  402f2a:	bf1a      	itte	ne
  402f2c:	4619      	movne	r1, r3
  402f2e:	4610      	movne	r0, r2
  402f30:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  402f34:	bf1c      	itt	ne
  402f36:	460b      	movne	r3, r1
  402f38:	4602      	movne	r2, r0
  402f3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  402f3e:	bf06      	itte	eq
  402f40:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  402f44:	ea91 0f03 	teqeq	r1, r3
  402f48:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  402f4c:	bd30      	pop	{r4, r5, pc}
  402f4e:	bf00      	nop

00402f50 <__aeabi_ui2d>:
  402f50:	f090 0f00 	teq	r0, #0
  402f54:	bf04      	itt	eq
  402f56:	2100      	moveq	r1, #0
  402f58:	4770      	bxeq	lr
  402f5a:	b530      	push	{r4, r5, lr}
  402f5c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402f60:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402f64:	f04f 0500 	mov.w	r5, #0
  402f68:	f04f 0100 	mov.w	r1, #0
  402f6c:	e750      	b.n	402e10 <__adddf3+0x138>
  402f6e:	bf00      	nop

00402f70 <__aeabi_i2d>:
  402f70:	f090 0f00 	teq	r0, #0
  402f74:	bf04      	itt	eq
  402f76:	2100      	moveq	r1, #0
  402f78:	4770      	bxeq	lr
  402f7a:	b530      	push	{r4, r5, lr}
  402f7c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402f80:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402f84:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  402f88:	bf48      	it	mi
  402f8a:	4240      	negmi	r0, r0
  402f8c:	f04f 0100 	mov.w	r1, #0
  402f90:	e73e      	b.n	402e10 <__adddf3+0x138>
  402f92:	bf00      	nop

00402f94 <__aeabi_f2d>:
  402f94:	0042      	lsls	r2, r0, #1
  402f96:	ea4f 01e2 	mov.w	r1, r2, asr #3
  402f9a:	ea4f 0131 	mov.w	r1, r1, rrx
  402f9e:	ea4f 7002 	mov.w	r0, r2, lsl #28
  402fa2:	bf1f      	itttt	ne
  402fa4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  402fa8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  402fac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  402fb0:	4770      	bxne	lr
  402fb2:	f092 0f00 	teq	r2, #0
  402fb6:	bf14      	ite	ne
  402fb8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  402fbc:	4770      	bxeq	lr
  402fbe:	b530      	push	{r4, r5, lr}
  402fc0:	f44f 7460 	mov.w	r4, #896	; 0x380
  402fc4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  402fc8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  402fcc:	e720      	b.n	402e10 <__adddf3+0x138>
  402fce:	bf00      	nop

00402fd0 <__aeabi_ul2d>:
  402fd0:	ea50 0201 	orrs.w	r2, r0, r1
  402fd4:	bf08      	it	eq
  402fd6:	4770      	bxeq	lr
  402fd8:	b530      	push	{r4, r5, lr}
  402fda:	f04f 0500 	mov.w	r5, #0
  402fde:	e00a      	b.n	402ff6 <__aeabi_l2d+0x16>

00402fe0 <__aeabi_l2d>:
  402fe0:	ea50 0201 	orrs.w	r2, r0, r1
  402fe4:	bf08      	it	eq
  402fe6:	4770      	bxeq	lr
  402fe8:	b530      	push	{r4, r5, lr}
  402fea:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  402fee:	d502      	bpl.n	402ff6 <__aeabi_l2d+0x16>
  402ff0:	4240      	negs	r0, r0
  402ff2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  402ff6:	f44f 6480 	mov.w	r4, #1024	; 0x400
  402ffa:	f104 0432 	add.w	r4, r4, #50	; 0x32
  402ffe:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  403002:	f43f aedc 	beq.w	402dbe <__adddf3+0xe6>
  403006:	f04f 0203 	mov.w	r2, #3
  40300a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40300e:	bf18      	it	ne
  403010:	3203      	addne	r2, #3
  403012:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  403016:	bf18      	it	ne
  403018:	3203      	addne	r2, #3
  40301a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  40301e:	f1c2 0320 	rsb	r3, r2, #32
  403022:	fa00 fc03 	lsl.w	ip, r0, r3
  403026:	fa20 f002 	lsr.w	r0, r0, r2
  40302a:	fa01 fe03 	lsl.w	lr, r1, r3
  40302e:	ea40 000e 	orr.w	r0, r0, lr
  403032:	fa21 f102 	lsr.w	r1, r1, r2
  403036:	4414      	add	r4, r2
  403038:	e6c1      	b.n	402dbe <__adddf3+0xe6>
  40303a:	bf00      	nop

0040303c <__aeabi_dmul>:
  40303c:	b570      	push	{r4, r5, r6, lr}
  40303e:	f04f 0cff 	mov.w	ip, #255	; 0xff
  403042:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  403046:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40304a:	bf1d      	ittte	ne
  40304c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  403050:	ea94 0f0c 	teqne	r4, ip
  403054:	ea95 0f0c 	teqne	r5, ip
  403058:	f000 f8de 	bleq	403218 <__aeabi_dmul+0x1dc>
  40305c:	442c      	add	r4, r5
  40305e:	ea81 0603 	eor.w	r6, r1, r3
  403062:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  403066:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  40306a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  40306e:	bf18      	it	ne
  403070:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  403074:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403078:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  40307c:	d038      	beq.n	4030f0 <__aeabi_dmul+0xb4>
  40307e:	fba0 ce02 	umull	ip, lr, r0, r2
  403082:	f04f 0500 	mov.w	r5, #0
  403086:	fbe1 e502 	umlal	lr, r5, r1, r2
  40308a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  40308e:	fbe0 e503 	umlal	lr, r5, r0, r3
  403092:	f04f 0600 	mov.w	r6, #0
  403096:	fbe1 5603 	umlal	r5, r6, r1, r3
  40309a:	f09c 0f00 	teq	ip, #0
  40309e:	bf18      	it	ne
  4030a0:	f04e 0e01 	orrne.w	lr, lr, #1
  4030a4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4030a8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4030ac:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4030b0:	d204      	bcs.n	4030bc <__aeabi_dmul+0x80>
  4030b2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4030b6:	416d      	adcs	r5, r5
  4030b8:	eb46 0606 	adc.w	r6, r6, r6
  4030bc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4030c0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4030c4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4030c8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4030cc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4030d0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4030d4:	bf88      	it	hi
  4030d6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4030da:	d81e      	bhi.n	40311a <__aeabi_dmul+0xde>
  4030dc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4030e0:	bf08      	it	eq
  4030e2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4030e6:	f150 0000 	adcs.w	r0, r0, #0
  4030ea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4030ee:	bd70      	pop	{r4, r5, r6, pc}
  4030f0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  4030f4:	ea46 0101 	orr.w	r1, r6, r1
  4030f8:	ea40 0002 	orr.w	r0, r0, r2
  4030fc:	ea81 0103 	eor.w	r1, r1, r3
  403100:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  403104:	bfc2      	ittt	gt
  403106:	ebd4 050c 	rsbsgt	r5, r4, ip
  40310a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  40310e:	bd70      	popgt	{r4, r5, r6, pc}
  403110:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403114:	f04f 0e00 	mov.w	lr, #0
  403118:	3c01      	subs	r4, #1
  40311a:	f300 80ab 	bgt.w	403274 <__aeabi_dmul+0x238>
  40311e:	f114 0f36 	cmn.w	r4, #54	; 0x36
  403122:	bfde      	ittt	le
  403124:	2000      	movle	r0, #0
  403126:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  40312a:	bd70      	pople	{r4, r5, r6, pc}
  40312c:	f1c4 0400 	rsb	r4, r4, #0
  403130:	3c20      	subs	r4, #32
  403132:	da35      	bge.n	4031a0 <__aeabi_dmul+0x164>
  403134:	340c      	adds	r4, #12
  403136:	dc1b      	bgt.n	403170 <__aeabi_dmul+0x134>
  403138:	f104 0414 	add.w	r4, r4, #20
  40313c:	f1c4 0520 	rsb	r5, r4, #32
  403140:	fa00 f305 	lsl.w	r3, r0, r5
  403144:	fa20 f004 	lsr.w	r0, r0, r4
  403148:	fa01 f205 	lsl.w	r2, r1, r5
  40314c:	ea40 0002 	orr.w	r0, r0, r2
  403150:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  403154:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  403158:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  40315c:	fa21 f604 	lsr.w	r6, r1, r4
  403160:	eb42 0106 	adc.w	r1, r2, r6
  403164:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403168:	bf08      	it	eq
  40316a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40316e:	bd70      	pop	{r4, r5, r6, pc}
  403170:	f1c4 040c 	rsb	r4, r4, #12
  403174:	f1c4 0520 	rsb	r5, r4, #32
  403178:	fa00 f304 	lsl.w	r3, r0, r4
  40317c:	fa20 f005 	lsr.w	r0, r0, r5
  403180:	fa01 f204 	lsl.w	r2, r1, r4
  403184:	ea40 0002 	orr.w	r0, r0, r2
  403188:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40318c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  403190:	f141 0100 	adc.w	r1, r1, #0
  403194:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  403198:	bf08      	it	eq
  40319a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  40319e:	bd70      	pop	{r4, r5, r6, pc}
  4031a0:	f1c4 0520 	rsb	r5, r4, #32
  4031a4:	fa00 f205 	lsl.w	r2, r0, r5
  4031a8:	ea4e 0e02 	orr.w	lr, lr, r2
  4031ac:	fa20 f304 	lsr.w	r3, r0, r4
  4031b0:	fa01 f205 	lsl.w	r2, r1, r5
  4031b4:	ea43 0302 	orr.w	r3, r3, r2
  4031b8:	fa21 f004 	lsr.w	r0, r1, r4
  4031bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4031c0:	fa21 f204 	lsr.w	r2, r1, r4
  4031c4:	ea20 0002 	bic.w	r0, r0, r2
  4031c8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4031cc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4031d0:	bf08      	it	eq
  4031d2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4031d6:	bd70      	pop	{r4, r5, r6, pc}
  4031d8:	f094 0f00 	teq	r4, #0
  4031dc:	d10f      	bne.n	4031fe <__aeabi_dmul+0x1c2>
  4031de:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4031e2:	0040      	lsls	r0, r0, #1
  4031e4:	eb41 0101 	adc.w	r1, r1, r1
  4031e8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4031ec:	bf08      	it	eq
  4031ee:	3c01      	subeq	r4, #1
  4031f0:	d0f7      	beq.n	4031e2 <__aeabi_dmul+0x1a6>
  4031f2:	ea41 0106 	orr.w	r1, r1, r6
  4031f6:	f095 0f00 	teq	r5, #0
  4031fa:	bf18      	it	ne
  4031fc:	4770      	bxne	lr
  4031fe:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  403202:	0052      	lsls	r2, r2, #1
  403204:	eb43 0303 	adc.w	r3, r3, r3
  403208:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  40320c:	bf08      	it	eq
  40320e:	3d01      	subeq	r5, #1
  403210:	d0f7      	beq.n	403202 <__aeabi_dmul+0x1c6>
  403212:	ea43 0306 	orr.w	r3, r3, r6
  403216:	4770      	bx	lr
  403218:	ea94 0f0c 	teq	r4, ip
  40321c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  403220:	bf18      	it	ne
  403222:	ea95 0f0c 	teqne	r5, ip
  403226:	d00c      	beq.n	403242 <__aeabi_dmul+0x206>
  403228:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40322c:	bf18      	it	ne
  40322e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  403232:	d1d1      	bne.n	4031d8 <__aeabi_dmul+0x19c>
  403234:	ea81 0103 	eor.w	r1, r1, r3
  403238:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  40323c:	f04f 0000 	mov.w	r0, #0
  403240:	bd70      	pop	{r4, r5, r6, pc}
  403242:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  403246:	bf06      	itte	eq
  403248:	4610      	moveq	r0, r2
  40324a:	4619      	moveq	r1, r3
  40324c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  403250:	d019      	beq.n	403286 <__aeabi_dmul+0x24a>
  403252:	ea94 0f0c 	teq	r4, ip
  403256:	d102      	bne.n	40325e <__aeabi_dmul+0x222>
  403258:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  40325c:	d113      	bne.n	403286 <__aeabi_dmul+0x24a>
  40325e:	ea95 0f0c 	teq	r5, ip
  403262:	d105      	bne.n	403270 <__aeabi_dmul+0x234>
  403264:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  403268:	bf1c      	itt	ne
  40326a:	4610      	movne	r0, r2
  40326c:	4619      	movne	r1, r3
  40326e:	d10a      	bne.n	403286 <__aeabi_dmul+0x24a>
  403270:	ea81 0103 	eor.w	r1, r1, r3
  403274:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  403278:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40327c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  403280:	f04f 0000 	mov.w	r0, #0
  403284:	bd70      	pop	{r4, r5, r6, pc}
  403286:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  40328a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  40328e:	bd70      	pop	{r4, r5, r6, pc}

00403290 <__aeabi_ddiv>:
  403290:	b570      	push	{r4, r5, r6, lr}
  403292:	f04f 0cff 	mov.w	ip, #255	; 0xff
  403296:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40329a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  40329e:	bf1d      	ittte	ne
  4032a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4032a4:	ea94 0f0c 	teqne	r4, ip
  4032a8:	ea95 0f0c 	teqne	r5, ip
  4032ac:	f000 f8a7 	bleq	4033fe <__aeabi_ddiv+0x16e>
  4032b0:	eba4 0405 	sub.w	r4, r4, r5
  4032b4:	ea81 0e03 	eor.w	lr, r1, r3
  4032b8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4032bc:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4032c0:	f000 8088 	beq.w	4033d4 <__aeabi_ddiv+0x144>
  4032c4:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4032c8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4032cc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4032d0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4032d4:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4032d8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4032dc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4032e0:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4032e4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  4032e8:	429d      	cmp	r5, r3
  4032ea:	bf08      	it	eq
  4032ec:	4296      	cmpeq	r6, r2
  4032ee:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  4032f2:	f504 7440 	add.w	r4, r4, #768	; 0x300
  4032f6:	d202      	bcs.n	4032fe <__aeabi_ddiv+0x6e>
  4032f8:	085b      	lsrs	r3, r3, #1
  4032fa:	ea4f 0232 	mov.w	r2, r2, rrx
  4032fe:	1ab6      	subs	r6, r6, r2
  403300:	eb65 0503 	sbc.w	r5, r5, r3
  403304:	085b      	lsrs	r3, r3, #1
  403306:	ea4f 0232 	mov.w	r2, r2, rrx
  40330a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  40330e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  403312:	ebb6 0e02 	subs.w	lr, r6, r2
  403316:	eb75 0e03 	sbcs.w	lr, r5, r3
  40331a:	bf22      	ittt	cs
  40331c:	1ab6      	subcs	r6, r6, r2
  40331e:	4675      	movcs	r5, lr
  403320:	ea40 000c 	orrcs.w	r0, r0, ip
  403324:	085b      	lsrs	r3, r3, #1
  403326:	ea4f 0232 	mov.w	r2, r2, rrx
  40332a:	ebb6 0e02 	subs.w	lr, r6, r2
  40332e:	eb75 0e03 	sbcs.w	lr, r5, r3
  403332:	bf22      	ittt	cs
  403334:	1ab6      	subcs	r6, r6, r2
  403336:	4675      	movcs	r5, lr
  403338:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  40333c:	085b      	lsrs	r3, r3, #1
  40333e:	ea4f 0232 	mov.w	r2, r2, rrx
  403342:	ebb6 0e02 	subs.w	lr, r6, r2
  403346:	eb75 0e03 	sbcs.w	lr, r5, r3
  40334a:	bf22      	ittt	cs
  40334c:	1ab6      	subcs	r6, r6, r2
  40334e:	4675      	movcs	r5, lr
  403350:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  403354:	085b      	lsrs	r3, r3, #1
  403356:	ea4f 0232 	mov.w	r2, r2, rrx
  40335a:	ebb6 0e02 	subs.w	lr, r6, r2
  40335e:	eb75 0e03 	sbcs.w	lr, r5, r3
  403362:	bf22      	ittt	cs
  403364:	1ab6      	subcs	r6, r6, r2
  403366:	4675      	movcs	r5, lr
  403368:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  40336c:	ea55 0e06 	orrs.w	lr, r5, r6
  403370:	d018      	beq.n	4033a4 <__aeabi_ddiv+0x114>
  403372:	ea4f 1505 	mov.w	r5, r5, lsl #4
  403376:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  40337a:	ea4f 1606 	mov.w	r6, r6, lsl #4
  40337e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  403382:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  403386:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  40338a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  40338e:	d1c0      	bne.n	403312 <__aeabi_ddiv+0x82>
  403390:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  403394:	d10b      	bne.n	4033ae <__aeabi_ddiv+0x11e>
  403396:	ea41 0100 	orr.w	r1, r1, r0
  40339a:	f04f 0000 	mov.w	r0, #0
  40339e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4033a2:	e7b6      	b.n	403312 <__aeabi_ddiv+0x82>
  4033a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4033a8:	bf04      	itt	eq
  4033aa:	4301      	orreq	r1, r0
  4033ac:	2000      	moveq	r0, #0
  4033ae:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4033b2:	bf88      	it	hi
  4033b4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4033b8:	f63f aeaf 	bhi.w	40311a <__aeabi_dmul+0xde>
  4033bc:	ebb5 0c03 	subs.w	ip, r5, r3
  4033c0:	bf04      	itt	eq
  4033c2:	ebb6 0c02 	subseq.w	ip, r6, r2
  4033c6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4033ca:	f150 0000 	adcs.w	r0, r0, #0
  4033ce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4033d2:	bd70      	pop	{r4, r5, r6, pc}
  4033d4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4033d8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4033dc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4033e0:	bfc2      	ittt	gt
  4033e2:	ebd4 050c 	rsbsgt	r5, r4, ip
  4033e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  4033ea:	bd70      	popgt	{r4, r5, r6, pc}
  4033ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  4033f0:	f04f 0e00 	mov.w	lr, #0
  4033f4:	3c01      	subs	r4, #1
  4033f6:	e690      	b.n	40311a <__aeabi_dmul+0xde>
  4033f8:	ea45 0e06 	orr.w	lr, r5, r6
  4033fc:	e68d      	b.n	40311a <__aeabi_dmul+0xde>
  4033fe:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  403402:	ea94 0f0c 	teq	r4, ip
  403406:	bf08      	it	eq
  403408:	ea95 0f0c 	teqeq	r5, ip
  40340c:	f43f af3b 	beq.w	403286 <__aeabi_dmul+0x24a>
  403410:	ea94 0f0c 	teq	r4, ip
  403414:	d10a      	bne.n	40342c <__aeabi_ddiv+0x19c>
  403416:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40341a:	f47f af34 	bne.w	403286 <__aeabi_dmul+0x24a>
  40341e:	ea95 0f0c 	teq	r5, ip
  403422:	f47f af25 	bne.w	403270 <__aeabi_dmul+0x234>
  403426:	4610      	mov	r0, r2
  403428:	4619      	mov	r1, r3
  40342a:	e72c      	b.n	403286 <__aeabi_dmul+0x24a>
  40342c:	ea95 0f0c 	teq	r5, ip
  403430:	d106      	bne.n	403440 <__aeabi_ddiv+0x1b0>
  403432:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  403436:	f43f aefd 	beq.w	403234 <__aeabi_dmul+0x1f8>
  40343a:	4610      	mov	r0, r2
  40343c:	4619      	mov	r1, r3
  40343e:	e722      	b.n	403286 <__aeabi_dmul+0x24a>
  403440:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  403444:	bf18      	it	ne
  403446:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40344a:	f47f aec5 	bne.w	4031d8 <__aeabi_dmul+0x19c>
  40344e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  403452:	f47f af0d 	bne.w	403270 <__aeabi_dmul+0x234>
  403456:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  40345a:	f47f aeeb 	bne.w	403234 <__aeabi_dmul+0x1f8>
  40345e:	e712      	b.n	403286 <__aeabi_dmul+0x24a>

00403460 <__gedf2>:
  403460:	f04f 3cff 	mov.w	ip, #4294967295
  403464:	e006      	b.n	403474 <__cmpdf2+0x4>
  403466:	bf00      	nop

00403468 <__ledf2>:
  403468:	f04f 0c01 	mov.w	ip, #1
  40346c:	e002      	b.n	403474 <__cmpdf2+0x4>
  40346e:	bf00      	nop

00403470 <__cmpdf2>:
  403470:	f04f 0c01 	mov.w	ip, #1
  403474:	f84d cd04 	str.w	ip, [sp, #-4]!
  403478:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40347c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  403480:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  403484:	bf18      	it	ne
  403486:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  40348a:	d01b      	beq.n	4034c4 <__cmpdf2+0x54>
  40348c:	b001      	add	sp, #4
  40348e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  403492:	bf0c      	ite	eq
  403494:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  403498:	ea91 0f03 	teqne	r1, r3
  40349c:	bf02      	ittt	eq
  40349e:	ea90 0f02 	teqeq	r0, r2
  4034a2:	2000      	moveq	r0, #0
  4034a4:	4770      	bxeq	lr
  4034a6:	f110 0f00 	cmn.w	r0, #0
  4034aa:	ea91 0f03 	teq	r1, r3
  4034ae:	bf58      	it	pl
  4034b0:	4299      	cmppl	r1, r3
  4034b2:	bf08      	it	eq
  4034b4:	4290      	cmpeq	r0, r2
  4034b6:	bf2c      	ite	cs
  4034b8:	17d8      	asrcs	r0, r3, #31
  4034ba:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4034be:	f040 0001 	orr.w	r0, r0, #1
  4034c2:	4770      	bx	lr
  4034c4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4034c8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4034cc:	d102      	bne.n	4034d4 <__cmpdf2+0x64>
  4034ce:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4034d2:	d107      	bne.n	4034e4 <__cmpdf2+0x74>
  4034d4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4034d8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4034dc:	d1d6      	bne.n	40348c <__cmpdf2+0x1c>
  4034de:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4034e2:	d0d3      	beq.n	40348c <__cmpdf2+0x1c>
  4034e4:	f85d 0b04 	ldr.w	r0, [sp], #4
  4034e8:	4770      	bx	lr
  4034ea:	bf00      	nop

004034ec <__aeabi_cdrcmple>:
  4034ec:	4684      	mov	ip, r0
  4034ee:	4610      	mov	r0, r2
  4034f0:	4662      	mov	r2, ip
  4034f2:	468c      	mov	ip, r1
  4034f4:	4619      	mov	r1, r3
  4034f6:	4663      	mov	r3, ip
  4034f8:	e000      	b.n	4034fc <__aeabi_cdcmpeq>
  4034fa:	bf00      	nop

004034fc <__aeabi_cdcmpeq>:
  4034fc:	b501      	push	{r0, lr}
  4034fe:	f7ff ffb7 	bl	403470 <__cmpdf2>
  403502:	2800      	cmp	r0, #0
  403504:	bf48      	it	mi
  403506:	f110 0f00 	cmnmi.w	r0, #0
  40350a:	bd01      	pop	{r0, pc}

0040350c <__aeabi_dcmpeq>:
  40350c:	f84d ed08 	str.w	lr, [sp, #-8]!
  403510:	f7ff fff4 	bl	4034fc <__aeabi_cdcmpeq>
  403514:	bf0c      	ite	eq
  403516:	2001      	moveq	r0, #1
  403518:	2000      	movne	r0, #0
  40351a:	f85d fb08 	ldr.w	pc, [sp], #8
  40351e:	bf00      	nop

00403520 <__aeabi_dcmplt>:
  403520:	f84d ed08 	str.w	lr, [sp, #-8]!
  403524:	f7ff ffea 	bl	4034fc <__aeabi_cdcmpeq>
  403528:	bf34      	ite	cc
  40352a:	2001      	movcc	r0, #1
  40352c:	2000      	movcs	r0, #0
  40352e:	f85d fb08 	ldr.w	pc, [sp], #8
  403532:	bf00      	nop

00403534 <__aeabi_dcmple>:
  403534:	f84d ed08 	str.w	lr, [sp, #-8]!
  403538:	f7ff ffe0 	bl	4034fc <__aeabi_cdcmpeq>
  40353c:	bf94      	ite	ls
  40353e:	2001      	movls	r0, #1
  403540:	2000      	movhi	r0, #0
  403542:	f85d fb08 	ldr.w	pc, [sp], #8
  403546:	bf00      	nop

00403548 <__aeabi_dcmpge>:
  403548:	f84d ed08 	str.w	lr, [sp, #-8]!
  40354c:	f7ff ffce 	bl	4034ec <__aeabi_cdrcmple>
  403550:	bf94      	ite	ls
  403552:	2001      	movls	r0, #1
  403554:	2000      	movhi	r0, #0
  403556:	f85d fb08 	ldr.w	pc, [sp], #8
  40355a:	bf00      	nop

0040355c <__aeabi_dcmpgt>:
  40355c:	f84d ed08 	str.w	lr, [sp, #-8]!
  403560:	f7ff ffc4 	bl	4034ec <__aeabi_cdrcmple>
  403564:	bf34      	ite	cc
  403566:	2001      	movcc	r0, #1
  403568:	2000      	movcs	r0, #0
  40356a:	f85d fb08 	ldr.w	pc, [sp], #8
  40356e:	bf00      	nop

00403570 <__aeabi_d2iz>:
  403570:	ea4f 0241 	mov.w	r2, r1, lsl #1
  403574:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  403578:	d215      	bcs.n	4035a6 <__aeabi_d2iz+0x36>
  40357a:	d511      	bpl.n	4035a0 <__aeabi_d2iz+0x30>
  40357c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  403580:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  403584:	d912      	bls.n	4035ac <__aeabi_d2iz+0x3c>
  403586:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40358a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  40358e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  403592:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  403596:	fa23 f002 	lsr.w	r0, r3, r2
  40359a:	bf18      	it	ne
  40359c:	4240      	negne	r0, r0
  40359e:	4770      	bx	lr
  4035a0:	f04f 0000 	mov.w	r0, #0
  4035a4:	4770      	bx	lr
  4035a6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4035aa:	d105      	bne.n	4035b8 <__aeabi_d2iz+0x48>
  4035ac:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4035b0:	bf08      	it	eq
  4035b2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4035b6:	4770      	bx	lr
  4035b8:	f04f 0000 	mov.w	r0, #0
  4035bc:	4770      	bx	lr
  4035be:	bf00      	nop

004035c0 <__aeabi_d2f>:
  4035c0:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4035c4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  4035c8:	bf24      	itt	cs
  4035ca:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  4035ce:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  4035d2:	d90d      	bls.n	4035f0 <__aeabi_d2f+0x30>
  4035d4:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  4035d8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  4035dc:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  4035e0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  4035e4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  4035e8:	bf08      	it	eq
  4035ea:	f020 0001 	biceq.w	r0, r0, #1
  4035ee:	4770      	bx	lr
  4035f0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  4035f4:	d121      	bne.n	40363a <__aeabi_d2f+0x7a>
  4035f6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  4035fa:	bfbc      	itt	lt
  4035fc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  403600:	4770      	bxlt	lr
  403602:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  403606:	ea4f 5252 	mov.w	r2, r2, lsr #21
  40360a:	f1c2 0218 	rsb	r2, r2, #24
  40360e:	f1c2 0c20 	rsb	ip, r2, #32
  403612:	fa10 f30c 	lsls.w	r3, r0, ip
  403616:	fa20 f002 	lsr.w	r0, r0, r2
  40361a:	bf18      	it	ne
  40361c:	f040 0001 	orrne.w	r0, r0, #1
  403620:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  403624:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  403628:	fa03 fc0c 	lsl.w	ip, r3, ip
  40362c:	ea40 000c 	orr.w	r0, r0, ip
  403630:	fa23 f302 	lsr.w	r3, r3, r2
  403634:	ea4f 0343 	mov.w	r3, r3, lsl #1
  403638:	e7cc      	b.n	4035d4 <__aeabi_d2f+0x14>
  40363a:	ea7f 5362 	mvns.w	r3, r2, asr #21
  40363e:	d107      	bne.n	403650 <__aeabi_d2f+0x90>
  403640:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  403644:	bf1e      	ittt	ne
  403646:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  40364a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  40364e:	4770      	bxne	lr
  403650:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  403654:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  403658:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40365c:	4770      	bx	lr
  40365e:	bf00      	nop

00403660 <__libc_init_array>:
  403660:	b570      	push	{r4, r5, r6, lr}
  403662:	4e0d      	ldr	r6, [pc, #52]	; (403698 <__libc_init_array+0x38>)
  403664:	4c0d      	ldr	r4, [pc, #52]	; (40369c <__libc_init_array+0x3c>)
  403666:	1ba4      	subs	r4, r4, r6
  403668:	10a4      	asrs	r4, r4, #2
  40366a:	2500      	movs	r5, #0
  40366c:	42a5      	cmp	r5, r4
  40366e:	d109      	bne.n	403684 <__libc_init_array+0x24>
  403670:	4e0b      	ldr	r6, [pc, #44]	; (4036a0 <__libc_init_array+0x40>)
  403672:	4c0c      	ldr	r4, [pc, #48]	; (4036a4 <__libc_init_array+0x44>)
  403674:	f003 f8a0 	bl	4067b8 <_init>
  403678:	1ba4      	subs	r4, r4, r6
  40367a:	10a4      	asrs	r4, r4, #2
  40367c:	2500      	movs	r5, #0
  40367e:	42a5      	cmp	r5, r4
  403680:	d105      	bne.n	40368e <__libc_init_array+0x2e>
  403682:	bd70      	pop	{r4, r5, r6, pc}
  403684:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
  403688:	4798      	blx	r3
  40368a:	3501      	adds	r5, #1
  40368c:	e7ee      	b.n	40366c <__libc_init_array+0xc>
  40368e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
  403692:	4798      	blx	r3
  403694:	3501      	adds	r5, #1
  403696:	e7f2      	b.n	40367e <__libc_init_array+0x1e>
  403698:	004067c4 	.word	0x004067c4
  40369c:	004067c4 	.word	0x004067c4
  4036a0:	004067c4 	.word	0x004067c4
  4036a4:	004067c8 	.word	0x004067c8

004036a8 <memcpy>:
  4036a8:	b510      	push	{r4, lr}
  4036aa:	1e43      	subs	r3, r0, #1
  4036ac:	440a      	add	r2, r1
  4036ae:	4291      	cmp	r1, r2
  4036b0:	d100      	bne.n	4036b4 <memcpy+0xc>
  4036b2:	bd10      	pop	{r4, pc}
  4036b4:	f811 4b01 	ldrb.w	r4, [r1], #1
  4036b8:	f803 4f01 	strb.w	r4, [r3, #1]!
  4036bc:	e7f7      	b.n	4036ae <memcpy+0x6>

004036be <memset>:
  4036be:	4402      	add	r2, r0
  4036c0:	4603      	mov	r3, r0
  4036c2:	4293      	cmp	r3, r2
  4036c4:	d100      	bne.n	4036c8 <memset+0xa>
  4036c6:	4770      	bx	lr
  4036c8:	f803 1b01 	strb.w	r1, [r3], #1
  4036cc:	e7f9      	b.n	4036c2 <memset+0x4>

004036ce <__cvt>:
  4036ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4036d2:	b088      	sub	sp, #32
  4036d4:	2b00      	cmp	r3, #0
  4036d6:	9f14      	ldr	r7, [sp, #80]	; 0x50
  4036d8:	9912      	ldr	r1, [sp, #72]	; 0x48
  4036da:	9d10      	ldr	r5, [sp, #64]	; 0x40
  4036dc:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
  4036e0:	461e      	mov	r6, r3
  4036e2:	f027 0720 	bic.w	r7, r7, #32
  4036e6:	bfbb      	ittet	lt
  4036e8:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
  4036ec:	461e      	movlt	r6, r3
  4036ee:	2300      	movge	r3, #0
  4036f0:	232d      	movlt	r3, #45	; 0x2d
  4036f2:	2f46      	cmp	r7, #70	; 0x46
  4036f4:	4614      	mov	r4, r2
  4036f6:	700b      	strb	r3, [r1, #0]
  4036f8:	d004      	beq.n	403704 <__cvt+0x36>
  4036fa:	2f45      	cmp	r7, #69	; 0x45
  4036fc:	d100      	bne.n	403700 <__cvt+0x32>
  4036fe:	3501      	adds	r5, #1
  403700:	2302      	movs	r3, #2
  403702:	e000      	b.n	403706 <__cvt+0x38>
  403704:	2303      	movs	r3, #3
  403706:	aa07      	add	r2, sp, #28
  403708:	9204      	str	r2, [sp, #16]
  40370a:	aa06      	add	r2, sp, #24
  40370c:	9203      	str	r2, [sp, #12]
  40370e:	e88d 0428 	stmia.w	sp, {r3, r5, sl}
  403712:	4622      	mov	r2, r4
  403714:	4633      	mov	r3, r6
  403716:	f000 fd9b 	bl	404250 <_dtoa_r>
  40371a:	2f47      	cmp	r7, #71	; 0x47
  40371c:	4680      	mov	r8, r0
  40371e:	d102      	bne.n	403726 <__cvt+0x58>
  403720:	9b11      	ldr	r3, [sp, #68]	; 0x44
  403722:	07db      	lsls	r3, r3, #31
  403724:	d526      	bpl.n	403774 <__cvt+0xa6>
  403726:	2f46      	cmp	r7, #70	; 0x46
  403728:	eb08 0905 	add.w	r9, r8, r5
  40372c:	d111      	bne.n	403752 <__cvt+0x84>
  40372e:	f898 3000 	ldrb.w	r3, [r8]
  403732:	2b30      	cmp	r3, #48	; 0x30
  403734:	d10a      	bne.n	40374c <__cvt+0x7e>
  403736:	2200      	movs	r2, #0
  403738:	2300      	movs	r3, #0
  40373a:	4620      	mov	r0, r4
  40373c:	4631      	mov	r1, r6
  40373e:	f7ff fee5 	bl	40350c <__aeabi_dcmpeq>
  403742:	b918      	cbnz	r0, 40374c <__cvt+0x7e>
  403744:	f1c5 0501 	rsb	r5, r5, #1
  403748:	f8ca 5000 	str.w	r5, [sl]
  40374c:	f8da 3000 	ldr.w	r3, [sl]
  403750:	4499      	add	r9, r3
  403752:	2200      	movs	r2, #0
  403754:	2300      	movs	r3, #0
  403756:	4620      	mov	r0, r4
  403758:	4631      	mov	r1, r6
  40375a:	f7ff fed7 	bl	40350c <__aeabi_dcmpeq>
  40375e:	b938      	cbnz	r0, 403770 <__cvt+0xa2>
  403760:	2230      	movs	r2, #48	; 0x30
  403762:	9b07      	ldr	r3, [sp, #28]
  403764:	4599      	cmp	r9, r3
  403766:	d905      	bls.n	403774 <__cvt+0xa6>
  403768:	1c59      	adds	r1, r3, #1
  40376a:	9107      	str	r1, [sp, #28]
  40376c:	701a      	strb	r2, [r3, #0]
  40376e:	e7f8      	b.n	403762 <__cvt+0x94>
  403770:	f8cd 901c 	str.w	r9, [sp, #28]
  403774:	9b07      	ldr	r3, [sp, #28]
  403776:	9a15      	ldr	r2, [sp, #84]	; 0x54
  403778:	eba3 0308 	sub.w	r3, r3, r8
  40377c:	4640      	mov	r0, r8
  40377e:	6013      	str	r3, [r2, #0]
  403780:	b008      	add	sp, #32
  403782:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

00403786 <__exponent>:
  403786:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  403788:	4603      	mov	r3, r0
  40378a:	2900      	cmp	r1, #0
  40378c:	bfb8      	it	lt
  40378e:	4249      	neglt	r1, r1
  403790:	f803 2b02 	strb.w	r2, [r3], #2
  403794:	bfb4      	ite	lt
  403796:	222d      	movlt	r2, #45	; 0x2d
  403798:	222b      	movge	r2, #43	; 0x2b
  40379a:	2909      	cmp	r1, #9
  40379c:	7042      	strb	r2, [r0, #1]
  40379e:	dd20      	ble.n	4037e2 <__exponent+0x5c>
  4037a0:	f10d 0207 	add.w	r2, sp, #7
  4037a4:	4617      	mov	r7, r2
  4037a6:	260a      	movs	r6, #10
  4037a8:	fb91 f5f6 	sdiv	r5, r1, r6
  4037ac:	fb06 1115 	mls	r1, r6, r5, r1
  4037b0:	3130      	adds	r1, #48	; 0x30
  4037b2:	2d09      	cmp	r5, #9
  4037b4:	f802 1c01 	strb.w	r1, [r2, #-1]
  4037b8:	f102 34ff 	add.w	r4, r2, #4294967295
  4037bc:	4629      	mov	r1, r5
  4037be:	dc09      	bgt.n	4037d4 <__exponent+0x4e>
  4037c0:	3130      	adds	r1, #48	; 0x30
  4037c2:	3a02      	subs	r2, #2
  4037c4:	f804 1c01 	strb.w	r1, [r4, #-1]
  4037c8:	42ba      	cmp	r2, r7
  4037ca:	461c      	mov	r4, r3
  4037cc:	d304      	bcc.n	4037d8 <__exponent+0x52>
  4037ce:	1a20      	subs	r0, r4, r0
  4037d0:	b003      	add	sp, #12
  4037d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  4037d4:	4622      	mov	r2, r4
  4037d6:	e7e7      	b.n	4037a8 <__exponent+0x22>
  4037d8:	f812 1b01 	ldrb.w	r1, [r2], #1
  4037dc:	f803 1b01 	strb.w	r1, [r3], #1
  4037e0:	e7f2      	b.n	4037c8 <__exponent+0x42>
  4037e2:	2230      	movs	r2, #48	; 0x30
  4037e4:	461c      	mov	r4, r3
  4037e6:	4411      	add	r1, r2
  4037e8:	f804 2b02 	strb.w	r2, [r4], #2
  4037ec:	7059      	strb	r1, [r3, #1]
  4037ee:	e7ee      	b.n	4037ce <__exponent+0x48>

004037f0 <_printf_float>:
  4037f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4037f4:	b091      	sub	sp, #68	; 0x44
  4037f6:	460c      	mov	r4, r1
  4037f8:	9f1a      	ldr	r7, [sp, #104]	; 0x68
  4037fa:	4693      	mov	fp, r2
  4037fc:	461e      	mov	r6, r3
  4037fe:	4605      	mov	r5, r0
  403800:	f001 fc74 	bl	4050ec <_localeconv_r>
  403804:	6803      	ldr	r3, [r0, #0]
  403806:	9309      	str	r3, [sp, #36]	; 0x24
  403808:	4618      	mov	r0, r3
  40380a:	f000 fc8d 	bl	404128 <strlen>
  40380e:	2300      	movs	r3, #0
  403810:	930e      	str	r3, [sp, #56]	; 0x38
  403812:	683b      	ldr	r3, [r7, #0]
  403814:	900a      	str	r0, [sp, #40]	; 0x28
  403816:	3307      	adds	r3, #7
  403818:	f023 0307 	bic.w	r3, r3, #7
  40381c:	f103 0208 	add.w	r2, r3, #8
  403820:	f894 8018 	ldrb.w	r8, [r4, #24]
  403824:	f8d4 a000 	ldr.w	sl, [r4]
  403828:	603a      	str	r2, [r7, #0]
  40382a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40382e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
  403832:	f8d4 904c 	ldr.w	r9, [r4, #76]	; 0x4c
  403836:	6ca7      	ldr	r7, [r4, #72]	; 0x48
  403838:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
  40383c:	930b      	str	r3, [sp, #44]	; 0x2c
  40383e:	f04f 32ff 	mov.w	r2, #4294967295
  403842:	4ba6      	ldr	r3, [pc, #664]	; (403adc <_printf_float+0x2ec>)
  403844:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403846:	4638      	mov	r0, r7
  403848:	f002 fb80 	bl	405f4c <__aeabi_dcmpun>
  40384c:	2800      	cmp	r0, #0
  40384e:	f040 81f7 	bne.w	403c40 <_printf_float+0x450>
  403852:	f04f 32ff 	mov.w	r2, #4294967295
  403856:	4ba1      	ldr	r3, [pc, #644]	; (403adc <_printf_float+0x2ec>)
  403858:	990b      	ldr	r1, [sp, #44]	; 0x2c
  40385a:	4638      	mov	r0, r7
  40385c:	f7ff fe6a 	bl	403534 <__aeabi_dcmple>
  403860:	2800      	cmp	r0, #0
  403862:	f040 81ed 	bne.w	403c40 <_printf_float+0x450>
  403866:	2200      	movs	r2, #0
  403868:	2300      	movs	r3, #0
  40386a:	4638      	mov	r0, r7
  40386c:	4649      	mov	r1, r9
  40386e:	f7ff fe57 	bl	403520 <__aeabi_dcmplt>
  403872:	b110      	cbz	r0, 40387a <_printf_float+0x8a>
  403874:	232d      	movs	r3, #45	; 0x2d
  403876:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  40387a:	4b99      	ldr	r3, [pc, #612]	; (403ae0 <_printf_float+0x2f0>)
  40387c:	4f99      	ldr	r7, [pc, #612]	; (403ae4 <_printf_float+0x2f4>)
  40387e:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
  403882:	bf98      	it	ls
  403884:	461f      	movls	r7, r3
  403886:	2303      	movs	r3, #3
  403888:	6123      	str	r3, [r4, #16]
  40388a:	f02a 0304 	bic.w	r3, sl, #4
  40388e:	6023      	str	r3, [r4, #0]
  403890:	f04f 0900 	mov.w	r9, #0
  403894:	9600      	str	r6, [sp, #0]
  403896:	465b      	mov	r3, fp
  403898:	aa0f      	add	r2, sp, #60	; 0x3c
  40389a:	4621      	mov	r1, r4
  40389c:	4628      	mov	r0, r5
  40389e:	f000 f9df 	bl	403c60 <_printf_common>
  4038a2:	3001      	adds	r0, #1
  4038a4:	f040 809a 	bne.w	4039dc <_printf_float+0x1ec>
  4038a8:	f04f 30ff 	mov.w	r0, #4294967295
  4038ac:	b011      	add	sp, #68	; 0x44
  4038ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4038b2:	6862      	ldr	r2, [r4, #4]
  4038b4:	1c53      	adds	r3, r2, #1
  4038b6:	a80e      	add	r0, sp, #56	; 0x38
  4038b8:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
  4038bc:	f10d 0e34 	add.w	lr, sp, #52	; 0x34
  4038c0:	d141      	bne.n	403946 <_printf_float+0x156>
  4038c2:	2206      	movs	r2, #6
  4038c4:	6062      	str	r2, [r4, #4]
  4038c6:	6023      	str	r3, [r4, #0]
  4038c8:	2100      	movs	r1, #0
  4038ca:	f10d 0233 	add.w	r2, sp, #51	; 0x33
  4038ce:	9301      	str	r3, [sp, #4]
  4038d0:	6863      	ldr	r3, [r4, #4]
  4038d2:	9005      	str	r0, [sp, #20]
  4038d4:	9202      	str	r2, [sp, #8]
  4038d6:	9300      	str	r3, [sp, #0]
  4038d8:	463a      	mov	r2, r7
  4038da:	464b      	mov	r3, r9
  4038dc:	9106      	str	r1, [sp, #24]
  4038de:	f8cd 8010 	str.w	r8, [sp, #16]
  4038e2:	f8cd e00c 	str.w	lr, [sp, #12]
  4038e6:	4628      	mov	r0, r5
  4038e8:	f7ff fef1 	bl	4036ce <__cvt>
  4038ec:	f008 03df 	and.w	r3, r8, #223	; 0xdf
  4038f0:	2b47      	cmp	r3, #71	; 0x47
  4038f2:	4607      	mov	r7, r0
  4038f4:	d109      	bne.n	40390a <_printf_float+0x11a>
  4038f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4038f8:	1cd8      	adds	r0, r3, #3
  4038fa:	db02      	blt.n	403902 <_printf_float+0x112>
  4038fc:	6862      	ldr	r2, [r4, #4]
  4038fe:	4293      	cmp	r3, r2
  403900:	dd59      	ble.n	4039b6 <_printf_float+0x1c6>
  403902:	f1a8 0802 	sub.w	r8, r8, #2
  403906:	fa5f f888 	uxtb.w	r8, r8
  40390a:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
  40390e:	990d      	ldr	r1, [sp, #52]	; 0x34
  403910:	d836      	bhi.n	403980 <_printf_float+0x190>
  403912:	3901      	subs	r1, #1
  403914:	4642      	mov	r2, r8
  403916:	f104 0050 	add.w	r0, r4, #80	; 0x50
  40391a:	910d      	str	r1, [sp, #52]	; 0x34
  40391c:	f7ff ff33 	bl	403786 <__exponent>
  403920:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403922:	1883      	adds	r3, r0, r2
  403924:	2a01      	cmp	r2, #1
  403926:	4681      	mov	r9, r0
  403928:	6123      	str	r3, [r4, #16]
  40392a:	dc02      	bgt.n	403932 <_printf_float+0x142>
  40392c:	6822      	ldr	r2, [r4, #0]
  40392e:	07d1      	lsls	r1, r2, #31
  403930:	d501      	bpl.n	403936 <_printf_float+0x146>
  403932:	3301      	adds	r3, #1
  403934:	6123      	str	r3, [r4, #16]
  403936:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
  40393a:	2b00      	cmp	r3, #0
  40393c:	d0aa      	beq.n	403894 <_printf_float+0xa4>
  40393e:	232d      	movs	r3, #45	; 0x2d
  403940:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  403944:	e7a6      	b.n	403894 <_printf_float+0xa4>
  403946:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
  40394a:	d002      	beq.n	403952 <_printf_float+0x162>
  40394c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
  403950:	d1b9      	bne.n	4038c6 <_printf_float+0xd6>
  403952:	b19a      	cbz	r2, 40397c <_printf_float+0x18c>
  403954:	2100      	movs	r1, #0
  403956:	9106      	str	r1, [sp, #24]
  403958:	f10d 0133 	add.w	r1, sp, #51	; 0x33
  40395c:	e88d 000c 	stmia.w	sp, {r2, r3}
  403960:	6023      	str	r3, [r4, #0]
  403962:	9005      	str	r0, [sp, #20]
  403964:	463a      	mov	r2, r7
  403966:	f8cd 8010 	str.w	r8, [sp, #16]
  40396a:	f8cd e00c 	str.w	lr, [sp, #12]
  40396e:	9102      	str	r1, [sp, #8]
  403970:	464b      	mov	r3, r9
  403972:	4628      	mov	r0, r5
  403974:	f7ff feab 	bl	4036ce <__cvt>
  403978:	4607      	mov	r7, r0
  40397a:	e7bc      	b.n	4038f6 <_printf_float+0x106>
  40397c:	2201      	movs	r2, #1
  40397e:	e7a1      	b.n	4038c4 <_printf_float+0xd4>
  403980:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
  403984:	d119      	bne.n	4039ba <_printf_float+0x1ca>
  403986:	2900      	cmp	r1, #0
  403988:	6863      	ldr	r3, [r4, #4]
  40398a:	dd0c      	ble.n	4039a6 <_printf_float+0x1b6>
  40398c:	6121      	str	r1, [r4, #16]
  40398e:	b913      	cbnz	r3, 403996 <_printf_float+0x1a6>
  403990:	6822      	ldr	r2, [r4, #0]
  403992:	07d2      	lsls	r2, r2, #31
  403994:	d502      	bpl.n	40399c <_printf_float+0x1ac>
  403996:	3301      	adds	r3, #1
  403998:	440b      	add	r3, r1
  40399a:	6123      	str	r3, [r4, #16]
  40399c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40399e:	65a3      	str	r3, [r4, #88]	; 0x58
  4039a0:	f04f 0900 	mov.w	r9, #0
  4039a4:	e7c7      	b.n	403936 <_printf_float+0x146>
  4039a6:	b913      	cbnz	r3, 4039ae <_printf_float+0x1be>
  4039a8:	6822      	ldr	r2, [r4, #0]
  4039aa:	07d0      	lsls	r0, r2, #31
  4039ac:	d501      	bpl.n	4039b2 <_printf_float+0x1c2>
  4039ae:	3302      	adds	r3, #2
  4039b0:	e7f3      	b.n	40399a <_printf_float+0x1aa>
  4039b2:	2301      	movs	r3, #1
  4039b4:	e7f1      	b.n	40399a <_printf_float+0x1aa>
  4039b6:	f04f 0867 	mov.w	r8, #103	; 0x67
  4039ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4039bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  4039be:	4293      	cmp	r3, r2
  4039c0:	db05      	blt.n	4039ce <_printf_float+0x1de>
  4039c2:	6822      	ldr	r2, [r4, #0]
  4039c4:	6123      	str	r3, [r4, #16]
  4039c6:	07d1      	lsls	r1, r2, #31
  4039c8:	d5e8      	bpl.n	40399c <_printf_float+0x1ac>
  4039ca:	3301      	adds	r3, #1
  4039cc:	e7e5      	b.n	40399a <_printf_float+0x1aa>
  4039ce:	2b00      	cmp	r3, #0
  4039d0:	bfd4      	ite	le
  4039d2:	f1c3 0302 	rsble	r3, r3, #2
  4039d6:	2301      	movgt	r3, #1
  4039d8:	4413      	add	r3, r2
  4039da:	e7de      	b.n	40399a <_printf_float+0x1aa>
  4039dc:	6823      	ldr	r3, [r4, #0]
  4039de:	055a      	lsls	r2, r3, #21
  4039e0:	d407      	bmi.n	4039f2 <_printf_float+0x202>
  4039e2:	6923      	ldr	r3, [r4, #16]
  4039e4:	463a      	mov	r2, r7
  4039e6:	4659      	mov	r1, fp
  4039e8:	4628      	mov	r0, r5
  4039ea:	47b0      	blx	r6
  4039ec:	3001      	adds	r0, #1
  4039ee:	d12a      	bne.n	403a46 <_printf_float+0x256>
  4039f0:	e75a      	b.n	4038a8 <_printf_float+0xb8>
  4039f2:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
  4039f6:	f240 80dc 	bls.w	403bb2 <_printf_float+0x3c2>
  4039fa:	2200      	movs	r2, #0
  4039fc:	2300      	movs	r3, #0
  4039fe:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  403a02:	f7ff fd83 	bl	40350c <__aeabi_dcmpeq>
  403a06:	2800      	cmp	r0, #0
  403a08:	d039      	beq.n	403a7e <_printf_float+0x28e>
  403a0a:	2301      	movs	r3, #1
  403a0c:	4a36      	ldr	r2, [pc, #216]	; (403ae8 <_printf_float+0x2f8>)
  403a0e:	4659      	mov	r1, fp
  403a10:	4628      	mov	r0, r5
  403a12:	47b0      	blx	r6
  403a14:	3001      	adds	r0, #1
  403a16:	f43f af47 	beq.w	4038a8 <_printf_float+0xb8>
  403a1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403a1c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403a1e:	429a      	cmp	r2, r3
  403a20:	db02      	blt.n	403a28 <_printf_float+0x238>
  403a22:	6823      	ldr	r3, [r4, #0]
  403a24:	07d8      	lsls	r0, r3, #31
  403a26:	d50e      	bpl.n	403a46 <_printf_float+0x256>
  403a28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403a2c:	4659      	mov	r1, fp
  403a2e:	4628      	mov	r0, r5
  403a30:	47b0      	blx	r6
  403a32:	3001      	adds	r0, #1
  403a34:	f43f af38 	beq.w	4038a8 <_printf_float+0xb8>
  403a38:	2700      	movs	r7, #0
  403a3a:	f104 081a 	add.w	r8, r4, #26
  403a3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403a40:	3b01      	subs	r3, #1
  403a42:	429f      	cmp	r7, r3
  403a44:	db11      	blt.n	403a6a <_printf_float+0x27a>
  403a46:	6823      	ldr	r3, [r4, #0]
  403a48:	079f      	lsls	r7, r3, #30
  403a4a:	d508      	bpl.n	403a5e <_printf_float+0x26e>
  403a4c:	2700      	movs	r7, #0
  403a4e:	f104 0819 	add.w	r8, r4, #25
  403a52:	68e3      	ldr	r3, [r4, #12]
  403a54:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403a56:	1a9b      	subs	r3, r3, r2
  403a58:	429f      	cmp	r7, r3
  403a5a:	f2c0 80e7 	blt.w	403c2c <_printf_float+0x43c>
  403a5e:	68e0      	ldr	r0, [r4, #12]
  403a60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403a62:	4298      	cmp	r0, r3
  403a64:	bfb8      	it	lt
  403a66:	4618      	movlt	r0, r3
  403a68:	e720      	b.n	4038ac <_printf_float+0xbc>
  403a6a:	2301      	movs	r3, #1
  403a6c:	4642      	mov	r2, r8
  403a6e:	4659      	mov	r1, fp
  403a70:	4628      	mov	r0, r5
  403a72:	47b0      	blx	r6
  403a74:	3001      	adds	r0, #1
  403a76:	f43f af17 	beq.w	4038a8 <_printf_float+0xb8>
  403a7a:	3701      	adds	r7, #1
  403a7c:	e7df      	b.n	403a3e <_printf_float+0x24e>
  403a7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a80:	2b00      	cmp	r3, #0
  403a82:	dc33      	bgt.n	403aec <_printf_float+0x2fc>
  403a84:	2301      	movs	r3, #1
  403a86:	4a18      	ldr	r2, [pc, #96]	; (403ae8 <_printf_float+0x2f8>)
  403a88:	4659      	mov	r1, fp
  403a8a:	4628      	mov	r0, r5
  403a8c:	47b0      	blx	r6
  403a8e:	3001      	adds	r0, #1
  403a90:	f43f af0a 	beq.w	4038a8 <_printf_float+0xb8>
  403a94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403a96:	b923      	cbnz	r3, 403aa2 <_printf_float+0x2b2>
  403a98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403a9a:	b913      	cbnz	r3, 403aa2 <_printf_float+0x2b2>
  403a9c:	6823      	ldr	r3, [r4, #0]
  403a9e:	07d9      	lsls	r1, r3, #31
  403aa0:	d5d1      	bpl.n	403a46 <_printf_float+0x256>
  403aa2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403aa4:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403aa6:	4659      	mov	r1, fp
  403aa8:	4628      	mov	r0, r5
  403aaa:	47b0      	blx	r6
  403aac:	3001      	adds	r0, #1
  403aae:	f43f aefb 	beq.w	4038a8 <_printf_float+0xb8>
  403ab2:	f04f 0800 	mov.w	r8, #0
  403ab6:	f104 091a 	add.w	r9, r4, #26
  403aba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403abc:	425b      	negs	r3, r3
  403abe:	4598      	cmp	r8, r3
  403ac0:	db01      	blt.n	403ac6 <_printf_float+0x2d6>
  403ac2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403ac4:	e78e      	b.n	4039e4 <_printf_float+0x1f4>
  403ac6:	2301      	movs	r3, #1
  403ac8:	464a      	mov	r2, r9
  403aca:	4659      	mov	r1, fp
  403acc:	4628      	mov	r0, r5
  403ace:	47b0      	blx	r6
  403ad0:	3001      	adds	r0, #1
  403ad2:	f43f aee9 	beq.w	4038a8 <_printf_float+0xb8>
  403ad6:	f108 0801 	add.w	r8, r8, #1
  403ada:	e7ee      	b.n	403aba <_printf_float+0x2ca>
  403adc:	7fefffff 	.word	0x7fefffff
  403ae0:	004064fc 	.word	0x004064fc
  403ae4:	00406500 	.word	0x00406500
  403ae8:	0040650c 	.word	0x0040650c
  403aec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403aee:	6da3      	ldr	r3, [r4, #88]	; 0x58
  403af0:	429a      	cmp	r2, r3
  403af2:	bfa8      	it	ge
  403af4:	461a      	movge	r2, r3
  403af6:	2a00      	cmp	r2, #0
  403af8:	4690      	mov	r8, r2
  403afa:	dc36      	bgt.n	403b6a <_printf_float+0x37a>
  403afc:	f104 031a 	add.w	r3, r4, #26
  403b00:	f04f 0a00 	mov.w	sl, #0
  403b04:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  403b08:	930b      	str	r3, [sp, #44]	; 0x2c
  403b0a:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
  403b0e:	eba9 0308 	sub.w	r3, r9, r8
  403b12:	459a      	cmp	sl, r3
  403b14:	db31      	blt.n	403b7a <_printf_float+0x38a>
  403b16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403b18:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403b1a:	429a      	cmp	r2, r3
  403b1c:	db38      	blt.n	403b90 <_printf_float+0x3a0>
  403b1e:	6823      	ldr	r3, [r4, #0]
  403b20:	07da      	lsls	r2, r3, #31
  403b22:	d435      	bmi.n	403b90 <_printf_float+0x3a0>
  403b24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403b26:	990d      	ldr	r1, [sp, #52]	; 0x34
  403b28:	eba3 0209 	sub.w	r2, r3, r9
  403b2c:	eba3 0801 	sub.w	r8, r3, r1
  403b30:	4590      	cmp	r8, r2
  403b32:	bfa8      	it	ge
  403b34:	4690      	movge	r8, r2
  403b36:	f1b8 0f00 	cmp.w	r8, #0
  403b3a:	dc31      	bgt.n	403ba0 <_printf_float+0x3b0>
  403b3c:	2700      	movs	r7, #0
  403b3e:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  403b42:	f104 091a 	add.w	r9, r4, #26
  403b46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403b48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403b4a:	1a9b      	subs	r3, r3, r2
  403b4c:	eba3 0308 	sub.w	r3, r3, r8
  403b50:	429f      	cmp	r7, r3
  403b52:	f6bf af78 	bge.w	403a46 <_printf_float+0x256>
  403b56:	2301      	movs	r3, #1
  403b58:	464a      	mov	r2, r9
  403b5a:	4659      	mov	r1, fp
  403b5c:	4628      	mov	r0, r5
  403b5e:	47b0      	blx	r6
  403b60:	3001      	adds	r0, #1
  403b62:	f43f aea1 	beq.w	4038a8 <_printf_float+0xb8>
  403b66:	3701      	adds	r7, #1
  403b68:	e7ed      	b.n	403b46 <_printf_float+0x356>
  403b6a:	4613      	mov	r3, r2
  403b6c:	4659      	mov	r1, fp
  403b6e:	463a      	mov	r2, r7
  403b70:	4628      	mov	r0, r5
  403b72:	47b0      	blx	r6
  403b74:	3001      	adds	r0, #1
  403b76:	d1c1      	bne.n	403afc <_printf_float+0x30c>
  403b78:	e696      	b.n	4038a8 <_printf_float+0xb8>
  403b7a:	2301      	movs	r3, #1
  403b7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403b7e:	4659      	mov	r1, fp
  403b80:	4628      	mov	r0, r5
  403b82:	47b0      	blx	r6
  403b84:	3001      	adds	r0, #1
  403b86:	f43f ae8f 	beq.w	4038a8 <_printf_float+0xb8>
  403b8a:	f10a 0a01 	add.w	sl, sl, #1
  403b8e:	e7bc      	b.n	403b0a <_printf_float+0x31a>
  403b90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403b92:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403b94:	4659      	mov	r1, fp
  403b96:	4628      	mov	r0, r5
  403b98:	47b0      	blx	r6
  403b9a:	3001      	adds	r0, #1
  403b9c:	d1c2      	bne.n	403b24 <_printf_float+0x334>
  403b9e:	e683      	b.n	4038a8 <_printf_float+0xb8>
  403ba0:	4643      	mov	r3, r8
  403ba2:	eb07 0209 	add.w	r2, r7, r9
  403ba6:	4659      	mov	r1, fp
  403ba8:	4628      	mov	r0, r5
  403baa:	47b0      	blx	r6
  403bac:	3001      	adds	r0, #1
  403bae:	d1c5      	bne.n	403b3c <_printf_float+0x34c>
  403bb0:	e67a      	b.n	4038a8 <_printf_float+0xb8>
  403bb2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403bb4:	2a01      	cmp	r2, #1
  403bb6:	dc01      	bgt.n	403bbc <_printf_float+0x3cc>
  403bb8:	07db      	lsls	r3, r3, #31
  403bba:	d534      	bpl.n	403c26 <_printf_float+0x436>
  403bbc:	2301      	movs	r3, #1
  403bbe:	463a      	mov	r2, r7
  403bc0:	4659      	mov	r1, fp
  403bc2:	4628      	mov	r0, r5
  403bc4:	47b0      	blx	r6
  403bc6:	3001      	adds	r0, #1
  403bc8:	f43f ae6e 	beq.w	4038a8 <_printf_float+0xb8>
  403bcc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403bce:	9a09      	ldr	r2, [sp, #36]	; 0x24
  403bd0:	4659      	mov	r1, fp
  403bd2:	4628      	mov	r0, r5
  403bd4:	47b0      	blx	r6
  403bd6:	3001      	adds	r0, #1
  403bd8:	f43f ae66 	beq.w	4038a8 <_printf_float+0xb8>
  403bdc:	2200      	movs	r2, #0
  403bde:	2300      	movs	r3, #0
  403be0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  403be4:	f7ff fc92 	bl	40350c <__aeabi_dcmpeq>
  403be8:	b150      	cbz	r0, 403c00 <_printf_float+0x410>
  403bea:	2700      	movs	r7, #0
  403bec:	f104 081a 	add.w	r8, r4, #26
  403bf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403bf2:	3b01      	subs	r3, #1
  403bf4:	429f      	cmp	r7, r3
  403bf6:	db0c      	blt.n	403c12 <_printf_float+0x422>
  403bf8:	464b      	mov	r3, r9
  403bfa:	f104 0250 	add.w	r2, r4, #80	; 0x50
  403bfe:	e6f2      	b.n	4039e6 <_printf_float+0x1f6>
  403c00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403c02:	1c7a      	adds	r2, r7, #1
  403c04:	3b01      	subs	r3, #1
  403c06:	4659      	mov	r1, fp
  403c08:	4628      	mov	r0, r5
  403c0a:	47b0      	blx	r6
  403c0c:	3001      	adds	r0, #1
  403c0e:	d1f3      	bne.n	403bf8 <_printf_float+0x408>
  403c10:	e64a      	b.n	4038a8 <_printf_float+0xb8>
  403c12:	2301      	movs	r3, #1
  403c14:	4642      	mov	r2, r8
  403c16:	4659      	mov	r1, fp
  403c18:	4628      	mov	r0, r5
  403c1a:	47b0      	blx	r6
  403c1c:	3001      	adds	r0, #1
  403c1e:	f43f ae43 	beq.w	4038a8 <_printf_float+0xb8>
  403c22:	3701      	adds	r7, #1
  403c24:	e7e4      	b.n	403bf0 <_printf_float+0x400>
  403c26:	2301      	movs	r3, #1
  403c28:	463a      	mov	r2, r7
  403c2a:	e7ec      	b.n	403c06 <_printf_float+0x416>
  403c2c:	2301      	movs	r3, #1
  403c2e:	4642      	mov	r2, r8
  403c30:	4659      	mov	r1, fp
  403c32:	4628      	mov	r0, r5
  403c34:	47b0      	blx	r6
  403c36:	3001      	adds	r0, #1
  403c38:	f43f ae36 	beq.w	4038a8 <_printf_float+0xb8>
  403c3c:	3701      	adds	r7, #1
  403c3e:	e708      	b.n	403a52 <_printf_float+0x262>
  403c40:	463a      	mov	r2, r7
  403c42:	464b      	mov	r3, r9
  403c44:	4638      	mov	r0, r7
  403c46:	4649      	mov	r1, r9
  403c48:	f002 f980 	bl	405f4c <__aeabi_dcmpun>
  403c4c:	2800      	cmp	r0, #0
  403c4e:	f43f ae30 	beq.w	4038b2 <_printf_float+0xc2>
  403c52:	4b01      	ldr	r3, [pc, #4]	; (403c58 <_printf_float+0x468>)
  403c54:	4f01      	ldr	r7, [pc, #4]	; (403c5c <_printf_float+0x46c>)
  403c56:	e612      	b.n	40387e <_printf_float+0x8e>
  403c58:	00406504 	.word	0x00406504
  403c5c:	00406508 	.word	0x00406508

00403c60 <_printf_common>:
  403c60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403c64:	4691      	mov	r9, r2
  403c66:	461f      	mov	r7, r3
  403c68:	688a      	ldr	r2, [r1, #8]
  403c6a:	690b      	ldr	r3, [r1, #16]
  403c6c:	f8dd 8020 	ldr.w	r8, [sp, #32]
  403c70:	4293      	cmp	r3, r2
  403c72:	bfb8      	it	lt
  403c74:	4613      	movlt	r3, r2
  403c76:	f8c9 3000 	str.w	r3, [r9]
  403c7a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
  403c7e:	4606      	mov	r6, r0
  403c80:	460c      	mov	r4, r1
  403c82:	b112      	cbz	r2, 403c8a <_printf_common+0x2a>
  403c84:	3301      	adds	r3, #1
  403c86:	f8c9 3000 	str.w	r3, [r9]
  403c8a:	6823      	ldr	r3, [r4, #0]
  403c8c:	0699      	lsls	r1, r3, #26
  403c8e:	bf42      	ittt	mi
  403c90:	f8d9 3000 	ldrmi.w	r3, [r9]
  403c94:	3302      	addmi	r3, #2
  403c96:	f8c9 3000 	strmi.w	r3, [r9]
  403c9a:	6825      	ldr	r5, [r4, #0]
  403c9c:	f015 0506 	ands.w	r5, r5, #6
  403ca0:	d107      	bne.n	403cb2 <_printf_common+0x52>
  403ca2:	f104 0a19 	add.w	sl, r4, #25
  403ca6:	68e3      	ldr	r3, [r4, #12]
  403ca8:	f8d9 2000 	ldr.w	r2, [r9]
  403cac:	1a9b      	subs	r3, r3, r2
  403cae:	429d      	cmp	r5, r3
  403cb0:	db29      	blt.n	403d06 <_printf_common+0xa6>
  403cb2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
  403cb6:	6822      	ldr	r2, [r4, #0]
  403cb8:	3300      	adds	r3, #0
  403cba:	bf18      	it	ne
  403cbc:	2301      	movne	r3, #1
  403cbe:	0692      	lsls	r2, r2, #26
  403cc0:	d42e      	bmi.n	403d20 <_printf_common+0xc0>
  403cc2:	f104 0243 	add.w	r2, r4, #67	; 0x43
  403cc6:	4639      	mov	r1, r7
  403cc8:	4630      	mov	r0, r6
  403cca:	47c0      	blx	r8
  403ccc:	3001      	adds	r0, #1
  403cce:	d021      	beq.n	403d14 <_printf_common+0xb4>
  403cd0:	6823      	ldr	r3, [r4, #0]
  403cd2:	68e5      	ldr	r5, [r4, #12]
  403cd4:	f8d9 2000 	ldr.w	r2, [r9]
  403cd8:	f003 0306 	and.w	r3, r3, #6
  403cdc:	2b04      	cmp	r3, #4
  403cde:	bf08      	it	eq
  403ce0:	1aad      	subeq	r5, r5, r2
  403ce2:	68a3      	ldr	r3, [r4, #8]
  403ce4:	6922      	ldr	r2, [r4, #16]
  403ce6:	bf0c      	ite	eq
  403ce8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
  403cec:	2500      	movne	r5, #0
  403cee:	4293      	cmp	r3, r2
  403cf0:	bfc4      	itt	gt
  403cf2:	1a9b      	subgt	r3, r3, r2
  403cf4:	18ed      	addgt	r5, r5, r3
  403cf6:	f04f 0900 	mov.w	r9, #0
  403cfa:	341a      	adds	r4, #26
  403cfc:	454d      	cmp	r5, r9
  403cfe:	d11b      	bne.n	403d38 <_printf_common+0xd8>
  403d00:	2000      	movs	r0, #0
  403d02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403d06:	2301      	movs	r3, #1
  403d08:	4652      	mov	r2, sl
  403d0a:	4639      	mov	r1, r7
  403d0c:	4630      	mov	r0, r6
  403d0e:	47c0      	blx	r8
  403d10:	3001      	adds	r0, #1
  403d12:	d103      	bne.n	403d1c <_printf_common+0xbc>
  403d14:	f04f 30ff 	mov.w	r0, #4294967295
  403d18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  403d1c:	3501      	adds	r5, #1
  403d1e:	e7c2      	b.n	403ca6 <_printf_common+0x46>
  403d20:	18e1      	adds	r1, r4, r3
  403d22:	1c5a      	adds	r2, r3, #1
  403d24:	2030      	movs	r0, #48	; 0x30
  403d26:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
  403d2a:	4422      	add	r2, r4
  403d2c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
  403d30:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
  403d34:	3302      	adds	r3, #2
  403d36:	e7c4      	b.n	403cc2 <_printf_common+0x62>
  403d38:	2301      	movs	r3, #1
  403d3a:	4622      	mov	r2, r4
  403d3c:	4639      	mov	r1, r7
  403d3e:	4630      	mov	r0, r6
  403d40:	47c0      	blx	r8
  403d42:	3001      	adds	r0, #1
  403d44:	d0e6      	beq.n	403d14 <_printf_common+0xb4>
  403d46:	f109 0901 	add.w	r9, r9, #1
  403d4a:	e7d7      	b.n	403cfc <_printf_common+0x9c>

00403d4c <_printf_i>:
  403d4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  403d50:	4617      	mov	r7, r2
  403d52:	7e0a      	ldrb	r2, [r1, #24]
  403d54:	b085      	sub	sp, #20
  403d56:	2a6e      	cmp	r2, #110	; 0x6e
  403d58:	4698      	mov	r8, r3
  403d5a:	4606      	mov	r6, r0
  403d5c:	460c      	mov	r4, r1
  403d5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403d60:	f101 0e43 	add.w	lr, r1, #67	; 0x43
  403d64:	f000 80bc 	beq.w	403ee0 <_printf_i+0x194>
  403d68:	d81a      	bhi.n	403da0 <_printf_i+0x54>
  403d6a:	2a63      	cmp	r2, #99	; 0x63
  403d6c:	d02e      	beq.n	403dcc <_printf_i+0x80>
  403d6e:	d80a      	bhi.n	403d86 <_printf_i+0x3a>
  403d70:	2a00      	cmp	r2, #0
  403d72:	f000 80c8 	beq.w	403f06 <_printf_i+0x1ba>
  403d76:	2a58      	cmp	r2, #88	; 0x58
  403d78:	f000 808a 	beq.w	403e90 <_printf_i+0x144>
  403d7c:	f104 0542 	add.w	r5, r4, #66	; 0x42
  403d80:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
  403d84:	e02a      	b.n	403ddc <_printf_i+0x90>
  403d86:	2a64      	cmp	r2, #100	; 0x64
  403d88:	d001      	beq.n	403d8e <_printf_i+0x42>
  403d8a:	2a69      	cmp	r2, #105	; 0x69
  403d8c:	d1f6      	bne.n	403d7c <_printf_i+0x30>
  403d8e:	6821      	ldr	r1, [r4, #0]
  403d90:	681a      	ldr	r2, [r3, #0]
  403d92:	f011 0f80 	tst.w	r1, #128	; 0x80
  403d96:	d023      	beq.n	403de0 <_printf_i+0x94>
  403d98:	1d11      	adds	r1, r2, #4
  403d9a:	6019      	str	r1, [r3, #0]
  403d9c:	6813      	ldr	r3, [r2, #0]
  403d9e:	e027      	b.n	403df0 <_printf_i+0xa4>
  403da0:	2a73      	cmp	r2, #115	; 0x73
  403da2:	f000 80b4 	beq.w	403f0e <_printf_i+0x1c2>
  403da6:	d808      	bhi.n	403dba <_printf_i+0x6e>
  403da8:	2a6f      	cmp	r2, #111	; 0x6f
  403daa:	d02a      	beq.n	403e02 <_printf_i+0xb6>
  403dac:	2a70      	cmp	r2, #112	; 0x70
  403dae:	d1e5      	bne.n	403d7c <_printf_i+0x30>
  403db0:	680a      	ldr	r2, [r1, #0]
  403db2:	f042 0220 	orr.w	r2, r2, #32
  403db6:	600a      	str	r2, [r1, #0]
  403db8:	e003      	b.n	403dc2 <_printf_i+0x76>
  403dba:	2a75      	cmp	r2, #117	; 0x75
  403dbc:	d021      	beq.n	403e02 <_printf_i+0xb6>
  403dbe:	2a78      	cmp	r2, #120	; 0x78
  403dc0:	d1dc      	bne.n	403d7c <_printf_i+0x30>
  403dc2:	2278      	movs	r2, #120	; 0x78
  403dc4:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
  403dc8:	496e      	ldr	r1, [pc, #440]	; (403f84 <_printf_i+0x238>)
  403dca:	e064      	b.n	403e96 <_printf_i+0x14a>
  403dcc:	681a      	ldr	r2, [r3, #0]
  403dce:	f101 0542 	add.w	r5, r1, #66	; 0x42
  403dd2:	1d11      	adds	r1, r2, #4
  403dd4:	6019      	str	r1, [r3, #0]
  403dd6:	6813      	ldr	r3, [r2, #0]
  403dd8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  403ddc:	2301      	movs	r3, #1
  403dde:	e0a3      	b.n	403f28 <_printf_i+0x1dc>
  403de0:	f011 0f40 	tst.w	r1, #64	; 0x40
  403de4:	f102 0104 	add.w	r1, r2, #4
  403de8:	6019      	str	r1, [r3, #0]
  403dea:	d0d7      	beq.n	403d9c <_printf_i+0x50>
  403dec:	f9b2 3000 	ldrsh.w	r3, [r2]
  403df0:	2b00      	cmp	r3, #0
  403df2:	da03      	bge.n	403dfc <_printf_i+0xb0>
  403df4:	222d      	movs	r2, #45	; 0x2d
  403df6:	425b      	negs	r3, r3
  403df8:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
  403dfc:	4962      	ldr	r1, [pc, #392]	; (403f88 <_printf_i+0x23c>)
  403dfe:	220a      	movs	r2, #10
  403e00:	e017      	b.n	403e32 <_printf_i+0xe6>
  403e02:	6820      	ldr	r0, [r4, #0]
  403e04:	6819      	ldr	r1, [r3, #0]
  403e06:	f010 0f80 	tst.w	r0, #128	; 0x80
  403e0a:	d003      	beq.n	403e14 <_printf_i+0xc8>
  403e0c:	1d08      	adds	r0, r1, #4
  403e0e:	6018      	str	r0, [r3, #0]
  403e10:	680b      	ldr	r3, [r1, #0]
  403e12:	e006      	b.n	403e22 <_printf_i+0xd6>
  403e14:	f010 0f40 	tst.w	r0, #64	; 0x40
  403e18:	f101 0004 	add.w	r0, r1, #4
  403e1c:	6018      	str	r0, [r3, #0]
  403e1e:	d0f7      	beq.n	403e10 <_printf_i+0xc4>
  403e20:	880b      	ldrh	r3, [r1, #0]
  403e22:	4959      	ldr	r1, [pc, #356]	; (403f88 <_printf_i+0x23c>)
  403e24:	2a6f      	cmp	r2, #111	; 0x6f
  403e26:	bf14      	ite	ne
  403e28:	220a      	movne	r2, #10
  403e2a:	2208      	moveq	r2, #8
  403e2c:	2000      	movs	r0, #0
  403e2e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
  403e32:	6865      	ldr	r5, [r4, #4]
  403e34:	60a5      	str	r5, [r4, #8]
  403e36:	2d00      	cmp	r5, #0
  403e38:	f2c0 809c 	blt.w	403f74 <_printf_i+0x228>
  403e3c:	6820      	ldr	r0, [r4, #0]
  403e3e:	f020 0004 	bic.w	r0, r0, #4
  403e42:	6020      	str	r0, [r4, #0]
  403e44:	2b00      	cmp	r3, #0
  403e46:	d13f      	bne.n	403ec8 <_printf_i+0x17c>
  403e48:	2d00      	cmp	r5, #0
  403e4a:	f040 8095 	bne.w	403f78 <_printf_i+0x22c>
  403e4e:	4675      	mov	r5, lr
  403e50:	2a08      	cmp	r2, #8
  403e52:	d10b      	bne.n	403e6c <_printf_i+0x120>
  403e54:	6823      	ldr	r3, [r4, #0]
  403e56:	07da      	lsls	r2, r3, #31
  403e58:	d508      	bpl.n	403e6c <_printf_i+0x120>
  403e5a:	6923      	ldr	r3, [r4, #16]
  403e5c:	6862      	ldr	r2, [r4, #4]
  403e5e:	429a      	cmp	r2, r3
  403e60:	bfde      	ittt	le
  403e62:	2330      	movle	r3, #48	; 0x30
  403e64:	f805 3c01 	strble.w	r3, [r5, #-1]
  403e68:	f105 35ff 	addle.w	r5, r5, #4294967295
  403e6c:	ebae 0305 	sub.w	r3, lr, r5
  403e70:	6123      	str	r3, [r4, #16]
  403e72:	f8cd 8000 	str.w	r8, [sp]
  403e76:	463b      	mov	r3, r7
  403e78:	aa03      	add	r2, sp, #12
  403e7a:	4621      	mov	r1, r4
  403e7c:	4630      	mov	r0, r6
  403e7e:	f7ff feef 	bl	403c60 <_printf_common>
  403e82:	3001      	adds	r0, #1
  403e84:	d155      	bne.n	403f32 <_printf_i+0x1e6>
  403e86:	f04f 30ff 	mov.w	r0, #4294967295
  403e8a:	b005      	add	sp, #20
  403e8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403e90:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
  403e94:	493c      	ldr	r1, [pc, #240]	; (403f88 <_printf_i+0x23c>)
  403e96:	6822      	ldr	r2, [r4, #0]
  403e98:	6818      	ldr	r0, [r3, #0]
  403e9a:	f012 0f80 	tst.w	r2, #128	; 0x80
  403e9e:	f100 0504 	add.w	r5, r0, #4
  403ea2:	601d      	str	r5, [r3, #0]
  403ea4:	d001      	beq.n	403eaa <_printf_i+0x15e>
  403ea6:	6803      	ldr	r3, [r0, #0]
  403ea8:	e002      	b.n	403eb0 <_printf_i+0x164>
  403eaa:	0655      	lsls	r5, r2, #25
  403eac:	d5fb      	bpl.n	403ea6 <_printf_i+0x15a>
  403eae:	8803      	ldrh	r3, [r0, #0]
  403eb0:	07d0      	lsls	r0, r2, #31
  403eb2:	bf44      	itt	mi
  403eb4:	f042 0220 	orrmi.w	r2, r2, #32
  403eb8:	6022      	strmi	r2, [r4, #0]
  403eba:	b91b      	cbnz	r3, 403ec4 <_printf_i+0x178>
  403ebc:	6822      	ldr	r2, [r4, #0]
  403ebe:	f022 0220 	bic.w	r2, r2, #32
  403ec2:	6022      	str	r2, [r4, #0]
  403ec4:	2210      	movs	r2, #16
  403ec6:	e7b1      	b.n	403e2c <_printf_i+0xe0>
  403ec8:	4675      	mov	r5, lr
  403eca:	fbb3 f0f2 	udiv	r0, r3, r2
  403ece:	fb02 3310 	mls	r3, r2, r0, r3
  403ed2:	5ccb      	ldrb	r3, [r1, r3]
  403ed4:	f805 3d01 	strb.w	r3, [r5, #-1]!
  403ed8:	4603      	mov	r3, r0
  403eda:	2800      	cmp	r0, #0
  403edc:	d1f5      	bne.n	403eca <_printf_i+0x17e>
  403ede:	e7b7      	b.n	403e50 <_printf_i+0x104>
  403ee0:	6808      	ldr	r0, [r1, #0]
  403ee2:	681a      	ldr	r2, [r3, #0]
  403ee4:	6949      	ldr	r1, [r1, #20]
  403ee6:	f010 0f80 	tst.w	r0, #128	; 0x80
  403eea:	d004      	beq.n	403ef6 <_printf_i+0x1aa>
  403eec:	1d10      	adds	r0, r2, #4
  403eee:	6018      	str	r0, [r3, #0]
  403ef0:	6813      	ldr	r3, [r2, #0]
  403ef2:	6019      	str	r1, [r3, #0]
  403ef4:	e007      	b.n	403f06 <_printf_i+0x1ba>
  403ef6:	f010 0f40 	tst.w	r0, #64	; 0x40
  403efa:	f102 0004 	add.w	r0, r2, #4
  403efe:	6018      	str	r0, [r3, #0]
  403f00:	6813      	ldr	r3, [r2, #0]
  403f02:	d0f6      	beq.n	403ef2 <_printf_i+0x1a6>
  403f04:	8019      	strh	r1, [r3, #0]
  403f06:	2300      	movs	r3, #0
  403f08:	6123      	str	r3, [r4, #16]
  403f0a:	4675      	mov	r5, lr
  403f0c:	e7b1      	b.n	403e72 <_printf_i+0x126>
  403f0e:	681a      	ldr	r2, [r3, #0]
  403f10:	1d11      	adds	r1, r2, #4
  403f12:	6019      	str	r1, [r3, #0]
  403f14:	6815      	ldr	r5, [r2, #0]
  403f16:	6862      	ldr	r2, [r4, #4]
  403f18:	2100      	movs	r1, #0
  403f1a:	4628      	mov	r0, r5
  403f1c:	f001 f960 	bl	4051e0 <memchr>
  403f20:	b108      	cbz	r0, 403f26 <_printf_i+0x1da>
  403f22:	1b40      	subs	r0, r0, r5
  403f24:	6060      	str	r0, [r4, #4]
  403f26:	6863      	ldr	r3, [r4, #4]
  403f28:	6123      	str	r3, [r4, #16]
  403f2a:	2300      	movs	r3, #0
  403f2c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  403f30:	e79f      	b.n	403e72 <_printf_i+0x126>
  403f32:	6923      	ldr	r3, [r4, #16]
  403f34:	462a      	mov	r2, r5
  403f36:	4639      	mov	r1, r7
  403f38:	4630      	mov	r0, r6
  403f3a:	47c0      	blx	r8
  403f3c:	3001      	adds	r0, #1
  403f3e:	d0a2      	beq.n	403e86 <_printf_i+0x13a>
  403f40:	6823      	ldr	r3, [r4, #0]
  403f42:	079b      	lsls	r3, r3, #30
  403f44:	d507      	bpl.n	403f56 <_printf_i+0x20a>
  403f46:	2500      	movs	r5, #0
  403f48:	f104 0919 	add.w	r9, r4, #25
  403f4c:	68e3      	ldr	r3, [r4, #12]
  403f4e:	9a03      	ldr	r2, [sp, #12]
  403f50:	1a9b      	subs	r3, r3, r2
  403f52:	429d      	cmp	r5, r3
  403f54:	db05      	blt.n	403f62 <_printf_i+0x216>
  403f56:	68e0      	ldr	r0, [r4, #12]
  403f58:	9b03      	ldr	r3, [sp, #12]
  403f5a:	4298      	cmp	r0, r3
  403f5c:	bfb8      	it	lt
  403f5e:	4618      	movlt	r0, r3
  403f60:	e793      	b.n	403e8a <_printf_i+0x13e>
  403f62:	2301      	movs	r3, #1
  403f64:	464a      	mov	r2, r9
  403f66:	4639      	mov	r1, r7
  403f68:	4630      	mov	r0, r6
  403f6a:	47c0      	blx	r8
  403f6c:	3001      	adds	r0, #1
  403f6e:	d08a      	beq.n	403e86 <_printf_i+0x13a>
  403f70:	3501      	adds	r5, #1
  403f72:	e7eb      	b.n	403f4c <_printf_i+0x200>
  403f74:	2b00      	cmp	r3, #0
  403f76:	d1a7      	bne.n	403ec8 <_printf_i+0x17c>
  403f78:	780b      	ldrb	r3, [r1, #0]
  403f7a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  403f7e:	f104 0542 	add.w	r5, r4, #66	; 0x42
  403f82:	e765      	b.n	403e50 <_printf_i+0x104>
  403f84:	0040651f 	.word	0x0040651f
  403f88:	0040650e 	.word	0x0040650e

00403f8c <iprintf>:
  403f8c:	b40f      	push	{r0, r1, r2, r3}
  403f8e:	4b0a      	ldr	r3, [pc, #40]	; (403fb8 <iprintf+0x2c>)
  403f90:	b513      	push	{r0, r1, r4, lr}
  403f92:	681c      	ldr	r4, [r3, #0]
  403f94:	b124      	cbz	r4, 403fa0 <iprintf+0x14>
  403f96:	69a3      	ldr	r3, [r4, #24]
  403f98:	b913      	cbnz	r3, 403fa0 <iprintf+0x14>
  403f9a:	4620      	mov	r0, r4
  403f9c:	f001 f81c 	bl	404fd8 <__sinit>
  403fa0:	ab05      	add	r3, sp, #20
  403fa2:	9a04      	ldr	r2, [sp, #16]
  403fa4:	68a1      	ldr	r1, [r4, #8]
  403fa6:	9301      	str	r3, [sp, #4]
  403fa8:	4620      	mov	r0, r4
  403faa:	f001 fd1b 	bl	4059e4 <_vfiprintf_r>
  403fae:	b002      	add	sp, #8
  403fb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  403fb4:	b004      	add	sp, #16
  403fb6:	4770      	bx	lr
  403fb8:	20400000 	.word	0x20400000

00403fbc <setbuf>:
  403fbc:	2900      	cmp	r1, #0
  403fbe:	f44f 6380 	mov.w	r3, #1024	; 0x400
  403fc2:	bf0c      	ite	eq
  403fc4:	2202      	moveq	r2, #2
  403fc6:	2200      	movne	r2, #0
  403fc8:	f000 b800 	b.w	403fcc <setvbuf>

00403fcc <setvbuf>:
  403fcc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  403fd0:	461d      	mov	r5, r3
  403fd2:	4b51      	ldr	r3, [pc, #324]	; (404118 <setvbuf+0x14c>)
  403fd4:	681e      	ldr	r6, [r3, #0]
  403fd6:	4604      	mov	r4, r0
  403fd8:	460f      	mov	r7, r1
  403fda:	4690      	mov	r8, r2
  403fdc:	b126      	cbz	r6, 403fe8 <setvbuf+0x1c>
  403fde:	69b3      	ldr	r3, [r6, #24]
  403fe0:	b913      	cbnz	r3, 403fe8 <setvbuf+0x1c>
  403fe2:	4630      	mov	r0, r6
  403fe4:	f000 fff8 	bl	404fd8 <__sinit>
  403fe8:	4b4c      	ldr	r3, [pc, #304]	; (40411c <setvbuf+0x150>)
  403fea:	429c      	cmp	r4, r3
  403fec:	d152      	bne.n	404094 <setvbuf+0xc8>
  403fee:	6874      	ldr	r4, [r6, #4]
  403ff0:	f1b8 0f02 	cmp.w	r8, #2
  403ff4:	d006      	beq.n	404004 <setvbuf+0x38>
  403ff6:	f1b8 0f01 	cmp.w	r8, #1
  403ffa:	f200 8089 	bhi.w	404110 <setvbuf+0x144>
  403ffe:	2d00      	cmp	r5, #0
  404000:	f2c0 8086 	blt.w	404110 <setvbuf+0x144>
  404004:	4621      	mov	r1, r4
  404006:	4630      	mov	r0, r6
  404008:	f000 ff7c 	bl	404f04 <_fflush_r>
  40400c:	6b61      	ldr	r1, [r4, #52]	; 0x34
  40400e:	b141      	cbz	r1, 404022 <setvbuf+0x56>
  404010:	f104 0344 	add.w	r3, r4, #68	; 0x44
  404014:	4299      	cmp	r1, r3
  404016:	d002      	beq.n	40401e <setvbuf+0x52>
  404018:	4630      	mov	r0, r6
  40401a:	f001 fc0f 	bl	40583c <_free_r>
  40401e:	2300      	movs	r3, #0
  404020:	6363      	str	r3, [r4, #52]	; 0x34
  404022:	2300      	movs	r3, #0
  404024:	61a3      	str	r3, [r4, #24]
  404026:	6063      	str	r3, [r4, #4]
  404028:	89a3      	ldrh	r3, [r4, #12]
  40402a:	061b      	lsls	r3, r3, #24
  40402c:	d503      	bpl.n	404036 <setvbuf+0x6a>
  40402e:	6921      	ldr	r1, [r4, #16]
  404030:	4630      	mov	r0, r6
  404032:	f001 fc03 	bl	40583c <_free_r>
  404036:	89a3      	ldrh	r3, [r4, #12]
  404038:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  40403c:	f023 0303 	bic.w	r3, r3, #3
  404040:	f1b8 0f02 	cmp.w	r8, #2
  404044:	81a3      	strh	r3, [r4, #12]
  404046:	d05d      	beq.n	404104 <setvbuf+0x138>
  404048:	ab01      	add	r3, sp, #4
  40404a:	466a      	mov	r2, sp
  40404c:	4621      	mov	r1, r4
  40404e:	4630      	mov	r0, r6
  404050:	f001 f85a 	bl	405108 <__swhatbuf_r>
  404054:	89a3      	ldrh	r3, [r4, #12]
  404056:	4318      	orrs	r0, r3
  404058:	81a0      	strh	r0, [r4, #12]
  40405a:	bb2d      	cbnz	r5, 4040a8 <setvbuf+0xdc>
  40405c:	9d00      	ldr	r5, [sp, #0]
  40405e:	4628      	mov	r0, r5
  404060:	f001 f8b6 	bl	4051d0 <malloc>
  404064:	4607      	mov	r7, r0
  404066:	2800      	cmp	r0, #0
  404068:	d14e      	bne.n	404108 <setvbuf+0x13c>
  40406a:	f8dd 9000 	ldr.w	r9, [sp]
  40406e:	45a9      	cmp	r9, r5
  404070:	d13c      	bne.n	4040ec <setvbuf+0x120>
  404072:	f04f 30ff 	mov.w	r0, #4294967295
  404076:	89a3      	ldrh	r3, [r4, #12]
  404078:	f043 0302 	orr.w	r3, r3, #2
  40407c:	81a3      	strh	r3, [r4, #12]
  40407e:	2300      	movs	r3, #0
  404080:	60a3      	str	r3, [r4, #8]
  404082:	f104 0347 	add.w	r3, r4, #71	; 0x47
  404086:	6023      	str	r3, [r4, #0]
  404088:	6123      	str	r3, [r4, #16]
  40408a:	2301      	movs	r3, #1
  40408c:	6163      	str	r3, [r4, #20]
  40408e:	b003      	add	sp, #12
  404090:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  404094:	4b22      	ldr	r3, [pc, #136]	; (404120 <setvbuf+0x154>)
  404096:	429c      	cmp	r4, r3
  404098:	d101      	bne.n	40409e <setvbuf+0xd2>
  40409a:	68b4      	ldr	r4, [r6, #8]
  40409c:	e7a8      	b.n	403ff0 <setvbuf+0x24>
  40409e:	4b21      	ldr	r3, [pc, #132]	; (404124 <setvbuf+0x158>)
  4040a0:	429c      	cmp	r4, r3
  4040a2:	bf08      	it	eq
  4040a4:	68f4      	ldreq	r4, [r6, #12]
  4040a6:	e7a3      	b.n	403ff0 <setvbuf+0x24>
  4040a8:	2f00      	cmp	r7, #0
  4040aa:	d0d8      	beq.n	40405e <setvbuf+0x92>
  4040ac:	69b3      	ldr	r3, [r6, #24]
  4040ae:	b913      	cbnz	r3, 4040b6 <setvbuf+0xea>
  4040b0:	4630      	mov	r0, r6
  4040b2:	f000 ff91 	bl	404fd8 <__sinit>
  4040b6:	f1b8 0f01 	cmp.w	r8, #1
  4040ba:	bf08      	it	eq
  4040bc:	89a3      	ldrheq	r3, [r4, #12]
  4040be:	6027      	str	r7, [r4, #0]
  4040c0:	bf04      	itt	eq
  4040c2:	f043 0301 	orreq.w	r3, r3, #1
  4040c6:	81a3      	strheq	r3, [r4, #12]
  4040c8:	89a3      	ldrh	r3, [r4, #12]
  4040ca:	6127      	str	r7, [r4, #16]
  4040cc:	f013 0008 	ands.w	r0, r3, #8
  4040d0:	6165      	str	r5, [r4, #20]
  4040d2:	d01b      	beq.n	40410c <setvbuf+0x140>
  4040d4:	f013 0001 	ands.w	r0, r3, #1
  4040d8:	bf18      	it	ne
  4040da:	426d      	negne	r5, r5
  4040dc:	f04f 0300 	mov.w	r3, #0
  4040e0:	bf1d      	ittte	ne
  4040e2:	60a3      	strne	r3, [r4, #8]
  4040e4:	61a5      	strne	r5, [r4, #24]
  4040e6:	4618      	movne	r0, r3
  4040e8:	60a5      	streq	r5, [r4, #8]
  4040ea:	e7d0      	b.n	40408e <setvbuf+0xc2>
  4040ec:	4648      	mov	r0, r9
  4040ee:	f001 f86f 	bl	4051d0 <malloc>
  4040f2:	4607      	mov	r7, r0
  4040f4:	2800      	cmp	r0, #0
  4040f6:	d0bc      	beq.n	404072 <setvbuf+0xa6>
  4040f8:	89a3      	ldrh	r3, [r4, #12]
  4040fa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4040fe:	81a3      	strh	r3, [r4, #12]
  404100:	464d      	mov	r5, r9
  404102:	e7d3      	b.n	4040ac <setvbuf+0xe0>
  404104:	2000      	movs	r0, #0
  404106:	e7b6      	b.n	404076 <setvbuf+0xaa>
  404108:	46a9      	mov	r9, r5
  40410a:	e7f5      	b.n	4040f8 <setvbuf+0x12c>
  40410c:	60a0      	str	r0, [r4, #8]
  40410e:	e7be      	b.n	40408e <setvbuf+0xc2>
  404110:	f04f 30ff 	mov.w	r0, #4294967295
  404114:	e7bb      	b.n	40408e <setvbuf+0xc2>
  404116:	bf00      	nop
  404118:	20400000 	.word	0x20400000
  40411c:	00406560 	.word	0x00406560
  404120:	00406580 	.word	0x00406580
  404124:	00406540 	.word	0x00406540

00404128 <strlen>:
  404128:	4603      	mov	r3, r0
  40412a:	f813 2b01 	ldrb.w	r2, [r3], #1
  40412e:	2a00      	cmp	r2, #0
  404130:	d1fb      	bne.n	40412a <strlen+0x2>
  404132:	1a18      	subs	r0, r3, r0
  404134:	3801      	subs	r0, #1
  404136:	4770      	bx	lr

00404138 <quorem>:
  404138:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40413c:	6903      	ldr	r3, [r0, #16]
  40413e:	690c      	ldr	r4, [r1, #16]
  404140:	429c      	cmp	r4, r3
  404142:	4680      	mov	r8, r0
  404144:	f300 8082 	bgt.w	40424c <quorem+0x114>
  404148:	3c01      	subs	r4, #1
  40414a:	f101 0714 	add.w	r7, r1, #20
  40414e:	ea4f 0e84 	mov.w	lr, r4, lsl #2
  404152:	f100 0614 	add.w	r6, r0, #20
  404156:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
  40415a:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
  40415e:	eb06 030e 	add.w	r3, r6, lr
  404162:	3501      	adds	r5, #1
  404164:	eb07 090e 	add.w	r9, r7, lr
  404168:	9301      	str	r3, [sp, #4]
  40416a:	fbb0 f5f5 	udiv	r5, r0, r5
  40416e:	b395      	cbz	r5, 4041d6 <quorem+0x9e>
  404170:	f04f 0a00 	mov.w	sl, #0
  404174:	4638      	mov	r0, r7
  404176:	46b4      	mov	ip, r6
  404178:	46d3      	mov	fp, sl
  40417a:	f850 2b04 	ldr.w	r2, [r0], #4
  40417e:	b293      	uxth	r3, r2
  404180:	fb05 a303 	mla	r3, r5, r3, sl
  404184:	ea4f 4a13 	mov.w	sl, r3, lsr #16
  404188:	b29b      	uxth	r3, r3
  40418a:	ebab 0303 	sub.w	r3, fp, r3
  40418e:	0c12      	lsrs	r2, r2, #16
  404190:	f8bc b000 	ldrh.w	fp, [ip]
  404194:	fb05 a202 	mla	r2, r5, r2, sl
  404198:	fa13 f38b 	uxtah	r3, r3, fp
  40419c:	ea4f 4a12 	mov.w	sl, r2, lsr #16
  4041a0:	fa1f fb82 	uxth.w	fp, r2
  4041a4:	f8dc 2000 	ldr.w	r2, [ip]
  4041a8:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
  4041ac:	eb02 4223 	add.w	r2, r2, r3, asr #16
  4041b0:	b29b      	uxth	r3, r3
  4041b2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4041b6:	4581      	cmp	r9, r0
  4041b8:	ea4f 4b22 	mov.w	fp, r2, asr #16
  4041bc:	f84c 3b04 	str.w	r3, [ip], #4
  4041c0:	d2db      	bcs.n	40417a <quorem+0x42>
  4041c2:	f856 300e 	ldr.w	r3, [r6, lr]
  4041c6:	b933      	cbnz	r3, 4041d6 <quorem+0x9e>
  4041c8:	9b01      	ldr	r3, [sp, #4]
  4041ca:	3b04      	subs	r3, #4
  4041cc:	429e      	cmp	r6, r3
  4041ce:	461a      	mov	r2, r3
  4041d0:	d330      	bcc.n	404234 <quorem+0xfc>
  4041d2:	f8c8 4010 	str.w	r4, [r8, #16]
  4041d6:	4640      	mov	r0, r8
  4041d8:	f001 fa5b 	bl	405692 <__mcmp>
  4041dc:	2800      	cmp	r0, #0
  4041de:	db25      	blt.n	40422c <quorem+0xf4>
  4041e0:	3501      	adds	r5, #1
  4041e2:	4630      	mov	r0, r6
  4041e4:	f04f 0e00 	mov.w	lr, #0
  4041e8:	f857 2b04 	ldr.w	r2, [r7], #4
  4041ec:	f8d0 c000 	ldr.w	ip, [r0]
  4041f0:	b293      	uxth	r3, r2
  4041f2:	ebae 0303 	sub.w	r3, lr, r3
  4041f6:	0c12      	lsrs	r2, r2, #16
  4041f8:	fa13 f38c 	uxtah	r3, r3, ip
  4041fc:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
  404200:	eb02 4223 	add.w	r2, r2, r3, asr #16
  404204:	b29b      	uxth	r3, r3
  404206:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40420a:	45b9      	cmp	r9, r7
  40420c:	ea4f 4e22 	mov.w	lr, r2, asr #16
  404210:	f840 3b04 	str.w	r3, [r0], #4
  404214:	d2e8      	bcs.n	4041e8 <quorem+0xb0>
  404216:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
  40421a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
  40421e:	b92a      	cbnz	r2, 40422c <quorem+0xf4>
  404220:	3b04      	subs	r3, #4
  404222:	429e      	cmp	r6, r3
  404224:	461a      	mov	r2, r3
  404226:	d30b      	bcc.n	404240 <quorem+0x108>
  404228:	f8c8 4010 	str.w	r4, [r8, #16]
  40422c:	4628      	mov	r0, r5
  40422e:	b003      	add	sp, #12
  404230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404234:	6812      	ldr	r2, [r2, #0]
  404236:	3b04      	subs	r3, #4
  404238:	2a00      	cmp	r2, #0
  40423a:	d1ca      	bne.n	4041d2 <quorem+0x9a>
  40423c:	3c01      	subs	r4, #1
  40423e:	e7c5      	b.n	4041cc <quorem+0x94>
  404240:	6812      	ldr	r2, [r2, #0]
  404242:	3b04      	subs	r3, #4
  404244:	2a00      	cmp	r2, #0
  404246:	d1ef      	bne.n	404228 <quorem+0xf0>
  404248:	3c01      	subs	r4, #1
  40424a:	e7ea      	b.n	404222 <quorem+0xea>
  40424c:	2000      	movs	r0, #0
  40424e:	e7ee      	b.n	40422e <quorem+0xf6>

00404250 <_dtoa_r>:
  404250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404254:	6a46      	ldr	r6, [r0, #36]	; 0x24
  404256:	b095      	sub	sp, #84	; 0x54
  404258:	4604      	mov	r4, r0
  40425a:	9d21      	ldr	r5, [sp, #132]	; 0x84
  40425c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  404260:	b93e      	cbnz	r6, 404272 <_dtoa_r+0x22>
  404262:	2010      	movs	r0, #16
  404264:	f000 ffb4 	bl	4051d0 <malloc>
  404268:	6260      	str	r0, [r4, #36]	; 0x24
  40426a:	6046      	str	r6, [r0, #4]
  40426c:	6086      	str	r6, [r0, #8]
  40426e:	6006      	str	r6, [r0, #0]
  404270:	60c6      	str	r6, [r0, #12]
  404272:	6a63      	ldr	r3, [r4, #36]	; 0x24
  404274:	6819      	ldr	r1, [r3, #0]
  404276:	b151      	cbz	r1, 40428e <_dtoa_r+0x3e>
  404278:	685a      	ldr	r2, [r3, #4]
  40427a:	604a      	str	r2, [r1, #4]
  40427c:	2301      	movs	r3, #1
  40427e:	4093      	lsls	r3, r2
  404280:	608b      	str	r3, [r1, #8]
  404282:	4620      	mov	r0, r4
  404284:	f001 f830 	bl	4052e8 <_Bfree>
  404288:	6a63      	ldr	r3, [r4, #36]	; 0x24
  40428a:	2200      	movs	r2, #0
  40428c:	601a      	str	r2, [r3, #0]
  40428e:	9b03      	ldr	r3, [sp, #12]
  404290:	2b00      	cmp	r3, #0
  404292:	bfbf      	itttt	lt
  404294:	2301      	movlt	r3, #1
  404296:	602b      	strlt	r3, [r5, #0]
  404298:	9b03      	ldrlt	r3, [sp, #12]
  40429a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
  40429e:	bfb2      	itee	lt
  4042a0:	9303      	strlt	r3, [sp, #12]
  4042a2:	2300      	movge	r3, #0
  4042a4:	602b      	strge	r3, [r5, #0]
  4042a6:	f8dd 900c 	ldr.w	r9, [sp, #12]
  4042aa:	4ba9      	ldr	r3, [pc, #676]	; (404550 <_dtoa_r+0x300>)
  4042ac:	ea33 0309 	bics.w	r3, r3, r9
  4042b0:	d11b      	bne.n	4042ea <_dtoa_r+0x9a>
  4042b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
  4042b4:	f242 730f 	movw	r3, #9999	; 0x270f
  4042b8:	6013      	str	r3, [r2, #0]
  4042ba:	9b02      	ldr	r3, [sp, #8]
  4042bc:	b923      	cbnz	r3, 4042c8 <_dtoa_r+0x78>
  4042be:	f3c9 0013 	ubfx	r0, r9, #0, #20
  4042c2:	2800      	cmp	r0, #0
  4042c4:	f000 8581 	beq.w	404dca <_dtoa_r+0xb7a>
  4042c8:	9b22      	ldr	r3, [sp, #136]	; 0x88
  4042ca:	b953      	cbnz	r3, 4042e2 <_dtoa_r+0x92>
  4042cc:	4ba1      	ldr	r3, [pc, #644]	; (404554 <_dtoa_r+0x304>)
  4042ce:	e021      	b.n	404314 <_dtoa_r+0xc4>
  4042d0:	4ba1      	ldr	r3, [pc, #644]	; (404558 <_dtoa_r+0x308>)
  4042d2:	9306      	str	r3, [sp, #24]
  4042d4:	3308      	adds	r3, #8
  4042d6:	9a22      	ldr	r2, [sp, #136]	; 0x88
  4042d8:	6013      	str	r3, [r2, #0]
  4042da:	9806      	ldr	r0, [sp, #24]
  4042dc:	b015      	add	sp, #84	; 0x54
  4042de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4042e2:	4b9c      	ldr	r3, [pc, #624]	; (404554 <_dtoa_r+0x304>)
  4042e4:	9306      	str	r3, [sp, #24]
  4042e6:	3303      	adds	r3, #3
  4042e8:	e7f5      	b.n	4042d6 <_dtoa_r+0x86>
  4042ea:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
  4042ee:	2200      	movs	r2, #0
  4042f0:	2300      	movs	r3, #0
  4042f2:	4630      	mov	r0, r6
  4042f4:	4639      	mov	r1, r7
  4042f6:	f7ff f909 	bl	40350c <__aeabi_dcmpeq>
  4042fa:	4680      	mov	r8, r0
  4042fc:	b160      	cbz	r0, 404318 <_dtoa_r+0xc8>
  4042fe:	9a20      	ldr	r2, [sp, #128]	; 0x80
  404300:	2301      	movs	r3, #1
  404302:	6013      	str	r3, [r2, #0]
  404304:	9b22      	ldr	r3, [sp, #136]	; 0x88
  404306:	2b00      	cmp	r3, #0
  404308:	f000 855c 	beq.w	404dc4 <_dtoa_r+0xb74>
  40430c:	4b93      	ldr	r3, [pc, #588]	; (40455c <_dtoa_r+0x30c>)
  40430e:	9a22      	ldr	r2, [sp, #136]	; 0x88
  404310:	6013      	str	r3, [r2, #0]
  404312:	3b01      	subs	r3, #1
  404314:	9306      	str	r3, [sp, #24]
  404316:	e7e0      	b.n	4042da <_dtoa_r+0x8a>
  404318:	ab12      	add	r3, sp, #72	; 0x48
  40431a:	9301      	str	r3, [sp, #4]
  40431c:	ab13      	add	r3, sp, #76	; 0x4c
  40431e:	9300      	str	r3, [sp, #0]
  404320:	4632      	mov	r2, r6
  404322:	463b      	mov	r3, r7
  404324:	4620      	mov	r0, r4
  404326:	f001 fa2c 	bl	405782 <__d2b>
  40432a:	f3c9 550a 	ubfx	r5, r9, #20, #11
  40432e:	4682      	mov	sl, r0
  404330:	2d00      	cmp	r5, #0
  404332:	d07c      	beq.n	40442e <_dtoa_r+0x1de>
  404334:	f3c7 0313 	ubfx	r3, r7, #0, #20
  404338:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
  40433c:	4630      	mov	r0, r6
  40433e:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  404342:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
  404346:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
  40434a:	2200      	movs	r2, #0
  40434c:	4b84      	ldr	r3, [pc, #528]	; (404560 <_dtoa_r+0x310>)
  40434e:	f7fe fcc1 	bl	402cd4 <__aeabi_dsub>
  404352:	a379      	add	r3, pc, #484	; (adr r3, 404538 <_dtoa_r+0x2e8>)
  404354:	e9d3 2300 	ldrd	r2, r3, [r3]
  404358:	f7fe fe70 	bl	40303c <__aeabi_dmul>
  40435c:	a378      	add	r3, pc, #480	; (adr r3, 404540 <_dtoa_r+0x2f0>)
  40435e:	e9d3 2300 	ldrd	r2, r3, [r3]
  404362:	f7fe fcb9 	bl	402cd8 <__adddf3>
  404366:	4606      	mov	r6, r0
  404368:	4628      	mov	r0, r5
  40436a:	460f      	mov	r7, r1
  40436c:	f7fe fe00 	bl	402f70 <__aeabi_i2d>
  404370:	a375      	add	r3, pc, #468	; (adr r3, 404548 <_dtoa_r+0x2f8>)
  404372:	e9d3 2300 	ldrd	r2, r3, [r3]
  404376:	f7fe fe61 	bl	40303c <__aeabi_dmul>
  40437a:	4602      	mov	r2, r0
  40437c:	460b      	mov	r3, r1
  40437e:	4630      	mov	r0, r6
  404380:	4639      	mov	r1, r7
  404382:	f7fe fca9 	bl	402cd8 <__adddf3>
  404386:	4606      	mov	r6, r0
  404388:	460f      	mov	r7, r1
  40438a:	f7ff f8f1 	bl	403570 <__aeabi_d2iz>
  40438e:	2200      	movs	r2, #0
  404390:	4683      	mov	fp, r0
  404392:	2300      	movs	r3, #0
  404394:	4630      	mov	r0, r6
  404396:	4639      	mov	r1, r7
  404398:	f7ff f8c2 	bl	403520 <__aeabi_dcmplt>
  40439c:	b158      	cbz	r0, 4043b6 <_dtoa_r+0x166>
  40439e:	4658      	mov	r0, fp
  4043a0:	f7fe fde6 	bl	402f70 <__aeabi_i2d>
  4043a4:	4602      	mov	r2, r0
  4043a6:	460b      	mov	r3, r1
  4043a8:	4630      	mov	r0, r6
  4043aa:	4639      	mov	r1, r7
  4043ac:	f7ff f8ae 	bl	40350c <__aeabi_dcmpeq>
  4043b0:	b908      	cbnz	r0, 4043b6 <_dtoa_r+0x166>
  4043b2:	f10b 3bff 	add.w	fp, fp, #4294967295
  4043b6:	f1bb 0f16 	cmp.w	fp, #22
  4043ba:	d857      	bhi.n	40446c <_dtoa_r+0x21c>
  4043bc:	4969      	ldr	r1, [pc, #420]	; (404564 <_dtoa_r+0x314>)
  4043be:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
  4043c2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4043c6:	e9d1 0100 	ldrd	r0, r1, [r1]
  4043ca:	f7ff f8c7 	bl	40355c <__aeabi_dcmpgt>
  4043ce:	2800      	cmp	r0, #0
  4043d0:	d04e      	beq.n	404470 <_dtoa_r+0x220>
  4043d2:	f10b 3bff 	add.w	fp, fp, #4294967295
  4043d6:	2300      	movs	r3, #0
  4043d8:	930d      	str	r3, [sp, #52]	; 0x34
  4043da:	9b12      	ldr	r3, [sp, #72]	; 0x48
  4043dc:	1b5d      	subs	r5, r3, r5
  4043de:	1e6b      	subs	r3, r5, #1
  4043e0:	9307      	str	r3, [sp, #28]
  4043e2:	bf43      	ittte	mi
  4043e4:	2300      	movmi	r3, #0
  4043e6:	f1c5 0801 	rsbmi	r8, r5, #1
  4043ea:	9307      	strmi	r3, [sp, #28]
  4043ec:	f04f 0800 	movpl.w	r8, #0
  4043f0:	f1bb 0f00 	cmp.w	fp, #0
  4043f4:	db3e      	blt.n	404474 <_dtoa_r+0x224>
  4043f6:	9b07      	ldr	r3, [sp, #28]
  4043f8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
  4043fc:	445b      	add	r3, fp
  4043fe:	9307      	str	r3, [sp, #28]
  404400:	2300      	movs	r3, #0
  404402:	9308      	str	r3, [sp, #32]
  404404:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  404406:	2b09      	cmp	r3, #9
  404408:	f200 80b0 	bhi.w	40456c <_dtoa_r+0x31c>
  40440c:	2b05      	cmp	r3, #5
  40440e:	bfc4      	itt	gt
  404410:	3b04      	subgt	r3, #4
  404412:	931e      	strgt	r3, [sp, #120]	; 0x78
  404414:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  404416:	f1a3 0302 	sub.w	r3, r3, #2
  40441a:	bfcc      	ite	gt
  40441c:	2600      	movgt	r6, #0
  40441e:	2601      	movle	r6, #1
  404420:	2b03      	cmp	r3, #3
  404422:	f200 80af 	bhi.w	404584 <_dtoa_r+0x334>
  404426:	e8df f003 	tbb	[pc, r3]
  40442a:	8583      	.short	0x8583
  40442c:	772d      	.short	0x772d
  40442e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404430:	9d12      	ldr	r5, [sp, #72]	; 0x48
  404432:	441d      	add	r5, r3
  404434:	f205 4332 	addw	r3, r5, #1074	; 0x432
  404438:	2b20      	cmp	r3, #32
  40443a:	dd11      	ble.n	404460 <_dtoa_r+0x210>
  40443c:	9a02      	ldr	r2, [sp, #8]
  40443e:	f205 4012 	addw	r0, r5, #1042	; 0x412
  404442:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  404446:	fa22 f000 	lsr.w	r0, r2, r0
  40444a:	fa09 f303 	lsl.w	r3, r9, r3
  40444e:	4318      	orrs	r0, r3
  404450:	f7fe fd7e 	bl	402f50 <__aeabi_ui2d>
  404454:	2301      	movs	r3, #1
  404456:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40445a:	3d01      	subs	r5, #1
  40445c:	9310      	str	r3, [sp, #64]	; 0x40
  40445e:	e774      	b.n	40434a <_dtoa_r+0xfa>
  404460:	f1c3 0020 	rsb	r0, r3, #32
  404464:	9b02      	ldr	r3, [sp, #8]
  404466:	fa03 f000 	lsl.w	r0, r3, r0
  40446a:	e7f1      	b.n	404450 <_dtoa_r+0x200>
  40446c:	2301      	movs	r3, #1
  40446e:	e7b3      	b.n	4043d8 <_dtoa_r+0x188>
  404470:	900d      	str	r0, [sp, #52]	; 0x34
  404472:	e7b2      	b.n	4043da <_dtoa_r+0x18a>
  404474:	f1cb 0300 	rsb	r3, fp, #0
  404478:	9308      	str	r3, [sp, #32]
  40447a:	2300      	movs	r3, #0
  40447c:	eba8 080b 	sub.w	r8, r8, fp
  404480:	930c      	str	r3, [sp, #48]	; 0x30
  404482:	e7bf      	b.n	404404 <_dtoa_r+0x1b4>
  404484:	2301      	movs	r3, #1
  404486:	9309      	str	r3, [sp, #36]	; 0x24
  404488:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40448a:	2b00      	cmp	r3, #0
  40448c:	dd7d      	ble.n	40458a <_dtoa_r+0x33a>
  40448e:	9304      	str	r3, [sp, #16]
  404490:	4699      	mov	r9, r3
  404492:	6a65      	ldr	r5, [r4, #36]	; 0x24
  404494:	2200      	movs	r2, #0
  404496:	606a      	str	r2, [r5, #4]
  404498:	2104      	movs	r1, #4
  40449a:	f101 0214 	add.w	r2, r1, #20
  40449e:	429a      	cmp	r2, r3
  4044a0:	d978      	bls.n	404594 <_dtoa_r+0x344>
  4044a2:	6869      	ldr	r1, [r5, #4]
  4044a4:	4620      	mov	r0, r4
  4044a6:	f000 feeb 	bl	405280 <_Balloc>
  4044aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
  4044ac:	6028      	str	r0, [r5, #0]
  4044ae:	681b      	ldr	r3, [r3, #0]
  4044b0:	9306      	str	r3, [sp, #24]
  4044b2:	f1b9 0f0e 	cmp.w	r9, #14
  4044b6:	f200 80ee 	bhi.w	404696 <_dtoa_r+0x446>
  4044ba:	2e00      	cmp	r6, #0
  4044bc:	f000 80eb 	beq.w	404696 <_dtoa_r+0x446>
  4044c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4044c4:	f1bb 0f00 	cmp.w	fp, #0
  4044c8:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
  4044cc:	dd77      	ble.n	4045be <_dtoa_r+0x36e>
  4044ce:	4a25      	ldr	r2, [pc, #148]	; (404564 <_dtoa_r+0x314>)
  4044d0:	f00b 030f 	and.w	r3, fp, #15
  4044d4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  4044d8:	e9d3 2300 	ldrd	r2, r3, [r3]
  4044dc:	ea4f 162b 	mov.w	r6, fp, asr #4
  4044e0:	06f0      	lsls	r0, r6, #27
  4044e2:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  4044e6:	d55a      	bpl.n	40459e <_dtoa_r+0x34e>
  4044e8:	4b1f      	ldr	r3, [pc, #124]	; (404568 <_dtoa_r+0x318>)
  4044ea:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  4044ee:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  4044f2:	f7fe fecd 	bl	403290 <__aeabi_ddiv>
  4044f6:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4044fa:	f006 060f 	and.w	r6, r6, #15
  4044fe:	2503      	movs	r5, #3
  404500:	4f19      	ldr	r7, [pc, #100]	; (404568 <_dtoa_r+0x318>)
  404502:	2e00      	cmp	r6, #0
  404504:	d14d      	bne.n	4045a2 <_dtoa_r+0x352>
  404506:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  40450a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40450e:	f7fe febf 	bl	403290 <__aeabi_ddiv>
  404512:	e9cd 0102 	strd	r0, r1, [sp, #8]
  404516:	e06c      	b.n	4045f2 <_dtoa_r+0x3a2>
  404518:	2301      	movs	r3, #1
  40451a:	9309      	str	r3, [sp, #36]	; 0x24
  40451c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  40451e:	445b      	add	r3, fp
  404520:	f103 0901 	add.w	r9, r3, #1
  404524:	9304      	str	r3, [sp, #16]
  404526:	464b      	mov	r3, r9
  404528:	2b01      	cmp	r3, #1
  40452a:	bfb8      	it	lt
  40452c:	2301      	movlt	r3, #1
  40452e:	e7b0      	b.n	404492 <_dtoa_r+0x242>
  404530:	2300      	movs	r3, #0
  404532:	e7a8      	b.n	404486 <_dtoa_r+0x236>
  404534:	2300      	movs	r3, #0
  404536:	e7f0      	b.n	40451a <_dtoa_r+0x2ca>
  404538:	636f4361 	.word	0x636f4361
  40453c:	3fd287a7 	.word	0x3fd287a7
  404540:	8b60c8b3 	.word	0x8b60c8b3
  404544:	3fc68a28 	.word	0x3fc68a28
  404548:	509f79fb 	.word	0x509f79fb
  40454c:	3fd34413 	.word	0x3fd34413
  404550:	7ff00000 	.word	0x7ff00000
  404554:	00406539 	.word	0x00406539
  404558:	00406530 	.word	0x00406530
  40455c:	0040650d 	.word	0x0040650d
  404560:	3ff80000 	.word	0x3ff80000
  404564:	004065c8 	.word	0x004065c8
  404568:	004065a0 	.word	0x004065a0
  40456c:	2601      	movs	r6, #1
  40456e:	2300      	movs	r3, #0
  404570:	931e      	str	r3, [sp, #120]	; 0x78
  404572:	9609      	str	r6, [sp, #36]	; 0x24
  404574:	f04f 33ff 	mov.w	r3, #4294967295
  404578:	9304      	str	r3, [sp, #16]
  40457a:	4699      	mov	r9, r3
  40457c:	2200      	movs	r2, #0
  40457e:	2312      	movs	r3, #18
  404580:	921f      	str	r2, [sp, #124]	; 0x7c
  404582:	e786      	b.n	404492 <_dtoa_r+0x242>
  404584:	2301      	movs	r3, #1
  404586:	9309      	str	r3, [sp, #36]	; 0x24
  404588:	e7f4      	b.n	404574 <_dtoa_r+0x324>
  40458a:	2301      	movs	r3, #1
  40458c:	9304      	str	r3, [sp, #16]
  40458e:	4699      	mov	r9, r3
  404590:	461a      	mov	r2, r3
  404592:	e7f5      	b.n	404580 <_dtoa_r+0x330>
  404594:	686a      	ldr	r2, [r5, #4]
  404596:	3201      	adds	r2, #1
  404598:	606a      	str	r2, [r5, #4]
  40459a:	0049      	lsls	r1, r1, #1
  40459c:	e77d      	b.n	40449a <_dtoa_r+0x24a>
  40459e:	2502      	movs	r5, #2
  4045a0:	e7ae      	b.n	404500 <_dtoa_r+0x2b0>
  4045a2:	07f1      	lsls	r1, r6, #31
  4045a4:	d508      	bpl.n	4045b8 <_dtoa_r+0x368>
  4045a6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  4045aa:	e9d7 2300 	ldrd	r2, r3, [r7]
  4045ae:	f7fe fd45 	bl	40303c <__aeabi_dmul>
  4045b2:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  4045b6:	3501      	adds	r5, #1
  4045b8:	1076      	asrs	r6, r6, #1
  4045ba:	3708      	adds	r7, #8
  4045bc:	e7a1      	b.n	404502 <_dtoa_r+0x2b2>
  4045be:	f000 80a5 	beq.w	40470c <_dtoa_r+0x4bc>
  4045c2:	f1cb 0600 	rsb	r6, fp, #0
  4045c6:	4ba3      	ldr	r3, [pc, #652]	; (404854 <_dtoa_r+0x604>)
  4045c8:	4fa3      	ldr	r7, [pc, #652]	; (404858 <_dtoa_r+0x608>)
  4045ca:	f006 020f 	and.w	r2, r6, #15
  4045ce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4045d2:	e9d3 2300 	ldrd	r2, r3, [r3]
  4045d6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  4045da:	f7fe fd2f 	bl	40303c <__aeabi_dmul>
  4045de:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4045e2:	1136      	asrs	r6, r6, #4
  4045e4:	2300      	movs	r3, #0
  4045e6:	2502      	movs	r5, #2
  4045e8:	2e00      	cmp	r6, #0
  4045ea:	f040 8084 	bne.w	4046f6 <_dtoa_r+0x4a6>
  4045ee:	2b00      	cmp	r3, #0
  4045f0:	d18f      	bne.n	404512 <_dtoa_r+0x2c2>
  4045f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  4045f4:	2b00      	cmp	r3, #0
  4045f6:	f000 808b 	beq.w	404710 <_dtoa_r+0x4c0>
  4045fa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4045fe:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  404602:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  404606:	2200      	movs	r2, #0
  404608:	4b94      	ldr	r3, [pc, #592]	; (40485c <_dtoa_r+0x60c>)
  40460a:	f7fe ff89 	bl	403520 <__aeabi_dcmplt>
  40460e:	2800      	cmp	r0, #0
  404610:	d07e      	beq.n	404710 <_dtoa_r+0x4c0>
  404612:	f1b9 0f00 	cmp.w	r9, #0
  404616:	d07b      	beq.n	404710 <_dtoa_r+0x4c0>
  404618:	9b04      	ldr	r3, [sp, #16]
  40461a:	2b00      	cmp	r3, #0
  40461c:	dd37      	ble.n	40468e <_dtoa_r+0x43e>
  40461e:	2200      	movs	r2, #0
  404620:	4b8f      	ldr	r3, [pc, #572]	; (404860 <_dtoa_r+0x610>)
  404622:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  404626:	f7fe fd09 	bl	40303c <__aeabi_dmul>
  40462a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40462e:	9e04      	ldr	r6, [sp, #16]
  404630:	f10b 37ff 	add.w	r7, fp, #4294967295
  404634:	3501      	adds	r5, #1
  404636:	4628      	mov	r0, r5
  404638:	f7fe fc9a 	bl	402f70 <__aeabi_i2d>
  40463c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  404640:	f7fe fcfc 	bl	40303c <__aeabi_dmul>
  404644:	4b87      	ldr	r3, [pc, #540]	; (404864 <_dtoa_r+0x614>)
  404646:	2200      	movs	r2, #0
  404648:	f7fe fb46 	bl	402cd8 <__adddf3>
  40464c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  404650:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404652:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
  404656:	950b      	str	r5, [sp, #44]	; 0x2c
  404658:	2e00      	cmp	r6, #0
  40465a:	d15c      	bne.n	404716 <_dtoa_r+0x4c6>
  40465c:	2200      	movs	r2, #0
  40465e:	4b82      	ldr	r3, [pc, #520]	; (404868 <_dtoa_r+0x618>)
  404660:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404664:	f7fe fb36 	bl	402cd4 <__aeabi_dsub>
  404668:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40466a:	462b      	mov	r3, r5
  40466c:	e9cd 0102 	strd	r0, r1, [sp, #8]
  404670:	f7fe ff74 	bl	40355c <__aeabi_dcmpgt>
  404674:	2800      	cmp	r0, #0
  404676:	f040 82f7 	bne.w	404c68 <_dtoa_r+0xa18>
  40467a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40467c:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
  404680:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404684:	f7fe ff4c 	bl	403520 <__aeabi_dcmplt>
  404688:	2800      	cmp	r0, #0
  40468a:	f040 82eb 	bne.w	404c64 <_dtoa_r+0xa14>
  40468e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  404692:	e9cd 2302 	strd	r2, r3, [sp, #8]
  404696:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404698:	2b00      	cmp	r3, #0
  40469a:	f2c0 8151 	blt.w	404940 <_dtoa_r+0x6f0>
  40469e:	f1bb 0f0e 	cmp.w	fp, #14
  4046a2:	f300 814d 	bgt.w	404940 <_dtoa_r+0x6f0>
  4046a6:	4b6b      	ldr	r3, [pc, #428]	; (404854 <_dtoa_r+0x604>)
  4046a8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
  4046ac:	e9d3 2300 	ldrd	r2, r3, [r3]
  4046b0:	e9cd 2304 	strd	r2, r3, [sp, #16]
  4046b4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4046b6:	2b00      	cmp	r3, #0
  4046b8:	f280 80da 	bge.w	404870 <_dtoa_r+0x620>
  4046bc:	f1b9 0f00 	cmp.w	r9, #0
  4046c0:	f300 80d6 	bgt.w	404870 <_dtoa_r+0x620>
  4046c4:	f040 82cd 	bne.w	404c62 <_dtoa_r+0xa12>
  4046c8:	2200      	movs	r2, #0
  4046ca:	4b67      	ldr	r3, [pc, #412]	; (404868 <_dtoa_r+0x618>)
  4046cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4046d0:	f7fe fcb4 	bl	40303c <__aeabi_dmul>
  4046d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4046d8:	f7fe ff36 	bl	403548 <__aeabi_dcmpge>
  4046dc:	464e      	mov	r6, r9
  4046de:	464f      	mov	r7, r9
  4046e0:	2800      	cmp	r0, #0
  4046e2:	f040 82a4 	bne.w	404c2e <_dtoa_r+0x9de>
  4046e6:	9b06      	ldr	r3, [sp, #24]
  4046e8:	9a06      	ldr	r2, [sp, #24]
  4046ea:	1c5d      	adds	r5, r3, #1
  4046ec:	2331      	movs	r3, #49	; 0x31
  4046ee:	7013      	strb	r3, [r2, #0]
  4046f0:	f10b 0b01 	add.w	fp, fp, #1
  4046f4:	e29f      	b.n	404c36 <_dtoa_r+0x9e6>
  4046f6:	07f2      	lsls	r2, r6, #31
  4046f8:	d505      	bpl.n	404706 <_dtoa_r+0x4b6>
  4046fa:	e9d7 2300 	ldrd	r2, r3, [r7]
  4046fe:	f7fe fc9d 	bl	40303c <__aeabi_dmul>
  404702:	3501      	adds	r5, #1
  404704:	2301      	movs	r3, #1
  404706:	1076      	asrs	r6, r6, #1
  404708:	3708      	adds	r7, #8
  40470a:	e76d      	b.n	4045e8 <_dtoa_r+0x398>
  40470c:	2502      	movs	r5, #2
  40470e:	e770      	b.n	4045f2 <_dtoa_r+0x3a2>
  404710:	465f      	mov	r7, fp
  404712:	464e      	mov	r6, r9
  404714:	e78f      	b.n	404636 <_dtoa_r+0x3e6>
  404716:	9a06      	ldr	r2, [sp, #24]
  404718:	4b4e      	ldr	r3, [pc, #312]	; (404854 <_dtoa_r+0x604>)
  40471a:	4432      	add	r2, r6
  40471c:	9211      	str	r2, [sp, #68]	; 0x44
  40471e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404720:	1e71      	subs	r1, r6, #1
  404722:	2a00      	cmp	r2, #0
  404724:	d048      	beq.n	4047b8 <_dtoa_r+0x568>
  404726:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
  40472a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40472e:	2000      	movs	r0, #0
  404730:	494e      	ldr	r1, [pc, #312]	; (40486c <_dtoa_r+0x61c>)
  404732:	f7fe fdad 	bl	403290 <__aeabi_ddiv>
  404736:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  40473a:	f7fe facb 	bl	402cd4 <__aeabi_dsub>
  40473e:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  404742:	9d06      	ldr	r5, [sp, #24]
  404744:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  404748:	f7fe ff12 	bl	403570 <__aeabi_d2iz>
  40474c:	4606      	mov	r6, r0
  40474e:	f7fe fc0f 	bl	402f70 <__aeabi_i2d>
  404752:	4602      	mov	r2, r0
  404754:	460b      	mov	r3, r1
  404756:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40475a:	f7fe fabb 	bl	402cd4 <__aeabi_dsub>
  40475e:	3630      	adds	r6, #48	; 0x30
  404760:	f805 6b01 	strb.w	r6, [r5], #1
  404764:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  404768:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40476c:	f7fe fed8 	bl	403520 <__aeabi_dcmplt>
  404770:	2800      	cmp	r0, #0
  404772:	d165      	bne.n	404840 <_dtoa_r+0x5f0>
  404774:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  404778:	2000      	movs	r0, #0
  40477a:	4938      	ldr	r1, [pc, #224]	; (40485c <_dtoa_r+0x60c>)
  40477c:	f7fe faaa 	bl	402cd4 <__aeabi_dsub>
  404780:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  404784:	f7fe fecc 	bl	403520 <__aeabi_dcmplt>
  404788:	2800      	cmp	r0, #0
  40478a:	f040 80b9 	bne.w	404900 <_dtoa_r+0x6b0>
  40478e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404790:	429d      	cmp	r5, r3
  404792:	f43f af7c 	beq.w	40468e <_dtoa_r+0x43e>
  404796:	2200      	movs	r2, #0
  404798:	4b31      	ldr	r3, [pc, #196]	; (404860 <_dtoa_r+0x610>)
  40479a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  40479e:	f7fe fc4d 	bl	40303c <__aeabi_dmul>
  4047a2:	2200      	movs	r2, #0
  4047a4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  4047a8:	4b2d      	ldr	r3, [pc, #180]	; (404860 <_dtoa_r+0x610>)
  4047aa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4047ae:	f7fe fc45 	bl	40303c <__aeabi_dmul>
  4047b2:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4047b6:	e7c5      	b.n	404744 <_dtoa_r+0x4f4>
  4047b8:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
  4047bc:	e9d1 0100 	ldrd	r0, r1, [r1]
  4047c0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  4047c4:	f7fe fc3a 	bl	40303c <__aeabi_dmul>
  4047c8:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  4047cc:	9d06      	ldr	r5, [sp, #24]
  4047ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4047d2:	f7fe fecd 	bl	403570 <__aeabi_d2iz>
  4047d6:	4606      	mov	r6, r0
  4047d8:	f7fe fbca 	bl	402f70 <__aeabi_i2d>
  4047dc:	3630      	adds	r6, #48	; 0x30
  4047de:	4602      	mov	r2, r0
  4047e0:	460b      	mov	r3, r1
  4047e2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4047e6:	f7fe fa75 	bl	402cd4 <__aeabi_dsub>
  4047ea:	f805 6b01 	strb.w	r6, [r5], #1
  4047ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4047f0:	42ab      	cmp	r3, r5
  4047f2:	e9cd 0102 	strd	r0, r1, [sp, #8]
  4047f6:	f04f 0200 	mov.w	r2, #0
  4047fa:	d125      	bne.n	404848 <_dtoa_r+0x5f8>
  4047fc:	4b1b      	ldr	r3, [pc, #108]	; (40486c <_dtoa_r+0x61c>)
  4047fe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  404802:	f7fe fa69 	bl	402cd8 <__adddf3>
  404806:	4602      	mov	r2, r0
  404808:	460b      	mov	r3, r1
  40480a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40480e:	f7fe fea5 	bl	40355c <__aeabi_dcmpgt>
  404812:	2800      	cmp	r0, #0
  404814:	d174      	bne.n	404900 <_dtoa_r+0x6b0>
  404816:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  40481a:	2000      	movs	r0, #0
  40481c:	4913      	ldr	r1, [pc, #76]	; (40486c <_dtoa_r+0x61c>)
  40481e:	f7fe fa59 	bl	402cd4 <__aeabi_dsub>
  404822:	4602      	mov	r2, r0
  404824:	460b      	mov	r3, r1
  404826:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  40482a:	f7fe fe79 	bl	403520 <__aeabi_dcmplt>
  40482e:	2800      	cmp	r0, #0
  404830:	f43f af2d 	beq.w	40468e <_dtoa_r+0x43e>
  404834:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404838:	2b30      	cmp	r3, #48	; 0x30
  40483a:	f105 32ff 	add.w	r2, r5, #4294967295
  40483e:	d001      	beq.n	404844 <_dtoa_r+0x5f4>
  404840:	46bb      	mov	fp, r7
  404842:	e04c      	b.n	4048de <_dtoa_r+0x68e>
  404844:	4615      	mov	r5, r2
  404846:	e7f5      	b.n	404834 <_dtoa_r+0x5e4>
  404848:	4b05      	ldr	r3, [pc, #20]	; (404860 <_dtoa_r+0x610>)
  40484a:	f7fe fbf7 	bl	40303c <__aeabi_dmul>
  40484e:	e9cd 0102 	strd	r0, r1, [sp, #8]
  404852:	e7bc      	b.n	4047ce <_dtoa_r+0x57e>
  404854:	004065c8 	.word	0x004065c8
  404858:	004065a0 	.word	0x004065a0
  40485c:	3ff00000 	.word	0x3ff00000
  404860:	40240000 	.word	0x40240000
  404864:	401c0000 	.word	0x401c0000
  404868:	40140000 	.word	0x40140000
  40486c:	3fe00000 	.word	0x3fe00000
  404870:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
  404874:	9d06      	ldr	r5, [sp, #24]
  404876:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  40487a:	4630      	mov	r0, r6
  40487c:	4639      	mov	r1, r7
  40487e:	f7fe fd07 	bl	403290 <__aeabi_ddiv>
  404882:	f7fe fe75 	bl	403570 <__aeabi_d2iz>
  404886:	4680      	mov	r8, r0
  404888:	f7fe fb72 	bl	402f70 <__aeabi_i2d>
  40488c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
  404890:	f7fe fbd4 	bl	40303c <__aeabi_dmul>
  404894:	4602      	mov	r2, r0
  404896:	460b      	mov	r3, r1
  404898:	4630      	mov	r0, r6
  40489a:	4639      	mov	r1, r7
  40489c:	f108 0630 	add.w	r6, r8, #48	; 0x30
  4048a0:	f7fe fa18 	bl	402cd4 <__aeabi_dsub>
  4048a4:	f805 6b01 	strb.w	r6, [r5], #1
  4048a8:	9e06      	ldr	r6, [sp, #24]
  4048aa:	1bae      	subs	r6, r5, r6
  4048ac:	45b1      	cmp	r9, r6
  4048ae:	4602      	mov	r2, r0
  4048b0:	460b      	mov	r3, r1
  4048b2:	d138      	bne.n	404926 <_dtoa_r+0x6d6>
  4048b4:	f7fe fa10 	bl	402cd8 <__adddf3>
  4048b8:	4606      	mov	r6, r0
  4048ba:	460f      	mov	r7, r1
  4048bc:	4602      	mov	r2, r0
  4048be:	460b      	mov	r3, r1
  4048c0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4048c4:	f7fe fe2c 	bl	403520 <__aeabi_dcmplt>
  4048c8:	b9c8      	cbnz	r0, 4048fe <_dtoa_r+0x6ae>
  4048ca:	4632      	mov	r2, r6
  4048cc:	463b      	mov	r3, r7
  4048ce:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4048d2:	f7fe fe1b 	bl	40350c <__aeabi_dcmpeq>
  4048d6:	b110      	cbz	r0, 4048de <_dtoa_r+0x68e>
  4048d8:	f018 0f01 	tst.w	r8, #1
  4048dc:	d10f      	bne.n	4048fe <_dtoa_r+0x6ae>
  4048de:	4651      	mov	r1, sl
  4048e0:	4620      	mov	r0, r4
  4048e2:	f000 fd01 	bl	4052e8 <_Bfree>
  4048e6:	2300      	movs	r3, #0
  4048e8:	9a20      	ldr	r2, [sp, #128]	; 0x80
  4048ea:	702b      	strb	r3, [r5, #0]
  4048ec:	f10b 0301 	add.w	r3, fp, #1
  4048f0:	6013      	str	r3, [r2, #0]
  4048f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
  4048f4:	2b00      	cmp	r3, #0
  4048f6:	f43f acf0 	beq.w	4042da <_dtoa_r+0x8a>
  4048fa:	601d      	str	r5, [r3, #0]
  4048fc:	e4ed      	b.n	4042da <_dtoa_r+0x8a>
  4048fe:	465f      	mov	r7, fp
  404900:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  404904:	2a39      	cmp	r2, #57	; 0x39
  404906:	f105 33ff 	add.w	r3, r5, #4294967295
  40490a:	d106      	bne.n	40491a <_dtoa_r+0x6ca>
  40490c:	9a06      	ldr	r2, [sp, #24]
  40490e:	429a      	cmp	r2, r3
  404910:	d107      	bne.n	404922 <_dtoa_r+0x6d2>
  404912:	2330      	movs	r3, #48	; 0x30
  404914:	7013      	strb	r3, [r2, #0]
  404916:	3701      	adds	r7, #1
  404918:	4613      	mov	r3, r2
  40491a:	781a      	ldrb	r2, [r3, #0]
  40491c:	3201      	adds	r2, #1
  40491e:	701a      	strb	r2, [r3, #0]
  404920:	e78e      	b.n	404840 <_dtoa_r+0x5f0>
  404922:	461d      	mov	r5, r3
  404924:	e7ec      	b.n	404900 <_dtoa_r+0x6b0>
  404926:	2200      	movs	r2, #0
  404928:	4bb4      	ldr	r3, [pc, #720]	; (404bfc <_dtoa_r+0x9ac>)
  40492a:	f7fe fb87 	bl	40303c <__aeabi_dmul>
  40492e:	2200      	movs	r2, #0
  404930:	2300      	movs	r3, #0
  404932:	4606      	mov	r6, r0
  404934:	460f      	mov	r7, r1
  404936:	f7fe fde9 	bl	40350c <__aeabi_dcmpeq>
  40493a:	2800      	cmp	r0, #0
  40493c:	d09b      	beq.n	404876 <_dtoa_r+0x626>
  40493e:	e7ce      	b.n	4048de <_dtoa_r+0x68e>
  404940:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404942:	2a00      	cmp	r2, #0
  404944:	f000 8129 	beq.w	404b9a <_dtoa_r+0x94a>
  404948:	9a1e      	ldr	r2, [sp, #120]	; 0x78
  40494a:	2a01      	cmp	r2, #1
  40494c:	f300 810e 	bgt.w	404b6c <_dtoa_r+0x91c>
  404950:	9a10      	ldr	r2, [sp, #64]	; 0x40
  404952:	2a00      	cmp	r2, #0
  404954:	f000 8106 	beq.w	404b64 <_dtoa_r+0x914>
  404958:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40495c:	9e08      	ldr	r6, [sp, #32]
  40495e:	4645      	mov	r5, r8
  404960:	9a07      	ldr	r2, [sp, #28]
  404962:	2101      	movs	r1, #1
  404964:	441a      	add	r2, r3
  404966:	4620      	mov	r0, r4
  404968:	4498      	add	r8, r3
  40496a:	9207      	str	r2, [sp, #28]
  40496c:	f000 fd5c 	bl	405428 <__i2b>
  404970:	4607      	mov	r7, r0
  404972:	2d00      	cmp	r5, #0
  404974:	dd0b      	ble.n	40498e <_dtoa_r+0x73e>
  404976:	9b07      	ldr	r3, [sp, #28]
  404978:	2b00      	cmp	r3, #0
  40497a:	dd08      	ble.n	40498e <_dtoa_r+0x73e>
  40497c:	42ab      	cmp	r3, r5
  40497e:	9a07      	ldr	r2, [sp, #28]
  404980:	bfa8      	it	ge
  404982:	462b      	movge	r3, r5
  404984:	eba8 0803 	sub.w	r8, r8, r3
  404988:	1aed      	subs	r5, r5, r3
  40498a:	1ad3      	subs	r3, r2, r3
  40498c:	9307      	str	r3, [sp, #28]
  40498e:	9b08      	ldr	r3, [sp, #32]
  404990:	b1fb      	cbz	r3, 4049d2 <_dtoa_r+0x782>
  404992:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404994:	2b00      	cmp	r3, #0
  404996:	f000 8104 	beq.w	404ba2 <_dtoa_r+0x952>
  40499a:	2e00      	cmp	r6, #0
  40499c:	dd11      	ble.n	4049c2 <_dtoa_r+0x772>
  40499e:	4639      	mov	r1, r7
  4049a0:	4632      	mov	r2, r6
  4049a2:	4620      	mov	r0, r4
  4049a4:	f000 fdd6 	bl	405554 <__pow5mult>
  4049a8:	4652      	mov	r2, sl
  4049aa:	4601      	mov	r1, r0
  4049ac:	4607      	mov	r7, r0
  4049ae:	4620      	mov	r0, r4
  4049b0:	f000 fd43 	bl	40543a <__multiply>
  4049b4:	4651      	mov	r1, sl
  4049b6:	900a      	str	r0, [sp, #40]	; 0x28
  4049b8:	4620      	mov	r0, r4
  4049ba:	f000 fc95 	bl	4052e8 <_Bfree>
  4049be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4049c0:	469a      	mov	sl, r3
  4049c2:	9b08      	ldr	r3, [sp, #32]
  4049c4:	1b9a      	subs	r2, r3, r6
  4049c6:	d004      	beq.n	4049d2 <_dtoa_r+0x782>
  4049c8:	4651      	mov	r1, sl
  4049ca:	4620      	mov	r0, r4
  4049cc:	f000 fdc2 	bl	405554 <__pow5mult>
  4049d0:	4682      	mov	sl, r0
  4049d2:	2101      	movs	r1, #1
  4049d4:	4620      	mov	r0, r4
  4049d6:	f000 fd27 	bl	405428 <__i2b>
  4049da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4049dc:	2b00      	cmp	r3, #0
  4049de:	4606      	mov	r6, r0
  4049e0:	f340 80e1 	ble.w	404ba6 <_dtoa_r+0x956>
  4049e4:	461a      	mov	r2, r3
  4049e6:	4601      	mov	r1, r0
  4049e8:	4620      	mov	r0, r4
  4049ea:	f000 fdb3 	bl	405554 <__pow5mult>
  4049ee:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  4049f0:	2b01      	cmp	r3, #1
  4049f2:	4606      	mov	r6, r0
  4049f4:	f340 80da 	ble.w	404bac <_dtoa_r+0x95c>
  4049f8:	2300      	movs	r3, #0
  4049fa:	9308      	str	r3, [sp, #32]
  4049fc:	6933      	ldr	r3, [r6, #16]
  4049fe:	eb06 0383 	add.w	r3, r6, r3, lsl #2
  404a02:	6918      	ldr	r0, [r3, #16]
  404a04:	f000 fcc2 	bl	40538c <__hi0bits>
  404a08:	f1c0 0020 	rsb	r0, r0, #32
  404a0c:	9b07      	ldr	r3, [sp, #28]
  404a0e:	4418      	add	r0, r3
  404a10:	f010 001f 	ands.w	r0, r0, #31
  404a14:	f000 80f0 	beq.w	404bf8 <_dtoa_r+0x9a8>
  404a18:	f1c0 0320 	rsb	r3, r0, #32
  404a1c:	2b04      	cmp	r3, #4
  404a1e:	f340 80e2 	ble.w	404be6 <_dtoa_r+0x996>
  404a22:	9b07      	ldr	r3, [sp, #28]
  404a24:	f1c0 001c 	rsb	r0, r0, #28
  404a28:	4480      	add	r8, r0
  404a2a:	4405      	add	r5, r0
  404a2c:	4403      	add	r3, r0
  404a2e:	9307      	str	r3, [sp, #28]
  404a30:	f1b8 0f00 	cmp.w	r8, #0
  404a34:	dd05      	ble.n	404a42 <_dtoa_r+0x7f2>
  404a36:	4651      	mov	r1, sl
  404a38:	4642      	mov	r2, r8
  404a3a:	4620      	mov	r0, r4
  404a3c:	f000 fdd8 	bl	4055f0 <__lshift>
  404a40:	4682      	mov	sl, r0
  404a42:	9b07      	ldr	r3, [sp, #28]
  404a44:	2b00      	cmp	r3, #0
  404a46:	dd05      	ble.n	404a54 <_dtoa_r+0x804>
  404a48:	4631      	mov	r1, r6
  404a4a:	461a      	mov	r2, r3
  404a4c:	4620      	mov	r0, r4
  404a4e:	f000 fdcf 	bl	4055f0 <__lshift>
  404a52:	4606      	mov	r6, r0
  404a54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404a56:	2b00      	cmp	r3, #0
  404a58:	f000 80d2 	beq.w	404c00 <_dtoa_r+0x9b0>
  404a5c:	4631      	mov	r1, r6
  404a5e:	4650      	mov	r0, sl
  404a60:	f000 fe17 	bl	405692 <__mcmp>
  404a64:	2800      	cmp	r0, #0
  404a66:	f280 80cb 	bge.w	404c00 <_dtoa_r+0x9b0>
  404a6a:	2300      	movs	r3, #0
  404a6c:	4651      	mov	r1, sl
  404a6e:	220a      	movs	r2, #10
  404a70:	4620      	mov	r0, r4
  404a72:	f000 fc50 	bl	405316 <__multadd>
  404a76:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404a78:	f10b 3bff 	add.w	fp, fp, #4294967295
  404a7c:	4682      	mov	sl, r0
  404a7e:	2b00      	cmp	r3, #0
  404a80:	f000 81aa 	beq.w	404dd8 <_dtoa_r+0xb88>
  404a84:	2300      	movs	r3, #0
  404a86:	4639      	mov	r1, r7
  404a88:	220a      	movs	r2, #10
  404a8a:	4620      	mov	r0, r4
  404a8c:	f000 fc43 	bl	405316 <__multadd>
  404a90:	9b04      	ldr	r3, [sp, #16]
  404a92:	2b00      	cmp	r3, #0
  404a94:	4607      	mov	r7, r0
  404a96:	dc03      	bgt.n	404aa0 <_dtoa_r+0x850>
  404a98:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  404a9a:	2b02      	cmp	r3, #2
  404a9c:	f300 80b8 	bgt.w	404c10 <_dtoa_r+0x9c0>
  404aa0:	2d00      	cmp	r5, #0
  404aa2:	dd05      	ble.n	404ab0 <_dtoa_r+0x860>
  404aa4:	4639      	mov	r1, r7
  404aa6:	462a      	mov	r2, r5
  404aa8:	4620      	mov	r0, r4
  404aaa:	f000 fda1 	bl	4055f0 <__lshift>
  404aae:	4607      	mov	r7, r0
  404ab0:	9b08      	ldr	r3, [sp, #32]
  404ab2:	2b00      	cmp	r3, #0
  404ab4:	f000 8110 	beq.w	404cd8 <_dtoa_r+0xa88>
  404ab8:	6879      	ldr	r1, [r7, #4]
  404aba:	4620      	mov	r0, r4
  404abc:	f000 fbe0 	bl	405280 <_Balloc>
  404ac0:	693a      	ldr	r2, [r7, #16]
  404ac2:	3202      	adds	r2, #2
  404ac4:	4605      	mov	r5, r0
  404ac6:	0092      	lsls	r2, r2, #2
  404ac8:	f107 010c 	add.w	r1, r7, #12
  404acc:	300c      	adds	r0, #12
  404ace:	f7fe fdeb 	bl	4036a8 <memcpy>
  404ad2:	2201      	movs	r2, #1
  404ad4:	4629      	mov	r1, r5
  404ad6:	4620      	mov	r0, r4
  404ad8:	f000 fd8a 	bl	4055f0 <__lshift>
  404adc:	9b02      	ldr	r3, [sp, #8]
  404ade:	f8dd 8018 	ldr.w	r8, [sp, #24]
  404ae2:	9707      	str	r7, [sp, #28]
  404ae4:	f003 0301 	and.w	r3, r3, #1
  404ae8:	4607      	mov	r7, r0
  404aea:	9308      	str	r3, [sp, #32]
  404aec:	4631      	mov	r1, r6
  404aee:	4650      	mov	r0, sl
  404af0:	f7ff fb22 	bl	404138 <quorem>
  404af4:	9907      	ldr	r1, [sp, #28]
  404af6:	4605      	mov	r5, r0
  404af8:	f100 0930 	add.w	r9, r0, #48	; 0x30
  404afc:	4650      	mov	r0, sl
  404afe:	f000 fdc8 	bl	405692 <__mcmp>
  404b02:	463a      	mov	r2, r7
  404b04:	9002      	str	r0, [sp, #8]
  404b06:	4631      	mov	r1, r6
  404b08:	4620      	mov	r0, r4
  404b0a:	f000 fddc 	bl	4056c6 <__mdiff>
  404b0e:	68c3      	ldr	r3, [r0, #12]
  404b10:	4602      	mov	r2, r0
  404b12:	2b00      	cmp	r3, #0
  404b14:	f040 80e2 	bne.w	404cdc <_dtoa_r+0xa8c>
  404b18:	4601      	mov	r1, r0
  404b1a:	9009      	str	r0, [sp, #36]	; 0x24
  404b1c:	4650      	mov	r0, sl
  404b1e:	f000 fdb8 	bl	405692 <__mcmp>
  404b22:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404b24:	4603      	mov	r3, r0
  404b26:	4611      	mov	r1, r2
  404b28:	4620      	mov	r0, r4
  404b2a:	9309      	str	r3, [sp, #36]	; 0x24
  404b2c:	f000 fbdc 	bl	4052e8 <_Bfree>
  404b30:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404b32:	2b00      	cmp	r3, #0
  404b34:	f040 80d4 	bne.w	404ce0 <_dtoa_r+0xa90>
  404b38:	9a1e      	ldr	r2, [sp, #120]	; 0x78
  404b3a:	2a00      	cmp	r2, #0
  404b3c:	f040 80d0 	bne.w	404ce0 <_dtoa_r+0xa90>
  404b40:	9a08      	ldr	r2, [sp, #32]
  404b42:	2a00      	cmp	r2, #0
  404b44:	f040 80cc 	bne.w	404ce0 <_dtoa_r+0xa90>
  404b48:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
  404b4c:	f000 80e8 	beq.w	404d20 <_dtoa_r+0xad0>
  404b50:	9b02      	ldr	r3, [sp, #8]
  404b52:	2b00      	cmp	r3, #0
  404b54:	dd01      	ble.n	404b5a <_dtoa_r+0x90a>
  404b56:	f105 0931 	add.w	r9, r5, #49	; 0x31
  404b5a:	f108 0501 	add.w	r5, r8, #1
  404b5e:	f888 9000 	strb.w	r9, [r8]
  404b62:	e06a      	b.n	404c3a <_dtoa_r+0x9ea>
  404b64:	9b12      	ldr	r3, [sp, #72]	; 0x48
  404b66:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  404b6a:	e6f7      	b.n	40495c <_dtoa_r+0x70c>
  404b6c:	9b08      	ldr	r3, [sp, #32]
  404b6e:	f109 36ff 	add.w	r6, r9, #4294967295
  404b72:	42b3      	cmp	r3, r6
  404b74:	bfbf      	itttt	lt
  404b76:	9b08      	ldrlt	r3, [sp, #32]
  404b78:	9608      	strlt	r6, [sp, #32]
  404b7a:	1af2      	sublt	r2, r6, r3
  404b7c:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
  404b7e:	bfb7      	itett	lt
  404b80:	189b      	addlt	r3, r3, r2
  404b82:	1b9e      	subge	r6, r3, r6
  404b84:	930c      	strlt	r3, [sp, #48]	; 0x30
  404b86:	2600      	movlt	r6, #0
  404b88:	f1b9 0f00 	cmp.w	r9, #0
  404b8c:	bfb9      	ittee	lt
  404b8e:	eba8 0509 	sublt.w	r5, r8, r9
  404b92:	2300      	movlt	r3, #0
  404b94:	4645      	movge	r5, r8
  404b96:	464b      	movge	r3, r9
  404b98:	e6e2      	b.n	404960 <_dtoa_r+0x710>
  404b9a:	9e08      	ldr	r6, [sp, #32]
  404b9c:	9f09      	ldr	r7, [sp, #36]	; 0x24
  404b9e:	4645      	mov	r5, r8
  404ba0:	e6e7      	b.n	404972 <_dtoa_r+0x722>
  404ba2:	9a08      	ldr	r2, [sp, #32]
  404ba4:	e710      	b.n	4049c8 <_dtoa_r+0x778>
  404ba6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  404ba8:	2b01      	cmp	r3, #1
  404baa:	dc18      	bgt.n	404bde <_dtoa_r+0x98e>
  404bac:	9b02      	ldr	r3, [sp, #8]
  404bae:	b9b3      	cbnz	r3, 404bde <_dtoa_r+0x98e>
  404bb0:	9b03      	ldr	r3, [sp, #12]
  404bb2:	f3c3 0313 	ubfx	r3, r3, #0, #20
  404bb6:	b9a3      	cbnz	r3, 404be2 <_dtoa_r+0x992>
  404bb8:	9b03      	ldr	r3, [sp, #12]
  404bba:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  404bbe:	0d1b      	lsrs	r3, r3, #20
  404bc0:	051b      	lsls	r3, r3, #20
  404bc2:	b12b      	cbz	r3, 404bd0 <_dtoa_r+0x980>
  404bc4:	9b07      	ldr	r3, [sp, #28]
  404bc6:	3301      	adds	r3, #1
  404bc8:	9307      	str	r3, [sp, #28]
  404bca:	f108 0801 	add.w	r8, r8, #1
  404bce:	2301      	movs	r3, #1
  404bd0:	9308      	str	r3, [sp, #32]
  404bd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404bd4:	2b00      	cmp	r3, #0
  404bd6:	f47f af11 	bne.w	4049fc <_dtoa_r+0x7ac>
  404bda:	2001      	movs	r0, #1
  404bdc:	e716      	b.n	404a0c <_dtoa_r+0x7bc>
  404bde:	2300      	movs	r3, #0
  404be0:	e7f6      	b.n	404bd0 <_dtoa_r+0x980>
  404be2:	9b02      	ldr	r3, [sp, #8]
  404be4:	e7f4      	b.n	404bd0 <_dtoa_r+0x980>
  404be6:	f43f af23 	beq.w	404a30 <_dtoa_r+0x7e0>
  404bea:	9a07      	ldr	r2, [sp, #28]
  404bec:	331c      	adds	r3, #28
  404bee:	441a      	add	r2, r3
  404bf0:	4498      	add	r8, r3
  404bf2:	441d      	add	r5, r3
  404bf4:	4613      	mov	r3, r2
  404bf6:	e71a      	b.n	404a2e <_dtoa_r+0x7de>
  404bf8:	4603      	mov	r3, r0
  404bfa:	e7f6      	b.n	404bea <_dtoa_r+0x99a>
  404bfc:	40240000 	.word	0x40240000
  404c00:	f1b9 0f00 	cmp.w	r9, #0
  404c04:	dc33      	bgt.n	404c6e <_dtoa_r+0xa1e>
  404c06:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  404c08:	2b02      	cmp	r3, #2
  404c0a:	dd30      	ble.n	404c6e <_dtoa_r+0xa1e>
  404c0c:	f8cd 9010 	str.w	r9, [sp, #16]
  404c10:	9b04      	ldr	r3, [sp, #16]
  404c12:	b963      	cbnz	r3, 404c2e <_dtoa_r+0x9de>
  404c14:	4631      	mov	r1, r6
  404c16:	2205      	movs	r2, #5
  404c18:	4620      	mov	r0, r4
  404c1a:	f000 fb7c 	bl	405316 <__multadd>
  404c1e:	4601      	mov	r1, r0
  404c20:	4606      	mov	r6, r0
  404c22:	4650      	mov	r0, sl
  404c24:	f000 fd35 	bl	405692 <__mcmp>
  404c28:	2800      	cmp	r0, #0
  404c2a:	f73f ad5c 	bgt.w	4046e6 <_dtoa_r+0x496>
  404c2e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  404c30:	9d06      	ldr	r5, [sp, #24]
  404c32:	ea6f 0b03 	mvn.w	fp, r3
  404c36:	2300      	movs	r3, #0
  404c38:	9307      	str	r3, [sp, #28]
  404c3a:	4631      	mov	r1, r6
  404c3c:	4620      	mov	r0, r4
  404c3e:	f000 fb53 	bl	4052e8 <_Bfree>
  404c42:	2f00      	cmp	r7, #0
  404c44:	f43f ae4b 	beq.w	4048de <_dtoa_r+0x68e>
  404c48:	9b07      	ldr	r3, [sp, #28]
  404c4a:	b12b      	cbz	r3, 404c58 <_dtoa_r+0xa08>
  404c4c:	42bb      	cmp	r3, r7
  404c4e:	d003      	beq.n	404c58 <_dtoa_r+0xa08>
  404c50:	4619      	mov	r1, r3
  404c52:	4620      	mov	r0, r4
  404c54:	f000 fb48 	bl	4052e8 <_Bfree>
  404c58:	4639      	mov	r1, r7
  404c5a:	4620      	mov	r0, r4
  404c5c:	f000 fb44 	bl	4052e8 <_Bfree>
  404c60:	e63d      	b.n	4048de <_dtoa_r+0x68e>
  404c62:	2600      	movs	r6, #0
  404c64:	4637      	mov	r7, r6
  404c66:	e7e2      	b.n	404c2e <_dtoa_r+0x9de>
  404c68:	46bb      	mov	fp, r7
  404c6a:	4637      	mov	r7, r6
  404c6c:	e53b      	b.n	4046e6 <_dtoa_r+0x496>
  404c6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404c70:	f8cd 9010 	str.w	r9, [sp, #16]
  404c74:	2b00      	cmp	r3, #0
  404c76:	f47f af13 	bne.w	404aa0 <_dtoa_r+0x850>
  404c7a:	9d06      	ldr	r5, [sp, #24]
  404c7c:	4631      	mov	r1, r6
  404c7e:	4650      	mov	r0, sl
  404c80:	f7ff fa5a 	bl	404138 <quorem>
  404c84:	f100 0930 	add.w	r9, r0, #48	; 0x30
  404c88:	f805 9b01 	strb.w	r9, [r5], #1
  404c8c:	9b06      	ldr	r3, [sp, #24]
  404c8e:	9a04      	ldr	r2, [sp, #16]
  404c90:	1aeb      	subs	r3, r5, r3
  404c92:	429a      	cmp	r2, r3
  404c94:	f300 8083 	bgt.w	404d9e <_dtoa_r+0xb4e>
  404c98:	9b06      	ldr	r3, [sp, #24]
  404c9a:	2a01      	cmp	r2, #1
  404c9c:	bfac      	ite	ge
  404c9e:	189b      	addge	r3, r3, r2
  404ca0:	3301      	addlt	r3, #1
  404ca2:	4698      	mov	r8, r3
  404ca4:	2300      	movs	r3, #0
  404ca6:	9307      	str	r3, [sp, #28]
  404ca8:	4651      	mov	r1, sl
  404caa:	2201      	movs	r2, #1
  404cac:	4620      	mov	r0, r4
  404cae:	f000 fc9f 	bl	4055f0 <__lshift>
  404cb2:	4631      	mov	r1, r6
  404cb4:	4682      	mov	sl, r0
  404cb6:	f000 fcec 	bl	405692 <__mcmp>
  404cba:	2800      	cmp	r0, #0
  404cbc:	dc35      	bgt.n	404d2a <_dtoa_r+0xada>
  404cbe:	d102      	bne.n	404cc6 <_dtoa_r+0xa76>
  404cc0:	f019 0f01 	tst.w	r9, #1
  404cc4:	d131      	bne.n	404d2a <_dtoa_r+0xada>
  404cc6:	4645      	mov	r5, r8
  404cc8:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404ccc:	2b30      	cmp	r3, #48	; 0x30
  404cce:	f105 32ff 	add.w	r2, r5, #4294967295
  404cd2:	d1b2      	bne.n	404c3a <_dtoa_r+0x9ea>
  404cd4:	4615      	mov	r5, r2
  404cd6:	e7f7      	b.n	404cc8 <_dtoa_r+0xa78>
  404cd8:	4638      	mov	r0, r7
  404cda:	e6ff      	b.n	404adc <_dtoa_r+0x88c>
  404cdc:	2301      	movs	r3, #1
  404cde:	e722      	b.n	404b26 <_dtoa_r+0x8d6>
  404ce0:	9a02      	ldr	r2, [sp, #8]
  404ce2:	2a00      	cmp	r2, #0
  404ce4:	db04      	blt.n	404cf0 <_dtoa_r+0xaa0>
  404ce6:	d129      	bne.n	404d3c <_dtoa_r+0xaec>
  404ce8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
  404cea:	bb3a      	cbnz	r2, 404d3c <_dtoa_r+0xaec>
  404cec:	9a08      	ldr	r2, [sp, #32]
  404cee:	bb2a      	cbnz	r2, 404d3c <_dtoa_r+0xaec>
  404cf0:	2b00      	cmp	r3, #0
  404cf2:	f77f af32 	ble.w	404b5a <_dtoa_r+0x90a>
  404cf6:	4651      	mov	r1, sl
  404cf8:	2201      	movs	r2, #1
  404cfa:	4620      	mov	r0, r4
  404cfc:	f000 fc78 	bl	4055f0 <__lshift>
  404d00:	4631      	mov	r1, r6
  404d02:	4682      	mov	sl, r0
  404d04:	f000 fcc5 	bl	405692 <__mcmp>
  404d08:	2800      	cmp	r0, #0
  404d0a:	dc05      	bgt.n	404d18 <_dtoa_r+0xac8>
  404d0c:	f47f af25 	bne.w	404b5a <_dtoa_r+0x90a>
  404d10:	f019 0f01 	tst.w	r9, #1
  404d14:	f43f af21 	beq.w	404b5a <_dtoa_r+0x90a>
  404d18:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
  404d1c:	f47f af1b 	bne.w	404b56 <_dtoa_r+0x906>
  404d20:	2339      	movs	r3, #57	; 0x39
  404d22:	f888 3000 	strb.w	r3, [r8]
  404d26:	f108 0801 	add.w	r8, r8, #1
  404d2a:	4645      	mov	r5, r8
  404d2c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  404d30:	2b39      	cmp	r3, #57	; 0x39
  404d32:	f105 32ff 	add.w	r2, r5, #4294967295
  404d36:	d03a      	beq.n	404dae <_dtoa_r+0xb5e>
  404d38:	3301      	adds	r3, #1
  404d3a:	e03f      	b.n	404dbc <_dtoa_r+0xb6c>
  404d3c:	2b00      	cmp	r3, #0
  404d3e:	f108 0501 	add.w	r5, r8, #1
  404d42:	dd05      	ble.n	404d50 <_dtoa_r+0xb00>
  404d44:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
  404d48:	d0ea      	beq.n	404d20 <_dtoa_r+0xad0>
  404d4a:	f109 0901 	add.w	r9, r9, #1
  404d4e:	e706      	b.n	404b5e <_dtoa_r+0x90e>
  404d50:	9b06      	ldr	r3, [sp, #24]
  404d52:	9a04      	ldr	r2, [sp, #16]
  404d54:	f805 9c01 	strb.w	r9, [r5, #-1]
  404d58:	1aeb      	subs	r3, r5, r3
  404d5a:	4293      	cmp	r3, r2
  404d5c:	46a8      	mov	r8, r5
  404d5e:	d0a3      	beq.n	404ca8 <_dtoa_r+0xa58>
  404d60:	4651      	mov	r1, sl
  404d62:	2300      	movs	r3, #0
  404d64:	220a      	movs	r2, #10
  404d66:	4620      	mov	r0, r4
  404d68:	f000 fad5 	bl	405316 <__multadd>
  404d6c:	9b07      	ldr	r3, [sp, #28]
  404d6e:	9907      	ldr	r1, [sp, #28]
  404d70:	42bb      	cmp	r3, r7
  404d72:	4682      	mov	sl, r0
  404d74:	f04f 0300 	mov.w	r3, #0
  404d78:	f04f 020a 	mov.w	r2, #10
  404d7c:	4620      	mov	r0, r4
  404d7e:	d104      	bne.n	404d8a <_dtoa_r+0xb3a>
  404d80:	f000 fac9 	bl	405316 <__multadd>
  404d84:	9007      	str	r0, [sp, #28]
  404d86:	4607      	mov	r7, r0
  404d88:	e6b0      	b.n	404aec <_dtoa_r+0x89c>
  404d8a:	f000 fac4 	bl	405316 <__multadd>
  404d8e:	2300      	movs	r3, #0
  404d90:	9007      	str	r0, [sp, #28]
  404d92:	220a      	movs	r2, #10
  404d94:	4639      	mov	r1, r7
  404d96:	4620      	mov	r0, r4
  404d98:	f000 fabd 	bl	405316 <__multadd>
  404d9c:	e7f3      	b.n	404d86 <_dtoa_r+0xb36>
  404d9e:	4651      	mov	r1, sl
  404da0:	2300      	movs	r3, #0
  404da2:	220a      	movs	r2, #10
  404da4:	4620      	mov	r0, r4
  404da6:	f000 fab6 	bl	405316 <__multadd>
  404daa:	4682      	mov	sl, r0
  404dac:	e766      	b.n	404c7c <_dtoa_r+0xa2c>
  404dae:	9b06      	ldr	r3, [sp, #24]
  404db0:	4293      	cmp	r3, r2
  404db2:	d105      	bne.n	404dc0 <_dtoa_r+0xb70>
  404db4:	9a06      	ldr	r2, [sp, #24]
  404db6:	f10b 0b01 	add.w	fp, fp, #1
  404dba:	2331      	movs	r3, #49	; 0x31
  404dbc:	7013      	strb	r3, [r2, #0]
  404dbe:	e73c      	b.n	404c3a <_dtoa_r+0x9ea>
  404dc0:	4615      	mov	r5, r2
  404dc2:	e7b3      	b.n	404d2c <_dtoa_r+0xadc>
  404dc4:	4b09      	ldr	r3, [pc, #36]	; (404dec <_dtoa_r+0xb9c>)
  404dc6:	f7ff baa5 	b.w	404314 <_dtoa_r+0xc4>
  404dca:	9b22      	ldr	r3, [sp, #136]	; 0x88
  404dcc:	2b00      	cmp	r3, #0
  404dce:	f47f aa7f 	bne.w	4042d0 <_dtoa_r+0x80>
  404dd2:	4b07      	ldr	r3, [pc, #28]	; (404df0 <_dtoa_r+0xba0>)
  404dd4:	f7ff ba9e 	b.w	404314 <_dtoa_r+0xc4>
  404dd8:	9b04      	ldr	r3, [sp, #16]
  404dda:	2b00      	cmp	r3, #0
  404ddc:	f73f af4d 	bgt.w	404c7a <_dtoa_r+0xa2a>
  404de0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
  404de2:	2b02      	cmp	r3, #2
  404de4:	f77f af49 	ble.w	404c7a <_dtoa_r+0xa2a>
  404de8:	e712      	b.n	404c10 <_dtoa_r+0x9c0>
  404dea:	bf00      	nop
  404dec:	0040650c 	.word	0x0040650c
  404df0:	00406530 	.word	0x00406530

00404df4 <__sflush_r>:
  404df4:	898a      	ldrh	r2, [r1, #12]
  404df6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404dfa:	4605      	mov	r5, r0
  404dfc:	0710      	lsls	r0, r2, #28
  404dfe:	460c      	mov	r4, r1
  404e00:	d45a      	bmi.n	404eb8 <__sflush_r+0xc4>
  404e02:	684b      	ldr	r3, [r1, #4]
  404e04:	2b00      	cmp	r3, #0
  404e06:	dc05      	bgt.n	404e14 <__sflush_r+0x20>
  404e08:	6c0b      	ldr	r3, [r1, #64]	; 0x40
  404e0a:	2b00      	cmp	r3, #0
  404e0c:	dc02      	bgt.n	404e14 <__sflush_r+0x20>
  404e0e:	2000      	movs	r0, #0
  404e10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e14:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
  404e16:	2e00      	cmp	r6, #0
  404e18:	d0f9      	beq.n	404e0e <__sflush_r+0x1a>
  404e1a:	2300      	movs	r3, #0
  404e1c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
  404e20:	682f      	ldr	r7, [r5, #0]
  404e22:	602b      	str	r3, [r5, #0]
  404e24:	d033      	beq.n	404e8e <__sflush_r+0x9a>
  404e26:	6d60      	ldr	r0, [r4, #84]	; 0x54
  404e28:	89a3      	ldrh	r3, [r4, #12]
  404e2a:	075a      	lsls	r2, r3, #29
  404e2c:	d505      	bpl.n	404e3a <__sflush_r+0x46>
  404e2e:	6863      	ldr	r3, [r4, #4]
  404e30:	1ac0      	subs	r0, r0, r3
  404e32:	6b63      	ldr	r3, [r4, #52]	; 0x34
  404e34:	b10b      	cbz	r3, 404e3a <__sflush_r+0x46>
  404e36:	6c23      	ldr	r3, [r4, #64]	; 0x40
  404e38:	1ac0      	subs	r0, r0, r3
  404e3a:	2300      	movs	r3, #0
  404e3c:	4602      	mov	r2, r0
  404e3e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
  404e40:	6a21      	ldr	r1, [r4, #32]
  404e42:	4628      	mov	r0, r5
  404e44:	47b0      	blx	r6
  404e46:	1c43      	adds	r3, r0, #1
  404e48:	89a3      	ldrh	r3, [r4, #12]
  404e4a:	d106      	bne.n	404e5a <__sflush_r+0x66>
  404e4c:	6829      	ldr	r1, [r5, #0]
  404e4e:	291d      	cmp	r1, #29
  404e50:	d84b      	bhi.n	404eea <__sflush_r+0xf6>
  404e52:	4a2b      	ldr	r2, [pc, #172]	; (404f00 <__sflush_r+0x10c>)
  404e54:	40ca      	lsrs	r2, r1
  404e56:	07d6      	lsls	r6, r2, #31
  404e58:	d547      	bpl.n	404eea <__sflush_r+0xf6>
  404e5a:	2200      	movs	r2, #0
  404e5c:	6062      	str	r2, [r4, #4]
  404e5e:	04d9      	lsls	r1, r3, #19
  404e60:	6922      	ldr	r2, [r4, #16]
  404e62:	6022      	str	r2, [r4, #0]
  404e64:	d504      	bpl.n	404e70 <__sflush_r+0x7c>
  404e66:	1c42      	adds	r2, r0, #1
  404e68:	d101      	bne.n	404e6e <__sflush_r+0x7a>
  404e6a:	682b      	ldr	r3, [r5, #0]
  404e6c:	b903      	cbnz	r3, 404e70 <__sflush_r+0x7c>
  404e6e:	6560      	str	r0, [r4, #84]	; 0x54
  404e70:	6b61      	ldr	r1, [r4, #52]	; 0x34
  404e72:	602f      	str	r7, [r5, #0]
  404e74:	2900      	cmp	r1, #0
  404e76:	d0ca      	beq.n	404e0e <__sflush_r+0x1a>
  404e78:	f104 0344 	add.w	r3, r4, #68	; 0x44
  404e7c:	4299      	cmp	r1, r3
  404e7e:	d002      	beq.n	404e86 <__sflush_r+0x92>
  404e80:	4628      	mov	r0, r5
  404e82:	f000 fcdb 	bl	40583c <_free_r>
  404e86:	2000      	movs	r0, #0
  404e88:	6360      	str	r0, [r4, #52]	; 0x34
  404e8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404e8e:	6a21      	ldr	r1, [r4, #32]
  404e90:	2301      	movs	r3, #1
  404e92:	4628      	mov	r0, r5
  404e94:	47b0      	blx	r6
  404e96:	1c41      	adds	r1, r0, #1
  404e98:	d1c6      	bne.n	404e28 <__sflush_r+0x34>
  404e9a:	682b      	ldr	r3, [r5, #0]
  404e9c:	2b00      	cmp	r3, #0
  404e9e:	d0c3      	beq.n	404e28 <__sflush_r+0x34>
  404ea0:	2b1d      	cmp	r3, #29
  404ea2:	d001      	beq.n	404ea8 <__sflush_r+0xb4>
  404ea4:	2b16      	cmp	r3, #22
  404ea6:	d101      	bne.n	404eac <__sflush_r+0xb8>
  404ea8:	602f      	str	r7, [r5, #0]
  404eaa:	e7b0      	b.n	404e0e <__sflush_r+0x1a>
  404eac:	89a3      	ldrh	r3, [r4, #12]
  404eae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404eb2:	81a3      	strh	r3, [r4, #12]
  404eb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404eb8:	690f      	ldr	r7, [r1, #16]
  404eba:	2f00      	cmp	r7, #0
  404ebc:	d0a7      	beq.n	404e0e <__sflush_r+0x1a>
  404ebe:	0793      	lsls	r3, r2, #30
  404ec0:	680e      	ldr	r6, [r1, #0]
  404ec2:	bf08      	it	eq
  404ec4:	694b      	ldreq	r3, [r1, #20]
  404ec6:	600f      	str	r7, [r1, #0]
  404ec8:	bf18      	it	ne
  404eca:	2300      	movne	r3, #0
  404ecc:	eba6 0807 	sub.w	r8, r6, r7
  404ed0:	608b      	str	r3, [r1, #8]
  404ed2:	f1b8 0f00 	cmp.w	r8, #0
  404ed6:	dd9a      	ble.n	404e0e <__sflush_r+0x1a>
  404ed8:	4643      	mov	r3, r8
  404eda:	463a      	mov	r2, r7
  404edc:	6a21      	ldr	r1, [r4, #32]
  404ede:	6aa6      	ldr	r6, [r4, #40]	; 0x28
  404ee0:	4628      	mov	r0, r5
  404ee2:	47b0      	blx	r6
  404ee4:	2800      	cmp	r0, #0
  404ee6:	dc07      	bgt.n	404ef8 <__sflush_r+0x104>
  404ee8:	89a3      	ldrh	r3, [r4, #12]
  404eea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404eee:	81a3      	strh	r3, [r4, #12]
  404ef0:	f04f 30ff 	mov.w	r0, #4294967295
  404ef4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404ef8:	4407      	add	r7, r0
  404efa:	eba8 0800 	sub.w	r8, r8, r0
  404efe:	e7e8      	b.n	404ed2 <__sflush_r+0xde>
  404f00:	20400001 	.word	0x20400001

00404f04 <_fflush_r>:
  404f04:	b538      	push	{r3, r4, r5, lr}
  404f06:	690b      	ldr	r3, [r1, #16]
  404f08:	4605      	mov	r5, r0
  404f0a:	460c      	mov	r4, r1
  404f0c:	b1db      	cbz	r3, 404f46 <_fflush_r+0x42>
  404f0e:	b118      	cbz	r0, 404f18 <_fflush_r+0x14>
  404f10:	6983      	ldr	r3, [r0, #24]
  404f12:	b90b      	cbnz	r3, 404f18 <_fflush_r+0x14>
  404f14:	f000 f860 	bl	404fd8 <__sinit>
  404f18:	4b0c      	ldr	r3, [pc, #48]	; (404f4c <_fflush_r+0x48>)
  404f1a:	429c      	cmp	r4, r3
  404f1c:	d109      	bne.n	404f32 <_fflush_r+0x2e>
  404f1e:	686c      	ldr	r4, [r5, #4]
  404f20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  404f24:	b17b      	cbz	r3, 404f46 <_fflush_r+0x42>
  404f26:	4621      	mov	r1, r4
  404f28:	4628      	mov	r0, r5
  404f2a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  404f2e:	f7ff bf61 	b.w	404df4 <__sflush_r>
  404f32:	4b07      	ldr	r3, [pc, #28]	; (404f50 <_fflush_r+0x4c>)
  404f34:	429c      	cmp	r4, r3
  404f36:	d101      	bne.n	404f3c <_fflush_r+0x38>
  404f38:	68ac      	ldr	r4, [r5, #8]
  404f3a:	e7f1      	b.n	404f20 <_fflush_r+0x1c>
  404f3c:	4b05      	ldr	r3, [pc, #20]	; (404f54 <_fflush_r+0x50>)
  404f3e:	429c      	cmp	r4, r3
  404f40:	bf08      	it	eq
  404f42:	68ec      	ldreq	r4, [r5, #12]
  404f44:	e7ec      	b.n	404f20 <_fflush_r+0x1c>
  404f46:	2000      	movs	r0, #0
  404f48:	bd38      	pop	{r3, r4, r5, pc}
  404f4a:	bf00      	nop
  404f4c:	00406560 	.word	0x00406560
  404f50:	00406580 	.word	0x00406580
  404f54:	00406540 	.word	0x00406540

00404f58 <_cleanup_r>:
  404f58:	4901      	ldr	r1, [pc, #4]	; (404f60 <_cleanup_r+0x8>)
  404f5a:	f000 b8a9 	b.w	4050b0 <_fwalk_reent>
  404f5e:	bf00      	nop
  404f60:	00404f05 	.word	0x00404f05

00404f64 <std.isra.0>:
  404f64:	2300      	movs	r3, #0
  404f66:	b510      	push	{r4, lr}
  404f68:	4604      	mov	r4, r0
  404f6a:	6003      	str	r3, [r0, #0]
  404f6c:	6043      	str	r3, [r0, #4]
  404f6e:	6083      	str	r3, [r0, #8]
  404f70:	8181      	strh	r1, [r0, #12]
  404f72:	6643      	str	r3, [r0, #100]	; 0x64
  404f74:	81c2      	strh	r2, [r0, #14]
  404f76:	6103      	str	r3, [r0, #16]
  404f78:	6143      	str	r3, [r0, #20]
  404f7a:	6183      	str	r3, [r0, #24]
  404f7c:	4619      	mov	r1, r3
  404f7e:	2208      	movs	r2, #8
  404f80:	305c      	adds	r0, #92	; 0x5c
  404f82:	f7fe fb9c 	bl	4036be <memset>
  404f86:	4b05      	ldr	r3, [pc, #20]	; (404f9c <std.isra.0+0x38>)
  404f88:	6263      	str	r3, [r4, #36]	; 0x24
  404f8a:	4b05      	ldr	r3, [pc, #20]	; (404fa0 <std.isra.0+0x3c>)
  404f8c:	62a3      	str	r3, [r4, #40]	; 0x28
  404f8e:	4b05      	ldr	r3, [pc, #20]	; (404fa4 <std.isra.0+0x40>)
  404f90:	62e3      	str	r3, [r4, #44]	; 0x2c
  404f92:	4b05      	ldr	r3, [pc, #20]	; (404fa8 <std.isra.0+0x44>)
  404f94:	6224      	str	r4, [r4, #32]
  404f96:	6323      	str	r3, [r4, #48]	; 0x30
  404f98:	bd10      	pop	{r4, pc}
  404f9a:	bf00      	nop
  404f9c:	00405c31 	.word	0x00405c31
  404fa0:	00405c53 	.word	0x00405c53
  404fa4:	00405c8b 	.word	0x00405c8b
  404fa8:	00405caf 	.word	0x00405caf

00404fac <__sfmoreglue>:
  404fac:	b570      	push	{r4, r5, r6, lr}
  404fae:	1e4a      	subs	r2, r1, #1
  404fb0:	2568      	movs	r5, #104	; 0x68
  404fb2:	4355      	muls	r5, r2
  404fb4:	460e      	mov	r6, r1
  404fb6:	f105 0174 	add.w	r1, r5, #116	; 0x74
  404fba:	f000 fc8d 	bl	4058d8 <_malloc_r>
  404fbe:	4604      	mov	r4, r0
  404fc0:	b140      	cbz	r0, 404fd4 <__sfmoreglue+0x28>
  404fc2:	2100      	movs	r1, #0
  404fc4:	e880 0042 	stmia.w	r0, {r1, r6}
  404fc8:	300c      	adds	r0, #12
  404fca:	60a0      	str	r0, [r4, #8]
  404fcc:	f105 0268 	add.w	r2, r5, #104	; 0x68
  404fd0:	f7fe fb75 	bl	4036be <memset>
  404fd4:	4620      	mov	r0, r4
  404fd6:	bd70      	pop	{r4, r5, r6, pc}

00404fd8 <__sinit>:
  404fd8:	6983      	ldr	r3, [r0, #24]
  404fda:	b510      	push	{r4, lr}
  404fdc:	4604      	mov	r4, r0
  404fde:	bb33      	cbnz	r3, 40502e <__sinit+0x56>
  404fe0:	6483      	str	r3, [r0, #72]	; 0x48
  404fe2:	64c3      	str	r3, [r0, #76]	; 0x4c
  404fe4:	6503      	str	r3, [r0, #80]	; 0x50
  404fe6:	4b12      	ldr	r3, [pc, #72]	; (405030 <__sinit+0x58>)
  404fe8:	4a12      	ldr	r2, [pc, #72]	; (405034 <__sinit+0x5c>)
  404fea:	681b      	ldr	r3, [r3, #0]
  404fec:	6282      	str	r2, [r0, #40]	; 0x28
  404fee:	4298      	cmp	r0, r3
  404ff0:	bf04      	itt	eq
  404ff2:	2301      	moveq	r3, #1
  404ff4:	6183      	streq	r3, [r0, #24]
  404ff6:	f000 f81f 	bl	405038 <__sfp>
  404ffa:	6060      	str	r0, [r4, #4]
  404ffc:	4620      	mov	r0, r4
  404ffe:	f000 f81b 	bl	405038 <__sfp>
  405002:	60a0      	str	r0, [r4, #8]
  405004:	4620      	mov	r0, r4
  405006:	f000 f817 	bl	405038 <__sfp>
  40500a:	2200      	movs	r2, #0
  40500c:	60e0      	str	r0, [r4, #12]
  40500e:	2104      	movs	r1, #4
  405010:	6860      	ldr	r0, [r4, #4]
  405012:	f7ff ffa7 	bl	404f64 <std.isra.0>
  405016:	2201      	movs	r2, #1
  405018:	2109      	movs	r1, #9
  40501a:	68a0      	ldr	r0, [r4, #8]
  40501c:	f7ff ffa2 	bl	404f64 <std.isra.0>
  405020:	2202      	movs	r2, #2
  405022:	2112      	movs	r1, #18
  405024:	68e0      	ldr	r0, [r4, #12]
  405026:	f7ff ff9d 	bl	404f64 <std.isra.0>
  40502a:	2301      	movs	r3, #1
  40502c:	61a3      	str	r3, [r4, #24]
  40502e:	bd10      	pop	{r4, pc}
  405030:	004064f8 	.word	0x004064f8
  405034:	00404f59 	.word	0x00404f59

00405038 <__sfp>:
  405038:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40503a:	4b1c      	ldr	r3, [pc, #112]	; (4050ac <__sfp+0x74>)
  40503c:	681e      	ldr	r6, [r3, #0]
  40503e:	69b3      	ldr	r3, [r6, #24]
  405040:	4607      	mov	r7, r0
  405042:	b913      	cbnz	r3, 40504a <__sfp+0x12>
  405044:	4630      	mov	r0, r6
  405046:	f7ff ffc7 	bl	404fd8 <__sinit>
  40504a:	3648      	adds	r6, #72	; 0x48
  40504c:	68b4      	ldr	r4, [r6, #8]
  40504e:	6873      	ldr	r3, [r6, #4]
  405050:	3b01      	subs	r3, #1
  405052:	d503      	bpl.n	40505c <__sfp+0x24>
  405054:	6833      	ldr	r3, [r6, #0]
  405056:	b133      	cbz	r3, 405066 <__sfp+0x2e>
  405058:	6836      	ldr	r6, [r6, #0]
  40505a:	e7f7      	b.n	40504c <__sfp+0x14>
  40505c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
  405060:	b16d      	cbz	r5, 40507e <__sfp+0x46>
  405062:	3468      	adds	r4, #104	; 0x68
  405064:	e7f4      	b.n	405050 <__sfp+0x18>
  405066:	2104      	movs	r1, #4
  405068:	4638      	mov	r0, r7
  40506a:	f7ff ff9f 	bl	404fac <__sfmoreglue>
  40506e:	6030      	str	r0, [r6, #0]
  405070:	2800      	cmp	r0, #0
  405072:	d1f1      	bne.n	405058 <__sfp+0x20>
  405074:	230c      	movs	r3, #12
  405076:	603b      	str	r3, [r7, #0]
  405078:	4604      	mov	r4, r0
  40507a:	4620      	mov	r0, r4
  40507c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40507e:	f64f 73ff 	movw	r3, #65535	; 0xffff
  405082:	81e3      	strh	r3, [r4, #14]
  405084:	2301      	movs	r3, #1
  405086:	81a3      	strh	r3, [r4, #12]
  405088:	6665      	str	r5, [r4, #100]	; 0x64
  40508a:	6025      	str	r5, [r4, #0]
  40508c:	60a5      	str	r5, [r4, #8]
  40508e:	6065      	str	r5, [r4, #4]
  405090:	6125      	str	r5, [r4, #16]
  405092:	6165      	str	r5, [r4, #20]
  405094:	61a5      	str	r5, [r4, #24]
  405096:	2208      	movs	r2, #8
  405098:	4629      	mov	r1, r5
  40509a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
  40509e:	f7fe fb0e 	bl	4036be <memset>
  4050a2:	6365      	str	r5, [r4, #52]	; 0x34
  4050a4:	63a5      	str	r5, [r4, #56]	; 0x38
  4050a6:	64a5      	str	r5, [r4, #72]	; 0x48
  4050a8:	64e5      	str	r5, [r4, #76]	; 0x4c
  4050aa:	e7e6      	b.n	40507a <__sfp+0x42>
  4050ac:	004064f8 	.word	0x004064f8

004050b0 <_fwalk_reent>:
  4050b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4050b4:	4680      	mov	r8, r0
  4050b6:	4689      	mov	r9, r1
  4050b8:	f100 0448 	add.w	r4, r0, #72	; 0x48
  4050bc:	2600      	movs	r6, #0
  4050be:	b914      	cbnz	r4, 4050c6 <_fwalk_reent+0x16>
  4050c0:	4630      	mov	r0, r6
  4050c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4050c6:	68a5      	ldr	r5, [r4, #8]
  4050c8:	6867      	ldr	r7, [r4, #4]
  4050ca:	3f01      	subs	r7, #1
  4050cc:	d501      	bpl.n	4050d2 <_fwalk_reent+0x22>
  4050ce:	6824      	ldr	r4, [r4, #0]
  4050d0:	e7f5      	b.n	4050be <_fwalk_reent+0xe>
  4050d2:	89ab      	ldrh	r3, [r5, #12]
  4050d4:	2b01      	cmp	r3, #1
  4050d6:	d907      	bls.n	4050e8 <_fwalk_reent+0x38>
  4050d8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
  4050dc:	3301      	adds	r3, #1
  4050de:	d003      	beq.n	4050e8 <_fwalk_reent+0x38>
  4050e0:	4629      	mov	r1, r5
  4050e2:	4640      	mov	r0, r8
  4050e4:	47c8      	blx	r9
  4050e6:	4306      	orrs	r6, r0
  4050e8:	3568      	adds	r5, #104	; 0x68
  4050ea:	e7ee      	b.n	4050ca <_fwalk_reent+0x1a>

004050ec <_localeconv_r>:
  4050ec:	4b04      	ldr	r3, [pc, #16]	; (405100 <_localeconv_r+0x14>)
  4050ee:	681b      	ldr	r3, [r3, #0]
  4050f0:	6a18      	ldr	r0, [r3, #32]
  4050f2:	4b04      	ldr	r3, [pc, #16]	; (405104 <_localeconv_r+0x18>)
  4050f4:	2800      	cmp	r0, #0
  4050f6:	bf08      	it	eq
  4050f8:	4618      	moveq	r0, r3
  4050fa:	30f0      	adds	r0, #240	; 0xf0
  4050fc:	4770      	bx	lr
  4050fe:	bf00      	nop
  405100:	20400000 	.word	0x20400000
  405104:	20400064 	.word	0x20400064

00405108 <__swhatbuf_r>:
  405108:	b570      	push	{r4, r5, r6, lr}
  40510a:	460e      	mov	r6, r1
  40510c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405110:	2900      	cmp	r1, #0
  405112:	b090      	sub	sp, #64	; 0x40
  405114:	4614      	mov	r4, r2
  405116:	461d      	mov	r5, r3
  405118:	da07      	bge.n	40512a <__swhatbuf_r+0x22>
  40511a:	2300      	movs	r3, #0
  40511c:	602b      	str	r3, [r5, #0]
  40511e:	89b3      	ldrh	r3, [r6, #12]
  405120:	061a      	lsls	r2, r3, #24
  405122:	d410      	bmi.n	405146 <__swhatbuf_r+0x3e>
  405124:	f44f 6380 	mov.w	r3, #1024	; 0x400
  405128:	e00e      	b.n	405148 <__swhatbuf_r+0x40>
  40512a:	aa01      	add	r2, sp, #4
  40512c:	f000 fea6 	bl	405e7c <_fstat_r>
  405130:	2800      	cmp	r0, #0
  405132:	dbf2      	blt.n	40511a <__swhatbuf_r+0x12>
  405134:	9a02      	ldr	r2, [sp, #8]
  405136:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  40513a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
  40513e:	425a      	negs	r2, r3
  405140:	415a      	adcs	r2, r3
  405142:	602a      	str	r2, [r5, #0]
  405144:	e7ee      	b.n	405124 <__swhatbuf_r+0x1c>
  405146:	2340      	movs	r3, #64	; 0x40
  405148:	2000      	movs	r0, #0
  40514a:	6023      	str	r3, [r4, #0]
  40514c:	b010      	add	sp, #64	; 0x40
  40514e:	bd70      	pop	{r4, r5, r6, pc}

00405150 <__smakebuf_r>:
  405150:	898b      	ldrh	r3, [r1, #12]
  405152:	b573      	push	{r0, r1, r4, r5, r6, lr}
  405154:	079d      	lsls	r5, r3, #30
  405156:	4606      	mov	r6, r0
  405158:	460c      	mov	r4, r1
  40515a:	d507      	bpl.n	40516c <__smakebuf_r+0x1c>
  40515c:	f104 0347 	add.w	r3, r4, #71	; 0x47
  405160:	6023      	str	r3, [r4, #0]
  405162:	6123      	str	r3, [r4, #16]
  405164:	2301      	movs	r3, #1
  405166:	6163      	str	r3, [r4, #20]
  405168:	b002      	add	sp, #8
  40516a:	bd70      	pop	{r4, r5, r6, pc}
  40516c:	ab01      	add	r3, sp, #4
  40516e:	466a      	mov	r2, sp
  405170:	f7ff ffca 	bl	405108 <__swhatbuf_r>
  405174:	9900      	ldr	r1, [sp, #0]
  405176:	4605      	mov	r5, r0
  405178:	4630      	mov	r0, r6
  40517a:	f000 fbad 	bl	4058d8 <_malloc_r>
  40517e:	b948      	cbnz	r0, 405194 <__smakebuf_r+0x44>
  405180:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405184:	059a      	lsls	r2, r3, #22
  405186:	d4ef      	bmi.n	405168 <__smakebuf_r+0x18>
  405188:	f023 0303 	bic.w	r3, r3, #3
  40518c:	f043 0302 	orr.w	r3, r3, #2
  405190:	81a3      	strh	r3, [r4, #12]
  405192:	e7e3      	b.n	40515c <__smakebuf_r+0xc>
  405194:	4b0d      	ldr	r3, [pc, #52]	; (4051cc <__smakebuf_r+0x7c>)
  405196:	62b3      	str	r3, [r6, #40]	; 0x28
  405198:	89a3      	ldrh	r3, [r4, #12]
  40519a:	6020      	str	r0, [r4, #0]
  40519c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4051a0:	81a3      	strh	r3, [r4, #12]
  4051a2:	9b00      	ldr	r3, [sp, #0]
  4051a4:	6163      	str	r3, [r4, #20]
  4051a6:	9b01      	ldr	r3, [sp, #4]
  4051a8:	6120      	str	r0, [r4, #16]
  4051aa:	b15b      	cbz	r3, 4051c4 <__smakebuf_r+0x74>
  4051ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  4051b0:	4630      	mov	r0, r6
  4051b2:	f000 fe75 	bl	405ea0 <_isatty_r>
  4051b6:	b128      	cbz	r0, 4051c4 <__smakebuf_r+0x74>
  4051b8:	89a3      	ldrh	r3, [r4, #12]
  4051ba:	f023 0303 	bic.w	r3, r3, #3
  4051be:	f043 0301 	orr.w	r3, r3, #1
  4051c2:	81a3      	strh	r3, [r4, #12]
  4051c4:	89a3      	ldrh	r3, [r4, #12]
  4051c6:	431d      	orrs	r5, r3
  4051c8:	81a5      	strh	r5, [r4, #12]
  4051ca:	e7cd      	b.n	405168 <__smakebuf_r+0x18>
  4051cc:	00404f59 	.word	0x00404f59

004051d0 <malloc>:
  4051d0:	4b02      	ldr	r3, [pc, #8]	; (4051dc <malloc+0xc>)
  4051d2:	4601      	mov	r1, r0
  4051d4:	6818      	ldr	r0, [r3, #0]
  4051d6:	f000 bb7f 	b.w	4058d8 <_malloc_r>
  4051da:	bf00      	nop
  4051dc:	20400000 	.word	0x20400000

004051e0 <memchr>:
  4051e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4051e4:	2a10      	cmp	r2, #16
  4051e6:	db2b      	blt.n	405240 <memchr+0x60>
  4051e8:	f010 0f07 	tst.w	r0, #7
  4051ec:	d008      	beq.n	405200 <memchr+0x20>
  4051ee:	f810 3b01 	ldrb.w	r3, [r0], #1
  4051f2:	3a01      	subs	r2, #1
  4051f4:	428b      	cmp	r3, r1
  4051f6:	d02d      	beq.n	405254 <memchr+0x74>
  4051f8:	f010 0f07 	tst.w	r0, #7
  4051fc:	b342      	cbz	r2, 405250 <memchr+0x70>
  4051fe:	d1f6      	bne.n	4051ee <memchr+0xe>
  405200:	b4f0      	push	{r4, r5, r6, r7}
  405202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  405206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40520a:	f022 0407 	bic.w	r4, r2, #7
  40520e:	f07f 0700 	mvns.w	r7, #0
  405212:	2300      	movs	r3, #0
  405214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  405218:	3c08      	subs	r4, #8
  40521a:	ea85 0501 	eor.w	r5, r5, r1
  40521e:	ea86 0601 	eor.w	r6, r6, r1
  405222:	fa85 f547 	uadd8	r5, r5, r7
  405226:	faa3 f587 	sel	r5, r3, r7
  40522a:	fa86 f647 	uadd8	r6, r6, r7
  40522e:	faa5 f687 	sel	r6, r5, r7
  405232:	b98e      	cbnz	r6, 405258 <memchr+0x78>
  405234:	d1ee      	bne.n	405214 <memchr+0x34>
  405236:	bcf0      	pop	{r4, r5, r6, r7}
  405238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40523c:	f002 0207 	and.w	r2, r2, #7
  405240:	b132      	cbz	r2, 405250 <memchr+0x70>
  405242:	f810 3b01 	ldrb.w	r3, [r0], #1
  405246:	3a01      	subs	r2, #1
  405248:	ea83 0301 	eor.w	r3, r3, r1
  40524c:	b113      	cbz	r3, 405254 <memchr+0x74>
  40524e:	d1f8      	bne.n	405242 <memchr+0x62>
  405250:	2000      	movs	r0, #0
  405252:	4770      	bx	lr
  405254:	3801      	subs	r0, #1
  405256:	4770      	bx	lr
  405258:	2d00      	cmp	r5, #0
  40525a:	bf06      	itte	eq
  40525c:	4635      	moveq	r5, r6
  40525e:	3803      	subeq	r0, #3
  405260:	3807      	subne	r0, #7
  405262:	f015 0f01 	tst.w	r5, #1
  405266:	d107      	bne.n	405278 <memchr+0x98>
  405268:	3001      	adds	r0, #1
  40526a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40526e:	bf02      	ittt	eq
  405270:	3001      	addeq	r0, #1
  405272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  405276:	3001      	addeq	r0, #1
  405278:	bcf0      	pop	{r4, r5, r6, r7}
  40527a:	3801      	subs	r0, #1
  40527c:	4770      	bx	lr
  40527e:	bf00      	nop

00405280 <_Balloc>:
  405280:	b570      	push	{r4, r5, r6, lr}
  405282:	6a45      	ldr	r5, [r0, #36]	; 0x24
  405284:	4604      	mov	r4, r0
  405286:	460e      	mov	r6, r1
  405288:	b93d      	cbnz	r5, 40529a <_Balloc+0x1a>
  40528a:	2010      	movs	r0, #16
  40528c:	f7ff ffa0 	bl	4051d0 <malloc>
  405290:	6260      	str	r0, [r4, #36]	; 0x24
  405292:	6045      	str	r5, [r0, #4]
  405294:	6085      	str	r5, [r0, #8]
  405296:	6005      	str	r5, [r0, #0]
  405298:	60c5      	str	r5, [r0, #12]
  40529a:	6a65      	ldr	r5, [r4, #36]	; 0x24
  40529c:	68eb      	ldr	r3, [r5, #12]
  40529e:	b183      	cbz	r3, 4052c2 <_Balloc+0x42>
  4052a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
  4052a2:	68db      	ldr	r3, [r3, #12]
  4052a4:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
  4052a8:	b9b8      	cbnz	r0, 4052da <_Balloc+0x5a>
  4052aa:	2101      	movs	r1, #1
  4052ac:	fa01 f506 	lsl.w	r5, r1, r6
  4052b0:	1d6a      	adds	r2, r5, #5
  4052b2:	0092      	lsls	r2, r2, #2
  4052b4:	4620      	mov	r0, r4
  4052b6:	f000 fab3 	bl	405820 <_calloc_r>
  4052ba:	b160      	cbz	r0, 4052d6 <_Balloc+0x56>
  4052bc:	6046      	str	r6, [r0, #4]
  4052be:	6085      	str	r5, [r0, #8]
  4052c0:	e00e      	b.n	4052e0 <_Balloc+0x60>
  4052c2:	2221      	movs	r2, #33	; 0x21
  4052c4:	2104      	movs	r1, #4
  4052c6:	4620      	mov	r0, r4
  4052c8:	f000 faaa 	bl	405820 <_calloc_r>
  4052cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
  4052ce:	60e8      	str	r0, [r5, #12]
  4052d0:	68db      	ldr	r3, [r3, #12]
  4052d2:	2b00      	cmp	r3, #0
  4052d4:	d1e4      	bne.n	4052a0 <_Balloc+0x20>
  4052d6:	2000      	movs	r0, #0
  4052d8:	bd70      	pop	{r4, r5, r6, pc}
  4052da:	6802      	ldr	r2, [r0, #0]
  4052dc:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
  4052e0:	2300      	movs	r3, #0
  4052e2:	6103      	str	r3, [r0, #16]
  4052e4:	60c3      	str	r3, [r0, #12]
  4052e6:	bd70      	pop	{r4, r5, r6, pc}

004052e8 <_Bfree>:
  4052e8:	b570      	push	{r4, r5, r6, lr}
  4052ea:	6a44      	ldr	r4, [r0, #36]	; 0x24
  4052ec:	4606      	mov	r6, r0
  4052ee:	460d      	mov	r5, r1
  4052f0:	b93c      	cbnz	r4, 405302 <_Bfree+0x1a>
  4052f2:	2010      	movs	r0, #16
  4052f4:	f7ff ff6c 	bl	4051d0 <malloc>
  4052f8:	6270      	str	r0, [r6, #36]	; 0x24
  4052fa:	6044      	str	r4, [r0, #4]
  4052fc:	6084      	str	r4, [r0, #8]
  4052fe:	6004      	str	r4, [r0, #0]
  405300:	60c4      	str	r4, [r0, #12]
  405302:	b13d      	cbz	r5, 405314 <_Bfree+0x2c>
  405304:	6a73      	ldr	r3, [r6, #36]	; 0x24
  405306:	686a      	ldr	r2, [r5, #4]
  405308:	68db      	ldr	r3, [r3, #12]
  40530a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40530e:	6029      	str	r1, [r5, #0]
  405310:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  405314:	bd70      	pop	{r4, r5, r6, pc}

00405316 <__multadd>:
  405316:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40531a:	690d      	ldr	r5, [r1, #16]
  40531c:	461f      	mov	r7, r3
  40531e:	4606      	mov	r6, r0
  405320:	460c      	mov	r4, r1
  405322:	f101 0e14 	add.w	lr, r1, #20
  405326:	2300      	movs	r3, #0
  405328:	f8de 0000 	ldr.w	r0, [lr]
  40532c:	b281      	uxth	r1, r0
  40532e:	fb02 7101 	mla	r1, r2, r1, r7
  405332:	0c0f      	lsrs	r7, r1, #16
  405334:	0c00      	lsrs	r0, r0, #16
  405336:	fb02 7000 	mla	r0, r2, r0, r7
  40533a:	b289      	uxth	r1, r1
  40533c:	3301      	adds	r3, #1
  40533e:	eb01 4100 	add.w	r1, r1, r0, lsl #16
  405342:	429d      	cmp	r5, r3
  405344:	ea4f 4710 	mov.w	r7, r0, lsr #16
  405348:	f84e 1b04 	str.w	r1, [lr], #4
  40534c:	dcec      	bgt.n	405328 <__multadd+0x12>
  40534e:	b1d7      	cbz	r7, 405386 <__multadd+0x70>
  405350:	68a3      	ldr	r3, [r4, #8]
  405352:	429d      	cmp	r5, r3
  405354:	db12      	blt.n	40537c <__multadd+0x66>
  405356:	6861      	ldr	r1, [r4, #4]
  405358:	4630      	mov	r0, r6
  40535a:	3101      	adds	r1, #1
  40535c:	f7ff ff90 	bl	405280 <_Balloc>
  405360:	6922      	ldr	r2, [r4, #16]
  405362:	3202      	adds	r2, #2
  405364:	f104 010c 	add.w	r1, r4, #12
  405368:	4680      	mov	r8, r0
  40536a:	0092      	lsls	r2, r2, #2
  40536c:	300c      	adds	r0, #12
  40536e:	f7fe f99b 	bl	4036a8 <memcpy>
  405372:	4621      	mov	r1, r4
  405374:	4630      	mov	r0, r6
  405376:	f7ff ffb7 	bl	4052e8 <_Bfree>
  40537a:	4644      	mov	r4, r8
  40537c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
  405380:	3501      	adds	r5, #1
  405382:	615f      	str	r7, [r3, #20]
  405384:	6125      	str	r5, [r4, #16]
  405386:	4620      	mov	r0, r4
  405388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040538c <__hi0bits>:
  40538c:	0c02      	lsrs	r2, r0, #16
  40538e:	0412      	lsls	r2, r2, #16
  405390:	4603      	mov	r3, r0
  405392:	b9b2      	cbnz	r2, 4053c2 <__hi0bits+0x36>
  405394:	0403      	lsls	r3, r0, #16
  405396:	2010      	movs	r0, #16
  405398:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40539c:	bf04      	itt	eq
  40539e:	021b      	lsleq	r3, r3, #8
  4053a0:	3008      	addeq	r0, #8
  4053a2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  4053a6:	bf04      	itt	eq
  4053a8:	011b      	lsleq	r3, r3, #4
  4053aa:	3004      	addeq	r0, #4
  4053ac:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  4053b0:	bf04      	itt	eq
  4053b2:	009b      	lsleq	r3, r3, #2
  4053b4:	3002      	addeq	r0, #2
  4053b6:	2b00      	cmp	r3, #0
  4053b8:	db06      	blt.n	4053c8 <__hi0bits+0x3c>
  4053ba:	005b      	lsls	r3, r3, #1
  4053bc:	d503      	bpl.n	4053c6 <__hi0bits+0x3a>
  4053be:	3001      	adds	r0, #1
  4053c0:	4770      	bx	lr
  4053c2:	2000      	movs	r0, #0
  4053c4:	e7e8      	b.n	405398 <__hi0bits+0xc>
  4053c6:	2020      	movs	r0, #32
  4053c8:	4770      	bx	lr

004053ca <__lo0bits>:
  4053ca:	6803      	ldr	r3, [r0, #0]
  4053cc:	f013 0207 	ands.w	r2, r3, #7
  4053d0:	4601      	mov	r1, r0
  4053d2:	d00b      	beq.n	4053ec <__lo0bits+0x22>
  4053d4:	07da      	lsls	r2, r3, #31
  4053d6:	d423      	bmi.n	405420 <__lo0bits+0x56>
  4053d8:	0798      	lsls	r0, r3, #30
  4053da:	bf49      	itett	mi
  4053dc:	085b      	lsrmi	r3, r3, #1
  4053de:	089b      	lsrpl	r3, r3, #2
  4053e0:	2001      	movmi	r0, #1
  4053e2:	600b      	strmi	r3, [r1, #0]
  4053e4:	bf5c      	itt	pl
  4053e6:	600b      	strpl	r3, [r1, #0]
  4053e8:	2002      	movpl	r0, #2
  4053ea:	4770      	bx	lr
  4053ec:	b298      	uxth	r0, r3
  4053ee:	b9a8      	cbnz	r0, 40541c <__lo0bits+0x52>
  4053f0:	0c1b      	lsrs	r3, r3, #16
  4053f2:	2010      	movs	r0, #16
  4053f4:	f013 0fff 	tst.w	r3, #255	; 0xff
  4053f8:	bf04      	itt	eq
  4053fa:	0a1b      	lsreq	r3, r3, #8
  4053fc:	3008      	addeq	r0, #8
  4053fe:	071a      	lsls	r2, r3, #28
  405400:	bf04      	itt	eq
  405402:	091b      	lsreq	r3, r3, #4
  405404:	3004      	addeq	r0, #4
  405406:	079a      	lsls	r2, r3, #30
  405408:	bf04      	itt	eq
  40540a:	089b      	lsreq	r3, r3, #2
  40540c:	3002      	addeq	r0, #2
  40540e:	07da      	lsls	r2, r3, #31
  405410:	d402      	bmi.n	405418 <__lo0bits+0x4e>
  405412:	085b      	lsrs	r3, r3, #1
  405414:	d006      	beq.n	405424 <__lo0bits+0x5a>
  405416:	3001      	adds	r0, #1
  405418:	600b      	str	r3, [r1, #0]
  40541a:	4770      	bx	lr
  40541c:	4610      	mov	r0, r2
  40541e:	e7e9      	b.n	4053f4 <__lo0bits+0x2a>
  405420:	2000      	movs	r0, #0
  405422:	4770      	bx	lr
  405424:	2020      	movs	r0, #32
  405426:	4770      	bx	lr

00405428 <__i2b>:
  405428:	b510      	push	{r4, lr}
  40542a:	460c      	mov	r4, r1
  40542c:	2101      	movs	r1, #1
  40542e:	f7ff ff27 	bl	405280 <_Balloc>
  405432:	2201      	movs	r2, #1
  405434:	6144      	str	r4, [r0, #20]
  405436:	6102      	str	r2, [r0, #16]
  405438:	bd10      	pop	{r4, pc}

0040543a <__multiply>:
  40543a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40543e:	4614      	mov	r4, r2
  405440:	690a      	ldr	r2, [r1, #16]
  405442:	6923      	ldr	r3, [r4, #16]
  405444:	429a      	cmp	r2, r3
  405446:	bfb8      	it	lt
  405448:	460b      	movlt	r3, r1
  40544a:	4689      	mov	r9, r1
  40544c:	bfbc      	itt	lt
  40544e:	46a1      	movlt	r9, r4
  405450:	461c      	movlt	r4, r3
  405452:	f8d9 7010 	ldr.w	r7, [r9, #16]
  405456:	f8d4 a010 	ldr.w	sl, [r4, #16]
  40545a:	f8d9 3008 	ldr.w	r3, [r9, #8]
  40545e:	f8d9 1004 	ldr.w	r1, [r9, #4]
  405462:	eb07 060a 	add.w	r6, r7, sl
  405466:	429e      	cmp	r6, r3
  405468:	bfc8      	it	gt
  40546a:	3101      	addgt	r1, #1
  40546c:	f7ff ff08 	bl	405280 <_Balloc>
  405470:	f100 0514 	add.w	r5, r0, #20
  405474:	eb05 0886 	add.w	r8, r5, r6, lsl #2
  405478:	462b      	mov	r3, r5
  40547a:	2200      	movs	r2, #0
  40547c:	4543      	cmp	r3, r8
  40547e:	d316      	bcc.n	4054ae <__multiply+0x74>
  405480:	f104 0214 	add.w	r2, r4, #20
  405484:	f109 0114 	add.w	r1, r9, #20
  405488:	eb02 038a 	add.w	r3, r2, sl, lsl #2
  40548c:	eb01 0787 	add.w	r7, r1, r7, lsl #2
  405490:	9301      	str	r3, [sp, #4]
  405492:	9c01      	ldr	r4, [sp, #4]
  405494:	4294      	cmp	r4, r2
  405496:	4613      	mov	r3, r2
  405498:	d80c      	bhi.n	4054b4 <__multiply+0x7a>
  40549a:	2e00      	cmp	r6, #0
  40549c:	dd03      	ble.n	4054a6 <__multiply+0x6c>
  40549e:	f858 3d04 	ldr.w	r3, [r8, #-4]!
  4054a2:	2b00      	cmp	r3, #0
  4054a4:	d054      	beq.n	405550 <__multiply+0x116>
  4054a6:	6106      	str	r6, [r0, #16]
  4054a8:	b003      	add	sp, #12
  4054aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4054ae:	f843 2b04 	str.w	r2, [r3], #4
  4054b2:	e7e3      	b.n	40547c <__multiply+0x42>
  4054b4:	f8b3 a000 	ldrh.w	sl, [r3]
  4054b8:	3204      	adds	r2, #4
  4054ba:	f1ba 0f00 	cmp.w	sl, #0
  4054be:	d020      	beq.n	405502 <__multiply+0xc8>
  4054c0:	46ae      	mov	lr, r5
  4054c2:	4689      	mov	r9, r1
  4054c4:	f04f 0c00 	mov.w	ip, #0
  4054c8:	f859 4b04 	ldr.w	r4, [r9], #4
  4054cc:	f8be b000 	ldrh.w	fp, [lr]
  4054d0:	b2a3      	uxth	r3, r4
  4054d2:	fb0a b303 	mla	r3, sl, r3, fp
  4054d6:	ea4f 4b14 	mov.w	fp, r4, lsr #16
  4054da:	f8de 4000 	ldr.w	r4, [lr]
  4054de:	4463      	add	r3, ip
  4054e0:	ea4f 4c14 	mov.w	ip, r4, lsr #16
  4054e4:	fb0a c40b 	mla	r4, sl, fp, ip
  4054e8:	eb04 4413 	add.w	r4, r4, r3, lsr #16
  4054ec:	b29b      	uxth	r3, r3
  4054ee:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
  4054f2:	454f      	cmp	r7, r9
  4054f4:	ea4f 4c14 	mov.w	ip, r4, lsr #16
  4054f8:	f84e 3b04 	str.w	r3, [lr], #4
  4054fc:	d8e4      	bhi.n	4054c8 <__multiply+0x8e>
  4054fe:	f8ce c000 	str.w	ip, [lr]
  405502:	f832 9c02 	ldrh.w	r9, [r2, #-2]
  405506:	f1b9 0f00 	cmp.w	r9, #0
  40550a:	d01f      	beq.n	40554c <__multiply+0x112>
  40550c:	682b      	ldr	r3, [r5, #0]
  40550e:	46ae      	mov	lr, r5
  405510:	468c      	mov	ip, r1
  405512:	f04f 0a00 	mov.w	sl, #0
  405516:	f8bc 4000 	ldrh.w	r4, [ip]
  40551a:	f8be b002 	ldrh.w	fp, [lr, #2]
  40551e:	fb09 b404 	mla	r4, r9, r4, fp
  405522:	44a2      	add	sl, r4
  405524:	b29b      	uxth	r3, r3
  405526:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  40552a:	f84e 3b04 	str.w	r3, [lr], #4
  40552e:	f85c 3b04 	ldr.w	r3, [ip], #4
  405532:	f8be 4000 	ldrh.w	r4, [lr]
  405536:	0c1b      	lsrs	r3, r3, #16
  405538:	fb09 4303 	mla	r3, r9, r3, r4
  40553c:	eb03 431a 	add.w	r3, r3, sl, lsr #16
  405540:	4567      	cmp	r7, ip
  405542:	ea4f 4a13 	mov.w	sl, r3, lsr #16
  405546:	d8e6      	bhi.n	405516 <__multiply+0xdc>
  405548:	f8ce 3000 	str.w	r3, [lr]
  40554c:	3504      	adds	r5, #4
  40554e:	e7a0      	b.n	405492 <__multiply+0x58>
  405550:	3e01      	subs	r6, #1
  405552:	e7a2      	b.n	40549a <__multiply+0x60>

00405554 <__pow5mult>:
  405554:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  405558:	4615      	mov	r5, r2
  40555a:	f012 0203 	ands.w	r2, r2, #3
  40555e:	4606      	mov	r6, r0
  405560:	460f      	mov	r7, r1
  405562:	d007      	beq.n	405574 <__pow5mult+0x20>
  405564:	3a01      	subs	r2, #1
  405566:	4c21      	ldr	r4, [pc, #132]	; (4055ec <__pow5mult+0x98>)
  405568:	2300      	movs	r3, #0
  40556a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
  40556e:	f7ff fed2 	bl	405316 <__multadd>
  405572:	4607      	mov	r7, r0
  405574:	10ad      	asrs	r5, r5, #2
  405576:	d035      	beq.n	4055e4 <__pow5mult+0x90>
  405578:	6a74      	ldr	r4, [r6, #36]	; 0x24
  40557a:	b93c      	cbnz	r4, 40558c <__pow5mult+0x38>
  40557c:	2010      	movs	r0, #16
  40557e:	f7ff fe27 	bl	4051d0 <malloc>
  405582:	6270      	str	r0, [r6, #36]	; 0x24
  405584:	6044      	str	r4, [r0, #4]
  405586:	6084      	str	r4, [r0, #8]
  405588:	6004      	str	r4, [r0, #0]
  40558a:	60c4      	str	r4, [r0, #12]
  40558c:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
  405590:	f8d8 4008 	ldr.w	r4, [r8, #8]
  405594:	b94c      	cbnz	r4, 4055aa <__pow5mult+0x56>
  405596:	f240 2171 	movw	r1, #625	; 0x271
  40559a:	4630      	mov	r0, r6
  40559c:	f7ff ff44 	bl	405428 <__i2b>
  4055a0:	2300      	movs	r3, #0
  4055a2:	f8c8 0008 	str.w	r0, [r8, #8]
  4055a6:	4604      	mov	r4, r0
  4055a8:	6003      	str	r3, [r0, #0]
  4055aa:	f04f 0800 	mov.w	r8, #0
  4055ae:	07eb      	lsls	r3, r5, #31
  4055b0:	d50a      	bpl.n	4055c8 <__pow5mult+0x74>
  4055b2:	4639      	mov	r1, r7
  4055b4:	4622      	mov	r2, r4
  4055b6:	4630      	mov	r0, r6
  4055b8:	f7ff ff3f 	bl	40543a <__multiply>
  4055bc:	4639      	mov	r1, r7
  4055be:	4681      	mov	r9, r0
  4055c0:	4630      	mov	r0, r6
  4055c2:	f7ff fe91 	bl	4052e8 <_Bfree>
  4055c6:	464f      	mov	r7, r9
  4055c8:	106d      	asrs	r5, r5, #1
  4055ca:	d00b      	beq.n	4055e4 <__pow5mult+0x90>
  4055cc:	6820      	ldr	r0, [r4, #0]
  4055ce:	b938      	cbnz	r0, 4055e0 <__pow5mult+0x8c>
  4055d0:	4622      	mov	r2, r4
  4055d2:	4621      	mov	r1, r4
  4055d4:	4630      	mov	r0, r6
  4055d6:	f7ff ff30 	bl	40543a <__multiply>
  4055da:	6020      	str	r0, [r4, #0]
  4055dc:	f8c0 8000 	str.w	r8, [r0]
  4055e0:	4604      	mov	r4, r0
  4055e2:	e7e4      	b.n	4055ae <__pow5mult+0x5a>
  4055e4:	4638      	mov	r0, r7
  4055e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4055ea:	bf00      	nop
  4055ec:	00406690 	.word	0x00406690

004055f0 <__lshift>:
  4055f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4055f4:	460c      	mov	r4, r1
  4055f6:	ea4f 1a62 	mov.w	sl, r2, asr #5
  4055fa:	6923      	ldr	r3, [r4, #16]
  4055fc:	6849      	ldr	r1, [r1, #4]
  4055fe:	eb0a 0903 	add.w	r9, sl, r3
  405602:	68a3      	ldr	r3, [r4, #8]
  405604:	4607      	mov	r7, r0
  405606:	4616      	mov	r6, r2
  405608:	f109 0501 	add.w	r5, r9, #1
  40560c:	42ab      	cmp	r3, r5
  40560e:	db31      	blt.n	405674 <__lshift+0x84>
  405610:	4638      	mov	r0, r7
  405612:	f7ff fe35 	bl	405280 <_Balloc>
  405616:	2200      	movs	r2, #0
  405618:	4680      	mov	r8, r0
  40561a:	f100 0314 	add.w	r3, r0, #20
  40561e:	4611      	mov	r1, r2
  405620:	4552      	cmp	r2, sl
  405622:	db2a      	blt.n	40567a <__lshift+0x8a>
  405624:	6920      	ldr	r0, [r4, #16]
  405626:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
  40562a:	f104 0114 	add.w	r1, r4, #20
  40562e:	f016 021f 	ands.w	r2, r6, #31
  405632:	eb03 038a 	add.w	r3, r3, sl, lsl #2
  405636:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
  40563a:	d022      	beq.n	405682 <__lshift+0x92>
  40563c:	f1c2 0c20 	rsb	ip, r2, #32
  405640:	2000      	movs	r0, #0
  405642:	680e      	ldr	r6, [r1, #0]
  405644:	4096      	lsls	r6, r2
  405646:	4330      	orrs	r0, r6
  405648:	f843 0b04 	str.w	r0, [r3], #4
  40564c:	f851 0b04 	ldr.w	r0, [r1], #4
  405650:	458e      	cmp	lr, r1
  405652:	fa20 f00c 	lsr.w	r0, r0, ip
  405656:	d8f4      	bhi.n	405642 <__lshift+0x52>
  405658:	6018      	str	r0, [r3, #0]
  40565a:	b108      	cbz	r0, 405660 <__lshift+0x70>
  40565c:	f109 0502 	add.w	r5, r9, #2
  405660:	3d01      	subs	r5, #1
  405662:	4638      	mov	r0, r7
  405664:	f8c8 5010 	str.w	r5, [r8, #16]
  405668:	4621      	mov	r1, r4
  40566a:	f7ff fe3d 	bl	4052e8 <_Bfree>
  40566e:	4640      	mov	r0, r8
  405670:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405674:	3101      	adds	r1, #1
  405676:	005b      	lsls	r3, r3, #1
  405678:	e7c8      	b.n	40560c <__lshift+0x1c>
  40567a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  40567e:	3201      	adds	r2, #1
  405680:	e7ce      	b.n	405620 <__lshift+0x30>
  405682:	3b04      	subs	r3, #4
  405684:	f851 2b04 	ldr.w	r2, [r1], #4
  405688:	f843 2f04 	str.w	r2, [r3, #4]!
  40568c:	458e      	cmp	lr, r1
  40568e:	d8f9      	bhi.n	405684 <__lshift+0x94>
  405690:	e7e6      	b.n	405660 <__lshift+0x70>

00405692 <__mcmp>:
  405692:	6903      	ldr	r3, [r0, #16]
  405694:	690a      	ldr	r2, [r1, #16]
  405696:	1a9b      	subs	r3, r3, r2
  405698:	b530      	push	{r4, r5, lr}
  40569a:	d10c      	bne.n	4056b6 <__mcmp+0x24>
  40569c:	0092      	lsls	r2, r2, #2
  40569e:	3014      	adds	r0, #20
  4056a0:	3114      	adds	r1, #20
  4056a2:	1884      	adds	r4, r0, r2
  4056a4:	4411      	add	r1, r2
  4056a6:	f854 5d04 	ldr.w	r5, [r4, #-4]!
  4056aa:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4056ae:	4295      	cmp	r5, r2
  4056b0:	d003      	beq.n	4056ba <__mcmp+0x28>
  4056b2:	d305      	bcc.n	4056c0 <__mcmp+0x2e>
  4056b4:	2301      	movs	r3, #1
  4056b6:	4618      	mov	r0, r3
  4056b8:	bd30      	pop	{r4, r5, pc}
  4056ba:	42a0      	cmp	r0, r4
  4056bc:	d3f3      	bcc.n	4056a6 <__mcmp+0x14>
  4056be:	e7fa      	b.n	4056b6 <__mcmp+0x24>
  4056c0:	f04f 33ff 	mov.w	r3, #4294967295
  4056c4:	e7f7      	b.n	4056b6 <__mcmp+0x24>

004056c6 <__mdiff>:
  4056c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4056ca:	460d      	mov	r5, r1
  4056cc:	4607      	mov	r7, r0
  4056ce:	4611      	mov	r1, r2
  4056d0:	4628      	mov	r0, r5
  4056d2:	4614      	mov	r4, r2
  4056d4:	f7ff ffdd 	bl	405692 <__mcmp>
  4056d8:	1e06      	subs	r6, r0, #0
  4056da:	d108      	bne.n	4056ee <__mdiff+0x28>
  4056dc:	4631      	mov	r1, r6
  4056de:	4638      	mov	r0, r7
  4056e0:	f7ff fdce 	bl	405280 <_Balloc>
  4056e4:	2301      	movs	r3, #1
  4056e6:	6103      	str	r3, [r0, #16]
  4056e8:	6146      	str	r6, [r0, #20]
  4056ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4056ee:	bfa4      	itt	ge
  4056f0:	4623      	movge	r3, r4
  4056f2:	462c      	movge	r4, r5
  4056f4:	4638      	mov	r0, r7
  4056f6:	6861      	ldr	r1, [r4, #4]
  4056f8:	bfa6      	itte	ge
  4056fa:	461d      	movge	r5, r3
  4056fc:	2600      	movge	r6, #0
  4056fe:	2601      	movlt	r6, #1
  405700:	f7ff fdbe 	bl	405280 <_Balloc>
  405704:	692b      	ldr	r3, [r5, #16]
  405706:	60c6      	str	r6, [r0, #12]
  405708:	6926      	ldr	r6, [r4, #16]
  40570a:	f105 0914 	add.w	r9, r5, #20
  40570e:	f104 0214 	add.w	r2, r4, #20
  405712:	eb02 0786 	add.w	r7, r2, r6, lsl #2
  405716:	eb09 0883 	add.w	r8, r9, r3, lsl #2
  40571a:	f100 0514 	add.w	r5, r0, #20
  40571e:	f04f 0c00 	mov.w	ip, #0
  405722:	f852 ab04 	ldr.w	sl, [r2], #4
  405726:	f859 4b04 	ldr.w	r4, [r9], #4
  40572a:	fa1c f18a 	uxtah	r1, ip, sl
  40572e:	b2a3      	uxth	r3, r4
  405730:	1ac9      	subs	r1, r1, r3
  405732:	0c23      	lsrs	r3, r4, #16
  405734:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
  405738:	eb03 4321 	add.w	r3, r3, r1, asr #16
  40573c:	b289      	uxth	r1, r1
  40573e:	ea4f 4c23 	mov.w	ip, r3, asr #16
  405742:	45c8      	cmp	r8, r9
  405744:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
  405748:	4696      	mov	lr, r2
  40574a:	f845 3b04 	str.w	r3, [r5], #4
  40574e:	d8e8      	bhi.n	405722 <__mdiff+0x5c>
  405750:	45be      	cmp	lr, r7
  405752:	d305      	bcc.n	405760 <__mdiff+0x9a>
  405754:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  405758:	b18b      	cbz	r3, 40577e <__mdiff+0xb8>
  40575a:	6106      	str	r6, [r0, #16]
  40575c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  405760:	f85e 1b04 	ldr.w	r1, [lr], #4
  405764:	fa1c f381 	uxtah	r3, ip, r1
  405768:	141a      	asrs	r2, r3, #16
  40576a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
  40576e:	b29b      	uxth	r3, r3
  405770:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  405774:	ea4f 4c22 	mov.w	ip, r2, asr #16
  405778:	f845 3b04 	str.w	r3, [r5], #4
  40577c:	e7e8      	b.n	405750 <__mdiff+0x8a>
  40577e:	3e01      	subs	r6, #1
  405780:	e7e8      	b.n	405754 <__mdiff+0x8e>

00405782 <__d2b>:
  405782:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  405786:	2101      	movs	r1, #1
  405788:	461c      	mov	r4, r3
  40578a:	4690      	mov	r8, r2
  40578c:	9e08      	ldr	r6, [sp, #32]
  40578e:	9d09      	ldr	r5, [sp, #36]	; 0x24
  405790:	f7ff fd76 	bl	405280 <_Balloc>
  405794:	f3c4 0213 	ubfx	r2, r4, #0, #20
  405798:	f3c4 540a 	ubfx	r4, r4, #20, #11
  40579c:	4607      	mov	r7, r0
  40579e:	bb34      	cbnz	r4, 4057ee <__d2b+0x6c>
  4057a0:	9201      	str	r2, [sp, #4]
  4057a2:	f1b8 0f00 	cmp.w	r8, #0
  4057a6:	d027      	beq.n	4057f8 <__d2b+0x76>
  4057a8:	a802      	add	r0, sp, #8
  4057aa:	f840 8d08 	str.w	r8, [r0, #-8]!
  4057ae:	f7ff fe0c 	bl	4053ca <__lo0bits>
  4057b2:	9900      	ldr	r1, [sp, #0]
  4057b4:	b1f0      	cbz	r0, 4057f4 <__d2b+0x72>
  4057b6:	9a01      	ldr	r2, [sp, #4]
  4057b8:	f1c0 0320 	rsb	r3, r0, #32
  4057bc:	fa02 f303 	lsl.w	r3, r2, r3
  4057c0:	430b      	orrs	r3, r1
  4057c2:	40c2      	lsrs	r2, r0
  4057c4:	617b      	str	r3, [r7, #20]
  4057c6:	9201      	str	r2, [sp, #4]
  4057c8:	9b01      	ldr	r3, [sp, #4]
  4057ca:	61bb      	str	r3, [r7, #24]
  4057cc:	2b00      	cmp	r3, #0
  4057ce:	bf14      	ite	ne
  4057d0:	2102      	movne	r1, #2
  4057d2:	2101      	moveq	r1, #1
  4057d4:	6139      	str	r1, [r7, #16]
  4057d6:	b1c4      	cbz	r4, 40580a <__d2b+0x88>
  4057d8:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
  4057dc:	4404      	add	r4, r0
  4057de:	6034      	str	r4, [r6, #0]
  4057e0:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4057e4:	6028      	str	r0, [r5, #0]
  4057e6:	4638      	mov	r0, r7
  4057e8:	b002      	add	sp, #8
  4057ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4057ee:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
  4057f2:	e7d5      	b.n	4057a0 <__d2b+0x1e>
  4057f4:	6179      	str	r1, [r7, #20]
  4057f6:	e7e7      	b.n	4057c8 <__d2b+0x46>
  4057f8:	a801      	add	r0, sp, #4
  4057fa:	f7ff fde6 	bl	4053ca <__lo0bits>
  4057fe:	9b01      	ldr	r3, [sp, #4]
  405800:	617b      	str	r3, [r7, #20]
  405802:	2101      	movs	r1, #1
  405804:	6139      	str	r1, [r7, #16]
  405806:	3020      	adds	r0, #32
  405808:	e7e5      	b.n	4057d6 <__d2b+0x54>
  40580a:	eb07 0381 	add.w	r3, r7, r1, lsl #2
  40580e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  405812:	6030      	str	r0, [r6, #0]
  405814:	6918      	ldr	r0, [r3, #16]
  405816:	f7ff fdb9 	bl	40538c <__hi0bits>
  40581a:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  40581e:	e7e1      	b.n	4057e4 <__d2b+0x62>

00405820 <_calloc_r>:
  405820:	b538      	push	{r3, r4, r5, lr}
  405822:	fb02 f401 	mul.w	r4, r2, r1
  405826:	4621      	mov	r1, r4
  405828:	f000 f856 	bl	4058d8 <_malloc_r>
  40582c:	4605      	mov	r5, r0
  40582e:	b118      	cbz	r0, 405838 <_calloc_r+0x18>
  405830:	4622      	mov	r2, r4
  405832:	2100      	movs	r1, #0
  405834:	f7fd ff43 	bl	4036be <memset>
  405838:	4628      	mov	r0, r5
  40583a:	bd38      	pop	{r3, r4, r5, pc}

0040583c <_free_r>:
  40583c:	b538      	push	{r3, r4, r5, lr}
  40583e:	4605      	mov	r5, r0
  405840:	2900      	cmp	r1, #0
  405842:	d045      	beq.n	4058d0 <_free_r+0x94>
  405844:	f851 3c04 	ldr.w	r3, [r1, #-4]
  405848:	1f0c      	subs	r4, r1, #4
  40584a:	2b00      	cmp	r3, #0
  40584c:	bfb8      	it	lt
  40584e:	18e4      	addlt	r4, r4, r3
  405850:	f000 fb5a 	bl	405f08 <__malloc_lock>
  405854:	4a1f      	ldr	r2, [pc, #124]	; (4058d4 <_free_r+0x98>)
  405856:	6813      	ldr	r3, [r2, #0]
  405858:	4610      	mov	r0, r2
  40585a:	b933      	cbnz	r3, 40586a <_free_r+0x2e>
  40585c:	6063      	str	r3, [r4, #4]
  40585e:	6014      	str	r4, [r2, #0]
  405860:	4628      	mov	r0, r5
  405862:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  405866:	f000 bb50 	b.w	405f0a <__malloc_unlock>
  40586a:	42a3      	cmp	r3, r4
  40586c:	d90c      	bls.n	405888 <_free_r+0x4c>
  40586e:	6821      	ldr	r1, [r4, #0]
  405870:	1862      	adds	r2, r4, r1
  405872:	4293      	cmp	r3, r2
  405874:	bf04      	itt	eq
  405876:	681a      	ldreq	r2, [r3, #0]
  405878:	685b      	ldreq	r3, [r3, #4]
  40587a:	6063      	str	r3, [r4, #4]
  40587c:	bf04      	itt	eq
  40587e:	1852      	addeq	r2, r2, r1
  405880:	6022      	streq	r2, [r4, #0]
  405882:	6004      	str	r4, [r0, #0]
  405884:	e7ec      	b.n	405860 <_free_r+0x24>
  405886:	4613      	mov	r3, r2
  405888:	685a      	ldr	r2, [r3, #4]
  40588a:	b10a      	cbz	r2, 405890 <_free_r+0x54>
  40588c:	42a2      	cmp	r2, r4
  40588e:	d9fa      	bls.n	405886 <_free_r+0x4a>
  405890:	6819      	ldr	r1, [r3, #0]
  405892:	1858      	adds	r0, r3, r1
  405894:	42a0      	cmp	r0, r4
  405896:	d10b      	bne.n	4058b0 <_free_r+0x74>
  405898:	6820      	ldr	r0, [r4, #0]
  40589a:	4401      	add	r1, r0
  40589c:	1858      	adds	r0, r3, r1
  40589e:	4282      	cmp	r2, r0
  4058a0:	6019      	str	r1, [r3, #0]
  4058a2:	d1dd      	bne.n	405860 <_free_r+0x24>
  4058a4:	6810      	ldr	r0, [r2, #0]
  4058a6:	6852      	ldr	r2, [r2, #4]
  4058a8:	605a      	str	r2, [r3, #4]
  4058aa:	4401      	add	r1, r0
  4058ac:	6019      	str	r1, [r3, #0]
  4058ae:	e7d7      	b.n	405860 <_free_r+0x24>
  4058b0:	d902      	bls.n	4058b8 <_free_r+0x7c>
  4058b2:	230c      	movs	r3, #12
  4058b4:	602b      	str	r3, [r5, #0]
  4058b6:	e7d3      	b.n	405860 <_free_r+0x24>
  4058b8:	6820      	ldr	r0, [r4, #0]
  4058ba:	1821      	adds	r1, r4, r0
  4058bc:	428a      	cmp	r2, r1
  4058be:	bf04      	itt	eq
  4058c0:	6811      	ldreq	r1, [r2, #0]
  4058c2:	6852      	ldreq	r2, [r2, #4]
  4058c4:	6062      	str	r2, [r4, #4]
  4058c6:	bf04      	itt	eq
  4058c8:	1809      	addeq	r1, r1, r0
  4058ca:	6021      	streq	r1, [r4, #0]
  4058cc:	605c      	str	r4, [r3, #4]
  4058ce:	e7c7      	b.n	405860 <_free_r+0x24>
  4058d0:	bd38      	pop	{r3, r4, r5, pc}
  4058d2:	bf00      	nop
  4058d4:	20400260 	.word	0x20400260

004058d8 <_malloc_r>:
  4058d8:	b570      	push	{r4, r5, r6, lr}
  4058da:	1ccd      	adds	r5, r1, #3
  4058dc:	f025 0503 	bic.w	r5, r5, #3
  4058e0:	3508      	adds	r5, #8
  4058e2:	2d0c      	cmp	r5, #12
  4058e4:	bf38      	it	cc
  4058e6:	250c      	movcc	r5, #12
  4058e8:	2d00      	cmp	r5, #0
  4058ea:	4606      	mov	r6, r0
  4058ec:	db01      	blt.n	4058f2 <_malloc_r+0x1a>
  4058ee:	42a9      	cmp	r1, r5
  4058f0:	d903      	bls.n	4058fa <_malloc_r+0x22>
  4058f2:	230c      	movs	r3, #12
  4058f4:	6033      	str	r3, [r6, #0]
  4058f6:	2000      	movs	r0, #0
  4058f8:	bd70      	pop	{r4, r5, r6, pc}
  4058fa:	f000 fb05 	bl	405f08 <__malloc_lock>
  4058fe:	4a23      	ldr	r2, [pc, #140]	; (40598c <_malloc_r+0xb4>)
  405900:	6814      	ldr	r4, [r2, #0]
  405902:	4621      	mov	r1, r4
  405904:	b991      	cbnz	r1, 40592c <_malloc_r+0x54>
  405906:	4c22      	ldr	r4, [pc, #136]	; (405990 <_malloc_r+0xb8>)
  405908:	6823      	ldr	r3, [r4, #0]
  40590a:	b91b      	cbnz	r3, 405914 <_malloc_r+0x3c>
  40590c:	4630      	mov	r0, r6
  40590e:	f000 f97f 	bl	405c10 <_sbrk_r>
  405912:	6020      	str	r0, [r4, #0]
  405914:	4629      	mov	r1, r5
  405916:	4630      	mov	r0, r6
  405918:	f000 f97a 	bl	405c10 <_sbrk_r>
  40591c:	1c43      	adds	r3, r0, #1
  40591e:	d126      	bne.n	40596e <_malloc_r+0x96>
  405920:	230c      	movs	r3, #12
  405922:	6033      	str	r3, [r6, #0]
  405924:	4630      	mov	r0, r6
  405926:	f000 faf0 	bl	405f0a <__malloc_unlock>
  40592a:	e7e4      	b.n	4058f6 <_malloc_r+0x1e>
  40592c:	680b      	ldr	r3, [r1, #0]
  40592e:	1b5b      	subs	r3, r3, r5
  405930:	d41a      	bmi.n	405968 <_malloc_r+0x90>
  405932:	2b0b      	cmp	r3, #11
  405934:	d90f      	bls.n	405956 <_malloc_r+0x7e>
  405936:	600b      	str	r3, [r1, #0]
  405938:	50cd      	str	r5, [r1, r3]
  40593a:	18cc      	adds	r4, r1, r3
  40593c:	4630      	mov	r0, r6
  40593e:	f000 fae4 	bl	405f0a <__malloc_unlock>
  405942:	f104 000b 	add.w	r0, r4, #11
  405946:	1d23      	adds	r3, r4, #4
  405948:	f020 0007 	bic.w	r0, r0, #7
  40594c:	1ac3      	subs	r3, r0, r3
  40594e:	d01b      	beq.n	405988 <_malloc_r+0xb0>
  405950:	425a      	negs	r2, r3
  405952:	50e2      	str	r2, [r4, r3]
  405954:	bd70      	pop	{r4, r5, r6, pc}
  405956:	428c      	cmp	r4, r1
  405958:	bf0d      	iteet	eq
  40595a:	6863      	ldreq	r3, [r4, #4]
  40595c:	684b      	ldrne	r3, [r1, #4]
  40595e:	6063      	strne	r3, [r4, #4]
  405960:	6013      	streq	r3, [r2, #0]
  405962:	bf18      	it	ne
  405964:	460c      	movne	r4, r1
  405966:	e7e9      	b.n	40593c <_malloc_r+0x64>
  405968:	460c      	mov	r4, r1
  40596a:	6849      	ldr	r1, [r1, #4]
  40596c:	e7ca      	b.n	405904 <_malloc_r+0x2c>
  40596e:	1cc4      	adds	r4, r0, #3
  405970:	f024 0403 	bic.w	r4, r4, #3
  405974:	42a0      	cmp	r0, r4
  405976:	d005      	beq.n	405984 <_malloc_r+0xac>
  405978:	1a21      	subs	r1, r4, r0
  40597a:	4630      	mov	r0, r6
  40597c:	f000 f948 	bl	405c10 <_sbrk_r>
  405980:	3001      	adds	r0, #1
  405982:	d0cd      	beq.n	405920 <_malloc_r+0x48>
  405984:	6025      	str	r5, [r4, #0]
  405986:	e7d9      	b.n	40593c <_malloc_r+0x64>
  405988:	bd70      	pop	{r4, r5, r6, pc}
  40598a:	bf00      	nop
  40598c:	20400260 	.word	0x20400260
  405990:	20400264 	.word	0x20400264

00405994 <__sfputc_r>:
  405994:	6893      	ldr	r3, [r2, #8]
  405996:	3b01      	subs	r3, #1
  405998:	2b00      	cmp	r3, #0
  40599a:	b410      	push	{r4}
  40599c:	6093      	str	r3, [r2, #8]
  40599e:	da08      	bge.n	4059b2 <__sfputc_r+0x1e>
  4059a0:	6994      	ldr	r4, [r2, #24]
  4059a2:	42a3      	cmp	r3, r4
  4059a4:	db02      	blt.n	4059ac <__sfputc_r+0x18>
  4059a6:	b2cb      	uxtb	r3, r1
  4059a8:	2b0a      	cmp	r3, #10
  4059aa:	d102      	bne.n	4059b2 <__sfputc_r+0x1e>
  4059ac:	bc10      	pop	{r4}
  4059ae:	f000 b983 	b.w	405cb8 <__swbuf_r>
  4059b2:	6813      	ldr	r3, [r2, #0]
  4059b4:	1c58      	adds	r0, r3, #1
  4059b6:	6010      	str	r0, [r2, #0]
  4059b8:	7019      	strb	r1, [r3, #0]
  4059ba:	b2c8      	uxtb	r0, r1
  4059bc:	bc10      	pop	{r4}
  4059be:	4770      	bx	lr

004059c0 <__sfputs_r>:
  4059c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4059c2:	4606      	mov	r6, r0
  4059c4:	460f      	mov	r7, r1
  4059c6:	4614      	mov	r4, r2
  4059c8:	18d5      	adds	r5, r2, r3
  4059ca:	42ac      	cmp	r4, r5
  4059cc:	d101      	bne.n	4059d2 <__sfputs_r+0x12>
  4059ce:	2000      	movs	r0, #0
  4059d0:	e007      	b.n	4059e2 <__sfputs_r+0x22>
  4059d2:	463a      	mov	r2, r7
  4059d4:	f814 1b01 	ldrb.w	r1, [r4], #1
  4059d8:	4630      	mov	r0, r6
  4059da:	f7ff ffdb 	bl	405994 <__sfputc_r>
  4059de:	1c43      	adds	r3, r0, #1
  4059e0:	d1f3      	bne.n	4059ca <__sfputs_r+0xa>
  4059e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

004059e4 <_vfiprintf_r>:
  4059e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4059e8:	b09d      	sub	sp, #116	; 0x74
  4059ea:	460c      	mov	r4, r1
  4059ec:	4617      	mov	r7, r2
  4059ee:	9303      	str	r3, [sp, #12]
  4059f0:	4606      	mov	r6, r0
  4059f2:	b118      	cbz	r0, 4059fc <_vfiprintf_r+0x18>
  4059f4:	6983      	ldr	r3, [r0, #24]
  4059f6:	b90b      	cbnz	r3, 4059fc <_vfiprintf_r+0x18>
  4059f8:	f7ff faee 	bl	404fd8 <__sinit>
  4059fc:	4b7c      	ldr	r3, [pc, #496]	; (405bf0 <_vfiprintf_r+0x20c>)
  4059fe:	429c      	cmp	r4, r3
  405a00:	d157      	bne.n	405ab2 <_vfiprintf_r+0xce>
  405a02:	6874      	ldr	r4, [r6, #4]
  405a04:	89a3      	ldrh	r3, [r4, #12]
  405a06:	0718      	lsls	r0, r3, #28
  405a08:	d55d      	bpl.n	405ac6 <_vfiprintf_r+0xe2>
  405a0a:	6923      	ldr	r3, [r4, #16]
  405a0c:	2b00      	cmp	r3, #0
  405a0e:	d05a      	beq.n	405ac6 <_vfiprintf_r+0xe2>
  405a10:	2300      	movs	r3, #0
  405a12:	9309      	str	r3, [sp, #36]	; 0x24
  405a14:	2320      	movs	r3, #32
  405a16:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
  405a1a:	2330      	movs	r3, #48	; 0x30
  405a1c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
  405a20:	f04f 0b01 	mov.w	fp, #1
  405a24:	46b8      	mov	r8, r7
  405a26:	4645      	mov	r5, r8
  405a28:	f815 3b01 	ldrb.w	r3, [r5], #1
  405a2c:	2b00      	cmp	r3, #0
  405a2e:	d155      	bne.n	405adc <_vfiprintf_r+0xf8>
  405a30:	ebb8 0a07 	subs.w	sl, r8, r7
  405a34:	d00b      	beq.n	405a4e <_vfiprintf_r+0x6a>
  405a36:	4653      	mov	r3, sl
  405a38:	463a      	mov	r2, r7
  405a3a:	4621      	mov	r1, r4
  405a3c:	4630      	mov	r0, r6
  405a3e:	f7ff ffbf 	bl	4059c0 <__sfputs_r>
  405a42:	3001      	adds	r0, #1
  405a44:	f000 80c4 	beq.w	405bd0 <_vfiprintf_r+0x1ec>
  405a48:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405a4a:	4453      	add	r3, sl
  405a4c:	9309      	str	r3, [sp, #36]	; 0x24
  405a4e:	f898 3000 	ldrb.w	r3, [r8]
  405a52:	2b00      	cmp	r3, #0
  405a54:	f000 80bc 	beq.w	405bd0 <_vfiprintf_r+0x1ec>
  405a58:	2300      	movs	r3, #0
  405a5a:	f04f 32ff 	mov.w	r2, #4294967295
  405a5e:	9304      	str	r3, [sp, #16]
  405a60:	9307      	str	r3, [sp, #28]
  405a62:	9205      	str	r2, [sp, #20]
  405a64:	9306      	str	r3, [sp, #24]
  405a66:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
  405a6a:	931a      	str	r3, [sp, #104]	; 0x68
  405a6c:	2205      	movs	r2, #5
  405a6e:	7829      	ldrb	r1, [r5, #0]
  405a70:	4860      	ldr	r0, [pc, #384]	; (405bf4 <_vfiprintf_r+0x210>)
  405a72:	f7ff fbb5 	bl	4051e0 <memchr>
  405a76:	f105 0801 	add.w	r8, r5, #1
  405a7a:	9b04      	ldr	r3, [sp, #16]
  405a7c:	2800      	cmp	r0, #0
  405a7e:	d131      	bne.n	405ae4 <_vfiprintf_r+0x100>
  405a80:	06d9      	lsls	r1, r3, #27
  405a82:	bf44      	itt	mi
  405a84:	2220      	movmi	r2, #32
  405a86:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
  405a8a:	071a      	lsls	r2, r3, #28
  405a8c:	bf44      	itt	mi
  405a8e:	222b      	movmi	r2, #43	; 0x2b
  405a90:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
  405a94:	782a      	ldrb	r2, [r5, #0]
  405a96:	2a2a      	cmp	r2, #42	; 0x2a
  405a98:	d02c      	beq.n	405af4 <_vfiprintf_r+0x110>
  405a9a:	9a07      	ldr	r2, [sp, #28]
  405a9c:	2100      	movs	r1, #0
  405a9e:	200a      	movs	r0, #10
  405aa0:	46a8      	mov	r8, r5
  405aa2:	3501      	adds	r5, #1
  405aa4:	f898 3000 	ldrb.w	r3, [r8]
  405aa8:	3b30      	subs	r3, #48	; 0x30
  405aaa:	2b09      	cmp	r3, #9
  405aac:	d96d      	bls.n	405b8a <_vfiprintf_r+0x1a6>
  405aae:	b371      	cbz	r1, 405b0e <_vfiprintf_r+0x12a>
  405ab0:	e026      	b.n	405b00 <_vfiprintf_r+0x11c>
  405ab2:	4b51      	ldr	r3, [pc, #324]	; (405bf8 <_vfiprintf_r+0x214>)
  405ab4:	429c      	cmp	r4, r3
  405ab6:	d101      	bne.n	405abc <_vfiprintf_r+0xd8>
  405ab8:	68b4      	ldr	r4, [r6, #8]
  405aba:	e7a3      	b.n	405a04 <_vfiprintf_r+0x20>
  405abc:	4b4f      	ldr	r3, [pc, #316]	; (405bfc <_vfiprintf_r+0x218>)
  405abe:	429c      	cmp	r4, r3
  405ac0:	bf08      	it	eq
  405ac2:	68f4      	ldreq	r4, [r6, #12]
  405ac4:	e79e      	b.n	405a04 <_vfiprintf_r+0x20>
  405ac6:	4621      	mov	r1, r4
  405ac8:	4630      	mov	r0, r6
  405aca:	f000 f959 	bl	405d80 <__swsetup_r>
  405ace:	2800      	cmp	r0, #0
  405ad0:	d09e      	beq.n	405a10 <_vfiprintf_r+0x2c>
  405ad2:	f04f 30ff 	mov.w	r0, #4294967295
  405ad6:	b01d      	add	sp, #116	; 0x74
  405ad8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405adc:	2b25      	cmp	r3, #37	; 0x25
  405ade:	d0a7      	beq.n	405a30 <_vfiprintf_r+0x4c>
  405ae0:	46a8      	mov	r8, r5
  405ae2:	e7a0      	b.n	405a26 <_vfiprintf_r+0x42>
  405ae4:	4a43      	ldr	r2, [pc, #268]	; (405bf4 <_vfiprintf_r+0x210>)
  405ae6:	1a80      	subs	r0, r0, r2
  405ae8:	fa0b f000 	lsl.w	r0, fp, r0
  405aec:	4318      	orrs	r0, r3
  405aee:	9004      	str	r0, [sp, #16]
  405af0:	4645      	mov	r5, r8
  405af2:	e7bb      	b.n	405a6c <_vfiprintf_r+0x88>
  405af4:	9a03      	ldr	r2, [sp, #12]
  405af6:	1d11      	adds	r1, r2, #4
  405af8:	6812      	ldr	r2, [r2, #0]
  405afa:	9103      	str	r1, [sp, #12]
  405afc:	2a00      	cmp	r2, #0
  405afe:	db01      	blt.n	405b04 <_vfiprintf_r+0x120>
  405b00:	9207      	str	r2, [sp, #28]
  405b02:	e004      	b.n	405b0e <_vfiprintf_r+0x12a>
  405b04:	4252      	negs	r2, r2
  405b06:	f043 0302 	orr.w	r3, r3, #2
  405b0a:	9207      	str	r2, [sp, #28]
  405b0c:	9304      	str	r3, [sp, #16]
  405b0e:	f898 3000 	ldrb.w	r3, [r8]
  405b12:	2b2e      	cmp	r3, #46	; 0x2e
  405b14:	d110      	bne.n	405b38 <_vfiprintf_r+0x154>
  405b16:	f898 3001 	ldrb.w	r3, [r8, #1]
  405b1a:	2b2a      	cmp	r3, #42	; 0x2a
  405b1c:	f108 0101 	add.w	r1, r8, #1
  405b20:	d137      	bne.n	405b92 <_vfiprintf_r+0x1ae>
  405b22:	9b03      	ldr	r3, [sp, #12]
  405b24:	1d1a      	adds	r2, r3, #4
  405b26:	681b      	ldr	r3, [r3, #0]
  405b28:	9203      	str	r2, [sp, #12]
  405b2a:	2b00      	cmp	r3, #0
  405b2c:	bfb8      	it	lt
  405b2e:	f04f 33ff 	movlt.w	r3, #4294967295
  405b32:	f108 0802 	add.w	r8, r8, #2
  405b36:	9305      	str	r3, [sp, #20]
  405b38:	4d31      	ldr	r5, [pc, #196]	; (405c00 <_vfiprintf_r+0x21c>)
  405b3a:	f898 1000 	ldrb.w	r1, [r8]
  405b3e:	2203      	movs	r2, #3
  405b40:	4628      	mov	r0, r5
  405b42:	f7ff fb4d 	bl	4051e0 <memchr>
  405b46:	b140      	cbz	r0, 405b5a <_vfiprintf_r+0x176>
  405b48:	2340      	movs	r3, #64	; 0x40
  405b4a:	1b40      	subs	r0, r0, r5
  405b4c:	fa03 f000 	lsl.w	r0, r3, r0
  405b50:	9b04      	ldr	r3, [sp, #16]
  405b52:	4303      	orrs	r3, r0
  405b54:	9304      	str	r3, [sp, #16]
  405b56:	f108 0801 	add.w	r8, r8, #1
  405b5a:	f898 1000 	ldrb.w	r1, [r8]
  405b5e:	4829      	ldr	r0, [pc, #164]	; (405c04 <_vfiprintf_r+0x220>)
  405b60:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
  405b64:	2206      	movs	r2, #6
  405b66:	f108 0701 	add.w	r7, r8, #1
  405b6a:	f7ff fb39 	bl	4051e0 <memchr>
  405b6e:	2800      	cmp	r0, #0
  405b70:	d034      	beq.n	405bdc <_vfiprintf_r+0x1f8>
  405b72:	4b25      	ldr	r3, [pc, #148]	; (405c08 <_vfiprintf_r+0x224>)
  405b74:	bb03      	cbnz	r3, 405bb8 <_vfiprintf_r+0x1d4>
  405b76:	9b03      	ldr	r3, [sp, #12]
  405b78:	3307      	adds	r3, #7
  405b7a:	f023 0307 	bic.w	r3, r3, #7
  405b7e:	3308      	adds	r3, #8
  405b80:	9303      	str	r3, [sp, #12]
  405b82:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405b84:	444b      	add	r3, r9
  405b86:	9309      	str	r3, [sp, #36]	; 0x24
  405b88:	e74c      	b.n	405a24 <_vfiprintf_r+0x40>
  405b8a:	fb00 3202 	mla	r2, r0, r2, r3
  405b8e:	2101      	movs	r1, #1
  405b90:	e786      	b.n	405aa0 <_vfiprintf_r+0xbc>
  405b92:	2300      	movs	r3, #0
  405b94:	9305      	str	r3, [sp, #20]
  405b96:	4618      	mov	r0, r3
  405b98:	250a      	movs	r5, #10
  405b9a:	4688      	mov	r8, r1
  405b9c:	3101      	adds	r1, #1
  405b9e:	f898 2000 	ldrb.w	r2, [r8]
  405ba2:	3a30      	subs	r2, #48	; 0x30
  405ba4:	2a09      	cmp	r2, #9
  405ba6:	d903      	bls.n	405bb0 <_vfiprintf_r+0x1cc>
  405ba8:	2b00      	cmp	r3, #0
  405baa:	d0c5      	beq.n	405b38 <_vfiprintf_r+0x154>
  405bac:	9005      	str	r0, [sp, #20]
  405bae:	e7c3      	b.n	405b38 <_vfiprintf_r+0x154>
  405bb0:	fb05 2000 	mla	r0, r5, r0, r2
  405bb4:	2301      	movs	r3, #1
  405bb6:	e7f0      	b.n	405b9a <_vfiprintf_r+0x1b6>
  405bb8:	ab03      	add	r3, sp, #12
  405bba:	9300      	str	r3, [sp, #0]
  405bbc:	4622      	mov	r2, r4
  405bbe:	4b13      	ldr	r3, [pc, #76]	; (405c0c <_vfiprintf_r+0x228>)
  405bc0:	a904      	add	r1, sp, #16
  405bc2:	4630      	mov	r0, r6
  405bc4:	f7fd fe14 	bl	4037f0 <_printf_float>
  405bc8:	f1b0 3fff 	cmp.w	r0, #4294967295
  405bcc:	4681      	mov	r9, r0
  405bce:	d1d8      	bne.n	405b82 <_vfiprintf_r+0x19e>
  405bd0:	89a3      	ldrh	r3, [r4, #12]
  405bd2:	065b      	lsls	r3, r3, #25
  405bd4:	f53f af7d 	bmi.w	405ad2 <_vfiprintf_r+0xee>
  405bd8:	9809      	ldr	r0, [sp, #36]	; 0x24
  405bda:	e77c      	b.n	405ad6 <_vfiprintf_r+0xf2>
  405bdc:	ab03      	add	r3, sp, #12
  405bde:	9300      	str	r3, [sp, #0]
  405be0:	4622      	mov	r2, r4
  405be2:	4b0a      	ldr	r3, [pc, #40]	; (405c0c <_vfiprintf_r+0x228>)
  405be4:	a904      	add	r1, sp, #16
  405be6:	4630      	mov	r0, r6
  405be8:	f7fe f8b0 	bl	403d4c <_printf_i>
  405bec:	e7ec      	b.n	405bc8 <_vfiprintf_r+0x1e4>
  405bee:	bf00      	nop
  405bf0:	00406560 	.word	0x00406560
  405bf4:	0040669c 	.word	0x0040669c
  405bf8:	00406580 	.word	0x00406580
  405bfc:	00406540 	.word	0x00406540
  405c00:	004066a2 	.word	0x004066a2
  405c04:	004066a6 	.word	0x004066a6
  405c08:	004037f1 	.word	0x004037f1
  405c0c:	004059c1 	.word	0x004059c1

00405c10 <_sbrk_r>:
  405c10:	b538      	push	{r3, r4, r5, lr}
  405c12:	4c06      	ldr	r4, [pc, #24]	; (405c2c <_sbrk_r+0x1c>)
  405c14:	2300      	movs	r3, #0
  405c16:	4605      	mov	r5, r0
  405c18:	4608      	mov	r0, r1
  405c1a:	6023      	str	r3, [r4, #0]
  405c1c:	f7fb f8ca 	bl	400db4 <_sbrk>
  405c20:	1c43      	adds	r3, r0, #1
  405c22:	d102      	bne.n	405c2a <_sbrk_r+0x1a>
  405c24:	6823      	ldr	r3, [r4, #0]
  405c26:	b103      	cbz	r3, 405c2a <_sbrk_r+0x1a>
  405c28:	602b      	str	r3, [r5, #0]
  405c2a:	bd38      	pop	{r3, r4, r5, pc}
  405c2c:	204002dc 	.word	0x204002dc

00405c30 <__sread>:
  405c30:	b510      	push	{r4, lr}
  405c32:	460c      	mov	r4, r1
  405c34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405c38:	f000 f968 	bl	405f0c <_read_r>
  405c3c:	2800      	cmp	r0, #0
  405c3e:	bfab      	itete	ge
  405c40:	6d63      	ldrge	r3, [r4, #84]	; 0x54
  405c42:	89a3      	ldrhlt	r3, [r4, #12]
  405c44:	181b      	addge	r3, r3, r0
  405c46:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
  405c4a:	bfac      	ite	ge
  405c4c:	6563      	strge	r3, [r4, #84]	; 0x54
  405c4e:	81a3      	strhlt	r3, [r4, #12]
  405c50:	bd10      	pop	{r4, pc}

00405c52 <__swrite>:
  405c52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405c56:	461f      	mov	r7, r3
  405c58:	898b      	ldrh	r3, [r1, #12]
  405c5a:	05db      	lsls	r3, r3, #23
  405c5c:	4605      	mov	r5, r0
  405c5e:	460c      	mov	r4, r1
  405c60:	4616      	mov	r6, r2
  405c62:	d505      	bpl.n	405c70 <__swrite+0x1e>
  405c64:	2302      	movs	r3, #2
  405c66:	2200      	movs	r2, #0
  405c68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405c6c:	f000 f928 	bl	405ec0 <_lseek_r>
  405c70:	89a3      	ldrh	r3, [r4, #12]
  405c72:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  405c76:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  405c7a:	81a3      	strh	r3, [r4, #12]
  405c7c:	4632      	mov	r2, r6
  405c7e:	463b      	mov	r3, r7
  405c80:	4628      	mov	r0, r5
  405c82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405c86:	f000 b869 	b.w	405d5c <_write_r>

00405c8a <__sseek>:
  405c8a:	b510      	push	{r4, lr}
  405c8c:	460c      	mov	r4, r1
  405c8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405c92:	f000 f915 	bl	405ec0 <_lseek_r>
  405c96:	1c43      	adds	r3, r0, #1
  405c98:	89a3      	ldrh	r3, [r4, #12]
  405c9a:	bf15      	itete	ne
  405c9c:	6560      	strne	r0, [r4, #84]	; 0x54
  405c9e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  405ca2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  405ca6:	81a3      	strheq	r3, [r4, #12]
  405ca8:	bf18      	it	ne
  405caa:	81a3      	strhne	r3, [r4, #12]
  405cac:	bd10      	pop	{r4, pc}

00405cae <__sclose>:
  405cae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405cb2:	f000 b8d3 	b.w	405e5c <_close_r>
	...

00405cb8 <__swbuf_r>:
  405cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  405cba:	460e      	mov	r6, r1
  405cbc:	4614      	mov	r4, r2
  405cbe:	4605      	mov	r5, r0
  405cc0:	b118      	cbz	r0, 405cca <__swbuf_r+0x12>
  405cc2:	6983      	ldr	r3, [r0, #24]
  405cc4:	b90b      	cbnz	r3, 405cca <__swbuf_r+0x12>
  405cc6:	f7ff f987 	bl	404fd8 <__sinit>
  405cca:	4b21      	ldr	r3, [pc, #132]	; (405d50 <__swbuf_r+0x98>)
  405ccc:	429c      	cmp	r4, r3
  405cce:	d12a      	bne.n	405d26 <__swbuf_r+0x6e>
  405cd0:	686c      	ldr	r4, [r5, #4]
  405cd2:	69a3      	ldr	r3, [r4, #24]
  405cd4:	60a3      	str	r3, [r4, #8]
  405cd6:	89a3      	ldrh	r3, [r4, #12]
  405cd8:	071a      	lsls	r2, r3, #28
  405cda:	d52e      	bpl.n	405d3a <__swbuf_r+0x82>
  405cdc:	6923      	ldr	r3, [r4, #16]
  405cde:	b363      	cbz	r3, 405d3a <__swbuf_r+0x82>
  405ce0:	6923      	ldr	r3, [r4, #16]
  405ce2:	6820      	ldr	r0, [r4, #0]
  405ce4:	1ac0      	subs	r0, r0, r3
  405ce6:	6963      	ldr	r3, [r4, #20]
  405ce8:	b2f6      	uxtb	r6, r6
  405cea:	4298      	cmp	r0, r3
  405cec:	4637      	mov	r7, r6
  405cee:	db04      	blt.n	405cfa <__swbuf_r+0x42>
  405cf0:	4621      	mov	r1, r4
  405cf2:	4628      	mov	r0, r5
  405cf4:	f7ff f906 	bl	404f04 <_fflush_r>
  405cf8:	bb28      	cbnz	r0, 405d46 <__swbuf_r+0x8e>
  405cfa:	68a3      	ldr	r3, [r4, #8]
  405cfc:	3b01      	subs	r3, #1
  405cfe:	60a3      	str	r3, [r4, #8]
  405d00:	6823      	ldr	r3, [r4, #0]
  405d02:	1c5a      	adds	r2, r3, #1
  405d04:	6022      	str	r2, [r4, #0]
  405d06:	701e      	strb	r6, [r3, #0]
  405d08:	6963      	ldr	r3, [r4, #20]
  405d0a:	3001      	adds	r0, #1
  405d0c:	4298      	cmp	r0, r3
  405d0e:	d004      	beq.n	405d1a <__swbuf_r+0x62>
  405d10:	89a3      	ldrh	r3, [r4, #12]
  405d12:	07db      	lsls	r3, r3, #31
  405d14:	d519      	bpl.n	405d4a <__swbuf_r+0x92>
  405d16:	2e0a      	cmp	r6, #10
  405d18:	d117      	bne.n	405d4a <__swbuf_r+0x92>
  405d1a:	4621      	mov	r1, r4
  405d1c:	4628      	mov	r0, r5
  405d1e:	f7ff f8f1 	bl	404f04 <_fflush_r>
  405d22:	b190      	cbz	r0, 405d4a <__swbuf_r+0x92>
  405d24:	e00f      	b.n	405d46 <__swbuf_r+0x8e>
  405d26:	4b0b      	ldr	r3, [pc, #44]	; (405d54 <__swbuf_r+0x9c>)
  405d28:	429c      	cmp	r4, r3
  405d2a:	d101      	bne.n	405d30 <__swbuf_r+0x78>
  405d2c:	68ac      	ldr	r4, [r5, #8]
  405d2e:	e7d0      	b.n	405cd2 <__swbuf_r+0x1a>
  405d30:	4b09      	ldr	r3, [pc, #36]	; (405d58 <__swbuf_r+0xa0>)
  405d32:	429c      	cmp	r4, r3
  405d34:	bf08      	it	eq
  405d36:	68ec      	ldreq	r4, [r5, #12]
  405d38:	e7cb      	b.n	405cd2 <__swbuf_r+0x1a>
  405d3a:	4621      	mov	r1, r4
  405d3c:	4628      	mov	r0, r5
  405d3e:	f000 f81f 	bl	405d80 <__swsetup_r>
  405d42:	2800      	cmp	r0, #0
  405d44:	d0cc      	beq.n	405ce0 <__swbuf_r+0x28>
  405d46:	f04f 37ff 	mov.w	r7, #4294967295
  405d4a:	4638      	mov	r0, r7
  405d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405d4e:	bf00      	nop
  405d50:	00406560 	.word	0x00406560
  405d54:	00406580 	.word	0x00406580
  405d58:	00406540 	.word	0x00406540

00405d5c <_write_r>:
  405d5c:	b538      	push	{r3, r4, r5, lr}
  405d5e:	4c07      	ldr	r4, [pc, #28]	; (405d7c <_write_r+0x20>)
  405d60:	4605      	mov	r5, r0
  405d62:	4608      	mov	r0, r1
  405d64:	4611      	mov	r1, r2
  405d66:	2200      	movs	r2, #0
  405d68:	6022      	str	r2, [r4, #0]
  405d6a:	461a      	mov	r2, r3
  405d6c:	f7fb fdae 	bl	4018cc <_write>
  405d70:	1c43      	adds	r3, r0, #1
  405d72:	d102      	bne.n	405d7a <_write_r+0x1e>
  405d74:	6823      	ldr	r3, [r4, #0]
  405d76:	b103      	cbz	r3, 405d7a <_write_r+0x1e>
  405d78:	602b      	str	r3, [r5, #0]
  405d7a:	bd38      	pop	{r3, r4, r5, pc}
  405d7c:	204002dc 	.word	0x204002dc

00405d80 <__swsetup_r>:
  405d80:	4b32      	ldr	r3, [pc, #200]	; (405e4c <__swsetup_r+0xcc>)
  405d82:	b570      	push	{r4, r5, r6, lr}
  405d84:	681d      	ldr	r5, [r3, #0]
  405d86:	4606      	mov	r6, r0
  405d88:	460c      	mov	r4, r1
  405d8a:	b125      	cbz	r5, 405d96 <__swsetup_r+0x16>
  405d8c:	69ab      	ldr	r3, [r5, #24]
  405d8e:	b913      	cbnz	r3, 405d96 <__swsetup_r+0x16>
  405d90:	4628      	mov	r0, r5
  405d92:	f7ff f921 	bl	404fd8 <__sinit>
  405d96:	4b2e      	ldr	r3, [pc, #184]	; (405e50 <__swsetup_r+0xd0>)
  405d98:	429c      	cmp	r4, r3
  405d9a:	d10f      	bne.n	405dbc <__swsetup_r+0x3c>
  405d9c:	686c      	ldr	r4, [r5, #4]
  405d9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405da2:	b29a      	uxth	r2, r3
  405da4:	0715      	lsls	r5, r2, #28
  405da6:	d42c      	bmi.n	405e02 <__swsetup_r+0x82>
  405da8:	06d0      	lsls	r0, r2, #27
  405daa:	d411      	bmi.n	405dd0 <__swsetup_r+0x50>
  405dac:	2209      	movs	r2, #9
  405dae:	6032      	str	r2, [r6, #0]
  405db0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405db4:	81a3      	strh	r3, [r4, #12]
  405db6:	f04f 30ff 	mov.w	r0, #4294967295
  405dba:	bd70      	pop	{r4, r5, r6, pc}
  405dbc:	4b25      	ldr	r3, [pc, #148]	; (405e54 <__swsetup_r+0xd4>)
  405dbe:	429c      	cmp	r4, r3
  405dc0:	d101      	bne.n	405dc6 <__swsetup_r+0x46>
  405dc2:	68ac      	ldr	r4, [r5, #8]
  405dc4:	e7eb      	b.n	405d9e <__swsetup_r+0x1e>
  405dc6:	4b24      	ldr	r3, [pc, #144]	; (405e58 <__swsetup_r+0xd8>)
  405dc8:	429c      	cmp	r4, r3
  405dca:	bf08      	it	eq
  405dcc:	68ec      	ldreq	r4, [r5, #12]
  405dce:	e7e6      	b.n	405d9e <__swsetup_r+0x1e>
  405dd0:	0751      	lsls	r1, r2, #29
  405dd2:	d512      	bpl.n	405dfa <__swsetup_r+0x7a>
  405dd4:	6b61      	ldr	r1, [r4, #52]	; 0x34
  405dd6:	b141      	cbz	r1, 405dea <__swsetup_r+0x6a>
  405dd8:	f104 0344 	add.w	r3, r4, #68	; 0x44
  405ddc:	4299      	cmp	r1, r3
  405dde:	d002      	beq.n	405de6 <__swsetup_r+0x66>
  405de0:	4630      	mov	r0, r6
  405de2:	f7ff fd2b 	bl	40583c <_free_r>
  405de6:	2300      	movs	r3, #0
  405de8:	6363      	str	r3, [r4, #52]	; 0x34
  405dea:	89a3      	ldrh	r3, [r4, #12]
  405dec:	f023 0324 	bic.w	r3, r3, #36	; 0x24
  405df0:	81a3      	strh	r3, [r4, #12]
  405df2:	2300      	movs	r3, #0
  405df4:	6063      	str	r3, [r4, #4]
  405df6:	6923      	ldr	r3, [r4, #16]
  405df8:	6023      	str	r3, [r4, #0]
  405dfa:	89a3      	ldrh	r3, [r4, #12]
  405dfc:	f043 0308 	orr.w	r3, r3, #8
  405e00:	81a3      	strh	r3, [r4, #12]
  405e02:	6923      	ldr	r3, [r4, #16]
  405e04:	b94b      	cbnz	r3, 405e1a <__swsetup_r+0x9a>
  405e06:	89a3      	ldrh	r3, [r4, #12]
  405e08:	f403 7320 	and.w	r3, r3, #640	; 0x280
  405e0c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  405e10:	d003      	beq.n	405e1a <__swsetup_r+0x9a>
  405e12:	4621      	mov	r1, r4
  405e14:	4630      	mov	r0, r6
  405e16:	f7ff f99b 	bl	405150 <__smakebuf_r>
  405e1a:	89a2      	ldrh	r2, [r4, #12]
  405e1c:	f012 0301 	ands.w	r3, r2, #1
  405e20:	d00c      	beq.n	405e3c <__swsetup_r+0xbc>
  405e22:	2300      	movs	r3, #0
  405e24:	60a3      	str	r3, [r4, #8]
  405e26:	6963      	ldr	r3, [r4, #20]
  405e28:	425b      	negs	r3, r3
  405e2a:	61a3      	str	r3, [r4, #24]
  405e2c:	6923      	ldr	r3, [r4, #16]
  405e2e:	b953      	cbnz	r3, 405e46 <__swsetup_r+0xc6>
  405e30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405e34:	f013 0080 	ands.w	r0, r3, #128	; 0x80
  405e38:	d1ba      	bne.n	405db0 <__swsetup_r+0x30>
  405e3a:	bd70      	pop	{r4, r5, r6, pc}
  405e3c:	0792      	lsls	r2, r2, #30
  405e3e:	bf58      	it	pl
  405e40:	6963      	ldrpl	r3, [r4, #20]
  405e42:	60a3      	str	r3, [r4, #8]
  405e44:	e7f2      	b.n	405e2c <__swsetup_r+0xac>
  405e46:	2000      	movs	r0, #0
  405e48:	e7f7      	b.n	405e3a <__swsetup_r+0xba>
  405e4a:	bf00      	nop
  405e4c:	20400000 	.word	0x20400000
  405e50:	00406560 	.word	0x00406560
  405e54:	00406580 	.word	0x00406580
  405e58:	00406540 	.word	0x00406540

00405e5c <_close_r>:
  405e5c:	b538      	push	{r3, r4, r5, lr}
  405e5e:	4c06      	ldr	r4, [pc, #24]	; (405e78 <_close_r+0x1c>)
  405e60:	2300      	movs	r3, #0
  405e62:	4605      	mov	r5, r0
  405e64:	4608      	mov	r0, r1
  405e66:	6023      	str	r3, [r4, #0]
  405e68:	f7fa ffb6 	bl	400dd8 <_close>
  405e6c:	1c43      	adds	r3, r0, #1
  405e6e:	d102      	bne.n	405e76 <_close_r+0x1a>
  405e70:	6823      	ldr	r3, [r4, #0]
  405e72:	b103      	cbz	r3, 405e76 <_close_r+0x1a>
  405e74:	602b      	str	r3, [r5, #0]
  405e76:	bd38      	pop	{r3, r4, r5, pc}
  405e78:	204002dc 	.word	0x204002dc

00405e7c <_fstat_r>:
  405e7c:	b538      	push	{r3, r4, r5, lr}
  405e7e:	4c07      	ldr	r4, [pc, #28]	; (405e9c <_fstat_r+0x20>)
  405e80:	2300      	movs	r3, #0
  405e82:	4605      	mov	r5, r0
  405e84:	4608      	mov	r0, r1
  405e86:	4611      	mov	r1, r2
  405e88:	6023      	str	r3, [r4, #0]
  405e8a:	f7fa ffa8 	bl	400dde <_fstat>
  405e8e:	1c43      	adds	r3, r0, #1
  405e90:	d102      	bne.n	405e98 <_fstat_r+0x1c>
  405e92:	6823      	ldr	r3, [r4, #0]
  405e94:	b103      	cbz	r3, 405e98 <_fstat_r+0x1c>
  405e96:	602b      	str	r3, [r5, #0]
  405e98:	bd38      	pop	{r3, r4, r5, pc}
  405e9a:	bf00      	nop
  405e9c:	204002dc 	.word	0x204002dc

00405ea0 <_isatty_r>:
  405ea0:	b538      	push	{r3, r4, r5, lr}
  405ea2:	4c06      	ldr	r4, [pc, #24]	; (405ebc <_isatty_r+0x1c>)
  405ea4:	2300      	movs	r3, #0
  405ea6:	4605      	mov	r5, r0
  405ea8:	4608      	mov	r0, r1
  405eaa:	6023      	str	r3, [r4, #0]
  405eac:	f7fa ff9c 	bl	400de8 <_isatty>
  405eb0:	1c43      	adds	r3, r0, #1
  405eb2:	d102      	bne.n	405eba <_isatty_r+0x1a>
  405eb4:	6823      	ldr	r3, [r4, #0]
  405eb6:	b103      	cbz	r3, 405eba <_isatty_r+0x1a>
  405eb8:	602b      	str	r3, [r5, #0]
  405eba:	bd38      	pop	{r3, r4, r5, pc}
  405ebc:	204002dc 	.word	0x204002dc

00405ec0 <_lseek_r>:
  405ec0:	b538      	push	{r3, r4, r5, lr}
  405ec2:	4c07      	ldr	r4, [pc, #28]	; (405ee0 <_lseek_r+0x20>)
  405ec4:	4605      	mov	r5, r0
  405ec6:	4608      	mov	r0, r1
  405ec8:	4611      	mov	r1, r2
  405eca:	2200      	movs	r2, #0
  405ecc:	6022      	str	r2, [r4, #0]
  405ece:	461a      	mov	r2, r3
  405ed0:	f7fa ff8c 	bl	400dec <_lseek>
  405ed4:	1c43      	adds	r3, r0, #1
  405ed6:	d102      	bne.n	405ede <_lseek_r+0x1e>
  405ed8:	6823      	ldr	r3, [r4, #0]
  405eda:	b103      	cbz	r3, 405ede <_lseek_r+0x1e>
  405edc:	602b      	str	r3, [r5, #0]
  405ede:	bd38      	pop	{r3, r4, r5, pc}
  405ee0:	204002dc 	.word	0x204002dc

00405ee4 <__ascii_mbtowc>:
  405ee4:	b082      	sub	sp, #8
  405ee6:	b901      	cbnz	r1, 405eea <__ascii_mbtowc+0x6>
  405ee8:	a901      	add	r1, sp, #4
  405eea:	b142      	cbz	r2, 405efe <__ascii_mbtowc+0x1a>
  405eec:	b14b      	cbz	r3, 405f02 <__ascii_mbtowc+0x1e>
  405eee:	7813      	ldrb	r3, [r2, #0]
  405ef0:	600b      	str	r3, [r1, #0]
  405ef2:	7812      	ldrb	r2, [r2, #0]
  405ef4:	1c10      	adds	r0, r2, #0
  405ef6:	bf18      	it	ne
  405ef8:	2001      	movne	r0, #1
  405efa:	b002      	add	sp, #8
  405efc:	4770      	bx	lr
  405efe:	4610      	mov	r0, r2
  405f00:	e7fb      	b.n	405efa <__ascii_mbtowc+0x16>
  405f02:	f06f 0001 	mvn.w	r0, #1
  405f06:	e7f8      	b.n	405efa <__ascii_mbtowc+0x16>

00405f08 <__malloc_lock>:
  405f08:	4770      	bx	lr

00405f0a <__malloc_unlock>:
  405f0a:	4770      	bx	lr

00405f0c <_read_r>:
  405f0c:	b538      	push	{r3, r4, r5, lr}
  405f0e:	4c07      	ldr	r4, [pc, #28]	; (405f2c <_read_r+0x20>)
  405f10:	4605      	mov	r5, r0
  405f12:	4608      	mov	r0, r1
  405f14:	4611      	mov	r1, r2
  405f16:	2200      	movs	r2, #0
  405f18:	6022      	str	r2, [r4, #0]
  405f1a:	461a      	mov	r2, r3
  405f1c:	f7fb fcc4 	bl	4018a8 <_read>
  405f20:	1c43      	adds	r3, r0, #1
  405f22:	d102      	bne.n	405f2a <_read_r+0x1e>
  405f24:	6823      	ldr	r3, [r4, #0]
  405f26:	b103      	cbz	r3, 405f2a <_read_r+0x1e>
  405f28:	602b      	str	r3, [r5, #0]
  405f2a:	bd38      	pop	{r3, r4, r5, pc}
  405f2c:	204002dc 	.word	0x204002dc

00405f30 <__ascii_wctomb>:
  405f30:	b149      	cbz	r1, 405f46 <__ascii_wctomb+0x16>
  405f32:	2aff      	cmp	r2, #255	; 0xff
  405f34:	bf85      	ittet	hi
  405f36:	238a      	movhi	r3, #138	; 0x8a
  405f38:	6003      	strhi	r3, [r0, #0]
  405f3a:	700a      	strbls	r2, [r1, #0]
  405f3c:	f04f 30ff 	movhi.w	r0, #4294967295
  405f40:	bf98      	it	ls
  405f42:	2001      	movls	r0, #1
  405f44:	4770      	bx	lr
  405f46:	4608      	mov	r0, r1
  405f48:	4770      	bx	lr
	...

00405f4c <__aeabi_dcmpun>:
  405f4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f54:	d102      	bne.n	405f5c <__aeabi_dcmpun+0x10>
  405f56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405f5a:	d10a      	bne.n	405f72 <__aeabi_dcmpun+0x26>
  405f5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f64:	d102      	bne.n	405f6c <__aeabi_dcmpun+0x20>
  405f66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405f6a:	d102      	bne.n	405f72 <__aeabi_dcmpun+0x26>
  405f6c:	f04f 0000 	mov.w	r0, #0
  405f70:	4770      	bx	lr
  405f72:	f04f 0001 	mov.w	r0, #1
  405f76:	4770      	bx	lr
  405f78:	4441200a 	.word	0x4441200a
  405f7c:	65542043 	.word	0x65542043
  405f80:	7265706d 	.word	0x7265706d
  405f84:	72757461 	.word	0x72757461
  405f88:	65542065 	.word	0x65542065
  405f8c:	6e697473 	.word	0x6e697473
  405f90:	2d2d2067 	.word	0x2d2d2067
  405f94:	2d2d2d2d 	.word	0x2d2d2d2d
  405f98:	2d2d2d2d 	.word	0x2d2d2d2d
  405f9c:	2d2d2d2d 	.word	0x2d2d2d2d
  405fa0:	0a2d2d2d 	.word	0x0a2d2d2d
  405fa4:	00000000 	.word	0x00000000
  405fa8:	20776152 	.word	0x20776152
  405fac:	61746144 	.word	0x61746144
  405fb0:	00000a20 	.word	0x00000a20
  405fb4:	706d6554 	.word	0x706d6554
  405fb8:	203d2031 	.word	0x203d2031
  405fbc:	09206925 	.word	0x09206925
  405fc0:	65542009 	.word	0x65542009
  405fc4:	2032706d 	.word	0x2032706d
  405fc8:	6925203d 	.word	0x6925203d
  405fcc:	20090920 	.word	0x20090920
  405fd0:	706d6554 	.word	0x706d6554
  405fd4:	203d2033 	.word	0x203d2033
  405fd8:	0a206925 	.word	0x0a206925
  405fdc:	00000000 	.word	0x00000000
  405fe0:	706d6554 	.word	0x706d6554
  405fe4:	203d2034 	.word	0x203d2034
  405fe8:	09206925 	.word	0x09206925
  405fec:	65542009 	.word	0x65542009
  405ff0:	2035706d 	.word	0x2035706d
  405ff4:	6925203d 	.word	0x6925203d
  405ff8:	20090920 	.word	0x20090920
  405ffc:	706d6554 	.word	0x706d6554
  406000:	203d2036 	.word	0x203d2036
  406004:	0a206925 	.word	0x0a206925
  406008:	00000000 	.word	0x00000000
  40600c:	706d6554 	.word	0x706d6554
  406010:	746f4d20 	.word	0x746f4d20
  406014:	3d20726f 	.word	0x3d20726f
  406018:	20692520 	.word	0x20692520
  40601c:	00000a20 	.word	0x00000a20
  406020:	7543200a 	.word	0x7543200a
  406024:	6e657272 	.word	0x6e657272
  406028:	6e612074 	.word	0x6e612074
  40602c:	6f562064 	.word	0x6f562064
  406030:	6761746c 	.word	0x6761746c
  406034:	65542065 	.word	0x65542065
  406038:	6e697473 	.word	0x6e697473
  40603c:	2d2d2067 	.word	0x2d2d2067
  406040:	2d2d2d2d 	.word	0x2d2d2d2d
  406044:	2d2d2d2d 	.word	0x2d2d2d2d
  406048:	2d2d2d2d 	.word	0x2d2d2d2d
  40604c:	0a2d2d2d 	.word	0x0a2d2d2d
  406050:	00000000 	.word	0x00000000
  406054:	72727543 	.word	0x72727543
  406058:	203d2041 	.word	0x203d2041
  40605c:	09206925 	.word	0x09206925
  406060:	75432009 	.word	0x75432009
  406064:	20427272 	.word	0x20427272
  406068:	6925203d 	.word	0x6925203d
  40606c:	20090920 	.word	0x20090920
  406070:	72727543 	.word	0x72727543
  406074:	203d2043 	.word	0x203d2043
  406078:	0a206925 	.word	0x0a206925
  40607c:	00000000 	.word	0x00000000
  406080:	70707553 	.word	0x70707553
  406084:	5620796c 	.word	0x5620796c
  406088:	61746c6f 	.word	0x61746c6f
  40608c:	3d206567 	.word	0x3d206567
  406090:	20692520 	.word	0x20692520
  406094:	00000a20 	.word	0x00000a20
  406098:	682f2e2e 	.word	0x682f2e2e
  40609c:	732f6c61 	.word	0x732f6c61
  4060a0:	682f6372 	.word	0x682f6372
  4060a4:	615f6c61 	.word	0x615f6c61
  4060a8:	735f6364 	.word	0x735f6364
  4060ac:	2e636e79 	.word	0x2e636e79
  4060b0:	00000063 	.word	0x00000063
  4060b4:	682f2e2e 	.word	0x682f2e2e
  4060b8:	732f6c61 	.word	0x732f6c61
  4060bc:	682f6372 	.word	0x682f6372
  4060c0:	695f6c61 	.word	0x695f6c61
  4060c4:	00632e6f 	.word	0x00632e6f
  4060c8:	682f2e2e 	.word	0x682f2e2e
  4060cc:	732f6c61 	.word	0x732f6c61
  4060d0:	682f6372 	.word	0x682f6372
  4060d4:	705f6c61 	.word	0x705f6c61
  4060d8:	632e6d77 	.word	0x632e6d77
  4060dc:	00000000 	.word	0x00000000
  4060e0:	682f2e2e 	.word	0x682f2e2e
  4060e4:	732f6c61 	.word	0x732f6c61
  4060e8:	682f6372 	.word	0x682f6372
  4060ec:	755f6c61 	.word	0x755f6c61
  4060f0:	74726173 	.word	0x74726173
  4060f4:	6e79735f 	.word	0x6e79735f
  4060f8:	00632e63 	.word	0x00632e63

004060fc <_afecs>:
  4060fc:	00000000 2f843100 03000000 ffffffff     .....1./........
  40610c:	0000ffff 00000000 00000000 00000000     ................
  40611c:	0000010c 00000000 00000000 00000000     ................
  40612c:	00000000 00000200 00000200 00000200     ................
  40613c:	00000200 00000200 00000200 00000200     ................
  40614c:	00000200 00000200 00000200 00000200     ................
  40615c:	00000200 00000001 2f843100 03000000     .........1./....
  40616c:	ffffffff 0000ffff 00000000 00000000     ................
  40617c:	00000000 0000010c 00000000 00000000     ................
	...
  406194:	00000200 00000200 00000200 00000200     ................
  4061a4:	00000200 00000200 00000200 00000200     ................
  4061b4:	00000200 00000200 00000200 00000200     ................
  4061c4:	682f2e2e 612f6c70 2f636566 5f6c7068     ../hpl/afec/hpl_
  4061d4:	63656661 0000632e                       afec.c..

004061dc <_ext_irq>:
  4061dc:	00000000 00000024 00000000 00000000     ....$...........
	...
  4061f8:	00000003 00080000 00000000 00000000     ................
	...

00406214 <_pio_irq_n>:
  406214:	100c0b0a 00000011 682f2e2e 702f6c70     ........../hpl/p
  406224:	682f6f69 705f6c70 655f6f69 632e7478     io/hpl_pio_ext.c
  406234:	00000000                                ....

00406238 <_pwms>:
  406238:	40020000 0000001f 00010019 00000001     ...@............
  406248:	00000001 000000ff 00000000 00000004     ................
	...
  406264:	00000002 004062c0 00000000 20400250     .....b@.....P.@ 
  406274:	4005c000 0000003c 00010019 00000001     ...@<...........
  406284:	00000001 000000ff 00000000 00000004     ................
	...
  4062a0:	00000001 004062b0 00000000 20400244     .....b@.....D.@ 

004062b0 <_ch_cfg1>:
  4062b0:	00000000 0000010b 000003e8 00000200     ................

004062c0 <_ch_cfg0>:
  4062c0:	00000000 0000010b 000003e8 00000200     ................
  4062d0:	00000002 0000010b 000003e8 00000200     ................
  4062e0:	682f2e2e 702f6c70 682f6d77 705f6c70     ../hpl/pwm/hpl_p
  4062f0:	632e6d77 00000000                       wm.c....

004062f8 <_usarts>:
  4062f8:	00000001 001008c0 000100f4 682f2e2e     ............../h
  406308:	752f6c70 74726173 6c70682f 6173755f     pl/usart/hpl_usa
  406318:	632e7472 00000000                       rt.c....

00406320 <npio2_hw>:
  406320:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
  406330:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
  406340:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
  406350:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
  406360:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
  406370:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
  406380:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
  406390:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

004063a0 <two_over_pi>:
  4063a0:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
  4063b0:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
  4063c0:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
  4063d0:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
  4063e0:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
  4063f0:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
  406400:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
  406410:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
  406420:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
  406430:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
  406440:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
  406450:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
  406460:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
  406470:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
  406480:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
  406490:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
  4064a0:	0060e27b 00c08c6b                       {.`.k...

004064a8 <PIo2>:
  4064a8:	40000000 3ff921fb 00000000 3e74442d     ...@.!.?....-Dt>
  4064b8:	80000000 3cf84698 60000000 3b78cc51     .....F.<...`Q.x;
  4064c8:	80000000 39f01b83 40000000 387a2520     .......9...@ %z8
  4064d8:	80000000 36e38222 00000000 3569f31d     ...."..6......i5

004064e8 <init_jk>:
  4064e8:	00000002 00000003 00000004 00000006     ................

004064f8 <_global_impure_ptr>:
  4064f8:	20400004 00464e49 00666e69 004e414e     ..@ INF.inf.NAN.
  406508:	006e616e 31300030 35343332 39383736     nan.0.0123456789
  406518:	44434241 30004645 34333231 38373635     ABCDEF.012345678
  406528:	63626139 00666564 69666e49 7974696e     9abcdef.Infinity
  406538:	4e614e00 00000000                       .NaN....

00406540 <__sf_fake_stderr>:
	...

00406560 <__sf_fake_stdin>:
	...

00406580 <__sf_fake_stdout>:
	...

004065a0 <__mprec_bigtens>:
  4065a0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  4065b0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  4065c0:	7f73bf3c 75154fdd                       <.s..O.u

004065c8 <__mprec_tens>:
  4065c8:	00000000 3ff00000 00000000 40240000     .......?......$@
  4065d8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  4065e8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  4065f8:	00000000 412e8480 00000000 416312d0     .......A......cA
  406608:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  406618:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  406628:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  406638:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  406648:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  406658:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  406668:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  406678:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  406688:	79d99db4 44ea7843                       ...yCx.D

00406690 <p05.6047>:
  406690:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
  4066a0:	6c680020 6665004c 47464567 50004300      .hlL.efgEFG.C.P
  4066b0:	5849534f 00002e00                                OSIX...

004066b7 <_ctype_>:
  4066b7:	20202000 20202020 28282020 20282828     .         ((((( 
  4066c7:	20202020 20202020 20202020 20202020                     
  4066d7:	10108820 10101010 10101010 10101010      ...............
  4066e7:	04040410 04040404 10040404 10101010     ................
  4066f7:	41411010 41414141 01010101 01010101     ..AAAAAA........
  406707:	01010101 01010101 01010101 10101010     ................
  406717:	42421010 42424242 02020202 02020202     ..BBBBBB........
  406727:	02020202 02020202 02020202 10101010     ................
  406737:	00000020 00000000 00000000 00000000      ...............
	...

004067b8 <_init>:
  4067b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4067ba:	bf00      	nop
  4067bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4067be:	bc08      	pop	{r3}
  4067c0:	469e      	mov	lr, r3
  4067c2:	4770      	bx	lr

004067c4 <__init_array_start>:
  4067c4:	0040018d 	.word	0x0040018d

004067c8 <_fini>:
  4067c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4067ca:	bf00      	nop
  4067cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
  4067ce:	bc08      	pop	{r3}
  4067d0:	469e      	mov	lr, r3
  4067d2:	4770      	bx	lr

004067d4 <__fini_array_start>:
  4067d4:	00400169 	.word	0x00400169
